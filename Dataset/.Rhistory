Y.0 <- as.numeric(U.Y<plogis(-0.75+W1-2*W2+2.5*0+0*W1))
Psi.F <- Y.1 - Y.0
Psi.F
mean(Psi.F)
Y.1 <- as.numeric(U.Y<plogis(-0.75+W1-2*W2+2.5*1+1*W1))
Y.0 <- as.numeric(U.Y<plogis(-0.75+W1-2*W2+2.5*0+0*W1))
Psi.F<- mean(Y.1 - Y.0)
Psi.F
Psi.P0
A.stratum1<- A[W1== 0 & W2==1]
A.stratum2<- A[W1== 0 & W2==0]
A.stratum3<- A[W1== 1 & W2==1]
A.stratum4<- A[W1== 1 & W2==0]
mean(A.stratum1)
mean(A.stratum2)
mean(A.stratum3)
mean(A.stratum4)
#1. First set the seed to 252.
set.seed<-252
#2. Set the number of draws n = 100000.
n <- 100000
#3. Sample n i.i.d. observations of random variable O = (W1, W2, A, Y.)
U.W1<- runif(n, min=0, max=1)
U.W2<- runif(n, min=0, max=1)
U.A<- runif(n, min=0, max=1)
U.Y<- runif(n, min=0, max=1)
W1<-as.numeric(U.W1<0.50)
W2<-as.numeric(U.W2<0.50)
A<-as.numeric(U.A<plogis(-0.5+W1-1.5*W2))
Y<-as.numeric(U.Y<plogis(-0.75+W1-2*W2+2.5*A+A*W1))
#4. Bonus.
Y.1 <- as.numeric(U.Y<plogis(-0.75+W1-2*W2+2.5*1+1*W1))
Y.0 <- as.numeric(U.Y<plogis(-0.75+W1-2*W2+2.5*0+0*W1))
Psi.F<- mean(Y.1 - Y.0)
Psi.F
#5 The positivity assumption holds because there is a positive probability of receiving the intervention package (A = 1) and the standard of care (A = 0) within all possible strata of health care access (W1) and conflict history (W2).
A.stratum1<- A[W1== 0 & W2==1]
A.stratum2<- A[W1== 0 & W2==0]
A.stratum3<- A[W1== 1 & W2==1]
A.stratum4<- A[W1== 1 & W2==0]
mean(A.stratum1)
mean(A.stratum2)
mean(A.stratum3)
mean(A.stratum4)
(-0.5 + 1 - 1.5*1)
plogis(-1)
(-0.5 + 1 - 1.5*0)
plogis(.5)
(-0.5 + 0 - 1.5*1)
plogs(-2)
plogis(-2)
(-0.5 + 0 - 1.5*0)
plogis(-.5)
mean(A.stratum1)
mean(A.stratum2)
mean(A.stratum3)
mean(A.stratum4)
Psi.P0 <-
(plogis(-0.75+0-2*1+2.5*1+1*0) - plogis(-0.75+0-2*1+2.5*0+0*0)) * .25 +
(plogis(-0.75+0-2*0+2.5*1+1*0) - plogis(-0.75+0-2*0+2.5*0+0*0)) * .25 +
(plogis(-0.75+1-2*1+2.5*1+1*1) - plogis(-0.75+1-2*1+2.5*0+0*1)) * .25 +
(plogis(-0.75+1-2*0+2.5*1+1*1) - plogis(-0.75+1-2*0+2.5*0+0*1)) * .25
Psi.P0
#1. First set the seed to 252.
set.seed<-252
#2. Set the number of draws n = 100000.
n <- 100000
#3. Sample n i.i.d. observations of random variable O = (W1, W2, A, Y.)
U.W1<- runif(n, min=0, max=1)
U.W2<- runif(n, min=0, max=1)
U.A<- runif(n, min=0, max=1)
U.Y<- runif(n, min=0, max=1)
W1<-as.numeric(U.W1<0.50)
W2<-as.numeric(U.W2<0.50)
A<-as.numeric(U.A<plogis(-0.5+W1-1.5*W2))
Y<-as.numeric(U.Y<plogis(-0.75+W1-2*W2+2.5*A+A*W1))
#4. Bonus.
Y.1 <- as.numeric(U.Y<plogis(-0.75+W1-2*W2+2.5*1+1*W1))
Y.0 <- as.numeric(U.Y<plogis(-0.75+W1-2*W2+2.5*0+0*W1))
Psi.F<- mean(Y.1 - Y.0)
Psi.F
#5. Evaluate the positivity assumption. The positivity assumption holds because there is a positive probability of receiving the intervention package (A = 1) and the standard of care (A = 0) within all possible strata of health care access (W1) and conflict history (W2).
A.stratum1<- A[W1== 0 & W2==1]
A.stratum2<- A[W1== 0 & W2==0]
A.stratum3<- A[W1== 1 & W2==1]
A.stratum4<- A[W1== 1 & W2==0]
mean(A.stratum1)
mean(A.stratum2)
mean(A.stratum3)
mean(A.stratum4)
#6.
#1. Set the number of iterations R to 500 and the number of observations n to 200.
R <- 500
n <- 200
estimates<- matrix(NA, nrow=R, ncol=4)
head(estimates)
tail(estimates)
#1. Set the number of iterations R to 500 and the number of observations n to 200.
R <- 500
n <- 200
#2.
estimates<- matrix(NA, nrow=R, ncol=4)
#3. Inside a for loop from r equals 1 to R (500), do the following.
for(i in 1:R){
#a.
U.W1<- runif(n, min=0, max=1)
U.W2<- runif(n, min=0, max=1)
U.A<- runif(n, min=0, max=1)
U.Y<- runif(n, min=0, max=1)
W1<-as.numeric(U.W1<0.50)
W2<-as.numeric(U.W2<0.50)
A<-as.numeric(U.A<plogis(-0.5+W1-1.5*W2))
Y<-as.numeric(U.Y<plogis(-0.75+W1-2*W2+2.5*A+A*W1))
#b.
Obs<- data.frame(W1,W2,A,Y)
#c.
txt<- control <- Obs
txt$A <-1
control$A <- 0
#d.
reg.model1<- glm(Y ~ A, family='binomial', data=Obs)
#e.
reg.model2<- glm(Y ~ A + W1, family='binomial', data=Obs)
#f.
reg.model3<- glm(Y ~ A + W2, family='binomial', data=Obs)
#g.
reg.model4<- glm(Y ~ A + W1 + W2 + A*W1 + A*W2, family='binomial', data=Obs)
#h.
predictY.txt1<- predict(reg.model1, newdata = txt, type='response')
predictY.txt2<- predict(reg.model2, newdata = txt, type='response')
predictY.txt3<- predict(reg.model3, newdata = txt, type='response')
predictY.txt4<- predict(reg.model4, newdata = txt, type='response')
#i.
predictY.control1<- predict(reg.model1, newdata = control, type='response')
predictY.control2<- predict(reg.model2, newdata = control, type='response')
predictY.control3<- predict(reg.model3, newdata = control, type='response')
predictY.control4<- predict(reg.model4, newdata = control, type='response')
#j.
psi.hat1<- mean(predictY.txt1 - predictY.control1)
psi.hat2<- mean(predictY.txt2 - predictY.control2)
psi.hat3<- mean(predictY.txt3 - predictY.control3)
psi.hat4<- mean(predictY.txt4 - predictY.control4)
#k.
estimates[r,] <- c(psi.hat1, psi.hat2, psi.hat3, psi.hat4)
}
#1. Set the number of iterations R to 500 and the number of observations n to 200.
R <- 500
n <- 200
#2.
estimates<- matrix(NA, nrow=R, ncol=4)
#3. Inside a for loop from r equals 1 to R (500), do the following.
for(r in 1:R){
#a.
U.W1<- runif(n, min=0, max=1)
U.W2<- runif(n, min=0, max=1)
U.A<- runif(n, min=0, max=1)
U.Y<- runif(n, min=0, max=1)
W1<-as.numeric(U.W1<0.50)
W2<-as.numeric(U.W2<0.50)
A<-as.numeric(U.A<plogis(-0.5+W1-1.5*W2))
Y<-as.numeric(U.Y<plogis(-0.75+W1-2*W2+2.5*A+A*W1))
#b.
Obs<- data.frame(W1,W2,A,Y)
#c.
txt<- control <- Obs
txt$A <-1
control$A <- 0
#d.
reg.model1<- glm(Y ~ A, family='binomial', data=Obs)
#e.
reg.model2<- glm(Y ~ A + W1, family='binomial', data=Obs)
#f.
reg.model3<- glm(Y ~ A + W2, family='binomial', data=Obs)
#g.
reg.model4<- glm(Y ~ A + W1 + W2 + A*W1 + A*W2, family='binomial', data=Obs)
#h.
predictY.txt1<- predict(reg.model1, newdata = txt, type='response')
predictY.txt2<- predict(reg.model2, newdata = txt, type='response')
predictY.txt3<- predict(reg.model3, newdata = txt, type='response')
predictY.txt4<- predict(reg.model4, newdata = txt, type='response')
#i.
predictY.control1<- predict(reg.model1, newdata = control, type='response')
predictY.control2<- predict(reg.model2, newdata = control, type='response')
predictY.control3<- predict(reg.model3, newdata = control, type='response')
predictY.control4<- predict(reg.model4, newdata = control, type='response')
#j.
psi.hat1<- mean(predictY.txt1 - predictY.control1)
psi.hat2<- mean(predictY.txt2 - predictY.control2)
psi.hat3<- mean(predictY.txt3 - predictY.control3)
psi.hat4<- mean(predictY.txt4 - predictY.control4)
#k.
estimates[r,] <- c(psi.hat1, psi.hat2, psi.hat3, psi.hat4)
}
#1. Set the number of iterations R to 500 and the number of observations n to 200.
R <- 500
n <- 200
#2.
estimates<- matrix(NA, nrow=R, ncol=4)
#3. Inside a for loop from r equals 1 to R (500), do the following.
for(r in 1:R){
#a.
U.W1<- runif(n, min=0, max=1)
U.W2<- runif(n, min=0, max=1)
U.A<- runif(n, min=0, max=1)
U.Y<- runif(n, min=0, max=1)
W1<-as.numeric(U.W1<0.50)
W2<-as.numeric(U.W2<0.50)
A<-as.numeric(U.A<plogis(-0.5+W1-1.5*W2))
Y<-as.numeric(U.Y<plogis(-0.75+W1-2*W2+2.5*A+A*W1))
#b.
Obs<- data.frame(W1,W2,A,Y)
#c.
txt<- control <- Obs
txt$A <-1
control$A <- 0
#d.
reg.model1<- glm(Y ~ A, family='binomial', data=Obs)
#e.
reg.model2<- glm(Y ~ A + W1, family='binomial', data=Obs)
#f.
reg.model3<- glm(Y ~ A + W2, family='binomial', data=Obs)
#g.
reg.model4<- glm(Y ~ A + W1 + W2 + A*W1 + A*W2, family='binomial', data=Obs)
#h.
predictY.txt1<- predict(reg.model1, newdata = txt, type='response')
predictY.txt2<- predict(reg.model2, newdata = txt, type='response')
predictY.txt3<- predict(reg.model3, newdata = txt, type='response')
predictY.txt4<- predict(reg.model4, newdata = txt, type='response')
#i.
predictY.control1<- predict(reg.model1, newdata = control, type='response')
predictY.control2<- predict(reg.model2, newdata = control, type='response')
predictY.control3<- predict(reg.model3, newdata = control, type='response')
predictY.control4<- predict(reg.model4, newdata = control, type='response')
#j.
psi.hat1<- mean(predictY.txt1 - predictY.control1)
psi.hat2<- mean(predictY.txt2 - predictY.control2)
psi.hat3<- mean(predictY.txt3 - predictY.control3)
psi.hat4<- mean(predictY.txt4 - predictY.control4)
#k.
estimates[r,] <- c(psi.hat1, psi.hat2, psi.hat3, psi.hat4)
}
meanEst<- mean(estimates[,1:4])
meanEst
head(estimates)
meanEst1<- mean(estimates[,1])
meanEst2<- mean(estimates[,2])
meanEst3<- mean(estimates[,3])
meanEst4<- mean(estimates[,4])
meanEst1
meanEst2
meanEst3
meanEst4
Bias1 <- meanEst1 - Psi.P0
Bias1
Bias2 <- meanEst2 - Psi.P0
Bias2
Bias3 <- meanEst3 - Psi.P0
Bias3
Bias4 <- meanEst4 - Psi.P0
Bias4
var(estimates[,4])
var1 <- var(estimates[,1])
var1
var2 <- var(estimates[,2])
var2
var3 <- var(estimates[,3])
var3
var4 <- var(estimates[,4])
var4
mse1 <- mean(estimates[,1] - Psi.P0)^2
mse1
mse1 <- mean(estimates[,1] - Psi.P0)^2
mse1
mse2 <- mean(estimates[,2] - Psi.P0)^2
mse2
mse3 <- mean(estimates[,3] - Psi.P0)^2
mse3
mse4 <- mean(estimates[,4] - Psi.P0)^2
mse4
mse1
(Bias1)^2+var1
Bias1
mean(estimates[,1]-Psi.P0)
mse1
(Bias1)^2+var1
mse1
(meanEst1-Psi.P0)^2
mse1 <- mean(estimates[,1] - Psi.P0)^2
mse1
mse2 <- mean(estimates[,2] - Psi.P0)^2
mse2
mse3 <- mean(estimates[,3] - Psi.P0)^2
mse3
mse4 <- mean(estimates[,4] - Psi.P0)^2
mse4
(22*305)/(253*10)
log(2.652174)
ln(2.652174)
(21*270)/(235*10)
log(2.412766)
log((22*305)/(253*10))
log(2.652)
log((22.5*305.5)/(253.5*10.5))
log((21.5*270.5)/(235.5*10.5))
log((38.5*141.5)/(12.5*102.5))
log((12.5*383.5)/(9.5*136.5))
(1/22.5)+(1/253.5)+(1/10.5)+(1/305.5)
log((1/22.5)+(1/253.5)+(1/10.5)+(1/305.5))
exp((1/22.5)+(1/253.5)+(1/10.5)+(1/305.5))
((1/22.5)+(1/253.5)+(1/10.5)+(1/305.5))^(-)
((1/22.5)+(1/253.5)+(1/10.5)+(1/305.5))^(-1)
((1/38.5) + (1/12.5) + (1/102.5) + (1/141.5))^(-1)
((1/12.5) + (1/9.5) + (1/136.5) + (1/383.5))^(-1)
((1.447*8.143504)+(1.307*5.123037))/(8.143504+5.123037)
8.143504*(1.447 - 1.392937)^2 + 5.123037*(1.307-1.392937)^2
knitr::opts_chunk$set(echo = TRUE)
logOR.0 <- (38.5*141.5)/(12.5*102.5)
logOR.1 <- (12.5*383.5)/(9.5*136.5)
logOR.0 <- log((38.5*141.5)/(12.5*102.5))
logOR.1 <- log((12.5*383.5)/(9.5*136.5))
wi.0 <-(1/38.5 + 1/12.5 + 1/102.5 + 1/141.5)^(-1)
wi.1 <-(1.12.5 + 1/9.5 + 1/136.5 + 1.383.5)^(-1)
wi.0 <-(1/38.5 + 1/12.5 + 1/102.5 + 1/141.5)^(-1)
wi.1 <-(1/12.5 + 1/9.5 + 1/136.5 + 1.383.5)^(-1)
logOR.0 <- log((38.5*141.5)/(12.5*102.5))
logOR.1 <- log((12.5*383.5)/(9.5*136.5))
wi.0 <-(1/38.5 + 1/12.5 + 1/102.5 + 1/141.5)^(-1)
wi.1 <-(1/12.5 + 1/9.5 + 1/136.5 + 1/383.5)^(-1)
logORw <- (wi.0*logOR.0+wi.1*logOR.1)/(wi.0+wi.1)
(wi.0*logOR.0/wi.0)+(wi.1*logOR.1/wi.1)
ChisqH <- wi.0(logOR.0 - logORw)^2 + wi.1(logOR.1 - logORw)^2
ChisqH <- wi.0*(logOR.0 - logORw)^2 + wi.1*(logOR.1 - logORw)^2
chisq(3.981, df=4, lower.tail=FALSE)
chisq.test(3.981, df=4, lower.tail=FALSE)
pchisq(0.817, df=4, lower.tail = FALSE)
pchisq(0.817, df=4)
pchisq(3.981, df=4, lower.tail = FALSE)
pval <- pchisq(ChisqH, df=1, lower.tail = FALSE)
(38*141/12*102)
(38*141)/*12*102
(38*141)/(12*102)
(12*383)/(9*136)
ChisqH
pval
(105*326)/(253*218)
(1*15)/(129*0)
(104*311)/(124*218)
(105/(105+253))/(218/(218+326))
(1/(1+129))/(0/(0+15))
(104/(104+124))/(218/(218+311))
(1*15)/((129+1)*(0+1))
(1/(1+129))/((0+1)*(0+15+1)))
(1/(1+129))/((0+1)*(0+15+1))
125.92*100
(.4-.1)/sqrt(.25(1-.25))
(.4-.1)/sqrt(.25*(1-.25))
(.2-.04)/sqrt(.12*(1-.12))
(.2+.04)/2
(.2-.04)/sqrt(.12*(1-.12))
1+129+0+15
104+124+218+311
((1*15)/145)+((104*311)/757)
((1*15)/145)+((104*311)/757)/((129*0)/145)+((124*218)/757)
((1*15)/145)+(104*311)/757)/((129*0)/145)+(124*218)/757)
((1*15)/145)+((104*311)/757)
((129*0)/145)+((124*218)/757)
42.83/35.70938
(105*326)/(253*218)
(104*311)/(124*218)
(105*326)/(253*218)
(104*311)/(124*218)
(105*326)/(253*218)
(1*15)/(129*0)
(104*311)/(124*218)
(105/(105+253))/(218/(218+326))
(1/(129+1))/(0/(0+15))
(104/(104+124))/(218/(218+311))
16-612.99-49.11-43.69+10+201.02+15.95+40+1+1+201.77+5+31+5.60-15+48+28.17-1
628.99-16-612.99-49.11-43.69+10+201.02+15.95+40+1+1+201.77+5+31+5.60-15+48+28.17-1
628.99+16-612.99-49.11-43.69+10+201.02+15.95+40+1+1+201.77+5+31+5.60-15+48+28.17-1
16-49.11-43.69+10+201.02+15.95+40+1+1+201.77+5+31+5.60-15+48+28.17-1
1350+500
library(dagitty)
install.packages("dagitty")
library(dagitty)
library(dagitty)
install.packages("dagitty")
library(dagitty)
install.packages("dagitty")
library(dagitty)
testImplications <- function( covariance.matrix, sample.size ){
library(ggm)
tst <- function(i){ pcor.test( pcor(i,covariance.matrix), length(i)-2, sample.size )$pvalue }
tos <- function(i){ paste(i,collapse=" ") }
implications <- list(c("Race","Sex"),
c("Race","Sexual_orientation"),
c("Race","Learning_disability","Biological_mother's_education","Not_living_with_both_bio_parents"),
c("Race","Learning_disability","Biological_mother's_education","Citizenship"),
c("Race","Citizenship"),
c("Race","Not_living_with_both_bio_parents","Citizenship","Biological_mother's_education"),
c("Sex","Sexual_orientation"),
c("Sex","Learning_disability"),
c("Sex","Citizenship"),
c("Sex","Biological_mother's_education"),
c("Sex","Not_living_with_both_bio_parents"),
c("Sexual_orientation","BMI"),
c("Sexual_orientation","Learning_disability"),
c("Sexual_orientation","Citizenship"),
c("Sexual_orientation","Biological_mother's_education"),
c("Sexual_orientation","Not_living_with_both_bio_parents"),
c("BMI","Learning_disability","Biological_mother's_education","Not_living_with_both_bio_parents"),
c("BMI","Learning_disability","Biological_mother's_education","Citizenship"),
c("BMI","Learning_disability","Biological_mother's_education","Race"),
c("BMI","Citizenship","Race","Biological_mother's_education"),
c("BMI","Not_living_with_both_bio_parents","Citizenship","Biological_mother's_education"),
c("BMI","Not_living_with_both_bio_parents","Biological_mother's_education","Race"),
c("Learning_disability","Citizenship","Biological_mother's_education","Not_living_with_both_bio_parents"))
data.frame( implication=unlist(lapply(implications,tos)),
pvalue=unlist( lapply( implications, tst ) ) )
}
?dagitty
Sys.info()['sysname']
115+441.41+40+1+234.96+5.60+3.95+78-29.53
17.3+82.7
4.1+15.3+13.1+67.4
50.2+9.5+7.8+32.5
7.7+41.8+9.6+41
2.9+3.7+10.6
2.9+3.7+10.6+23.3+17.4+42.1
8.4+41.2+41.5+8.9
4.115+67
15+67
7.7+9.6
2.9+3.7+10.6
8.4+8.9
15+67
41+41
23+17+42
library(haven)
Daily_MME_043019 <- read_dta("Box Sync/SFDPH/data/Raw Data/2. STATA/Daily MME_043019.dta")
View(Daily_MME_043019)
View(head(Daily_MME_043019))
View(tail(Daily_MME_043019))
View(Daily_MME_043019)
install.packages("updateR")
library(devtools)
install_github
install_github("andreacirilloac/updateR")
library(updateR)
install_github("andreacirilloac/updateR")
library(tidyverse)
76.66+52.26+136.09+1+333.35+50.50+142.71+130.01+123+17
76.66+52.26+136.09+1+333.35+50.50+142.71+130.01+123.17
54.63+125.70+27.31+5+97.57+61.64-36.54+3+47.52+175.98+161.69
116.30+210.88+51.55+68.37+346.48+37.15+75.37+71.01+251.31+40
(2/5)$357.84
(2/5)*357.84
(3/5)*357.84
143.136+214.704
(2/5)*357.84
357.84 - 143.136
357.84 - (2/5)*357.84
install.packages("tinytex")
42+365+5+59+84
+50.88
42+365+5+59+84+50.88
42+365+5+59+84+50.88-42
56.21-13.20-13.85
23.15+6.01
60.47-4.62-4.40
60.47-4.62-4.40+4.76
56.21-29.16
85+7.77+365+33.76+5+59
357.84+59.00+45.50+554.53+234.28+5+39+125.26-36.11-125.26+1-8.98+56.21+320+54.60+66.01+38+26+26+.01-29.50-23.15
357.84+59.00+45.50+554.53+234.28+5+39+125.26-36.11-125.26+108.98+56.21+320+54.60+66.01+38+26+26+.01-29.50-23.15
-6.01+20+69.04+54.95+136.30+301.92+39+72.45+285+387.84+19.78-60.09+79.05+74.29+30+85.28-167.10-13-54.95
-6.01+20+69.04+54.95+136.30+301.92+39+72.45+285+387.84+19.78-60.09+79.05+74.29+30+85.28-167.10-13-54.95+50
setwd("~/Desktop/lizzyandshelley/Dataset") #LIZZY
#load the data
df <- read.spss("Ricky.SAV", use.value.labels = TRUE, to.data.frame=TRUE)
library(haven)
#load the data
df <- read.spss("Ricky.SAV", use.value.labels = TRUE, to.data.frame=TRUE)
?read.spss
#load the data
df <- read.spss("Ricky.SAV", use.value.labels = TRUE, to.data.frame=TRUE)
library(here)
library(foreign)
library(labelled)
library(dplyr)
library(reshape2)
library(lme4)
library(MASS)
library(mice)
library(biostat3)
library(lmtest)
library(gee)
setwd("~/Desktop/lizzyandshelley/Dataset") #LIZZY
#load the data
df <- read.spss("Ricky.SAV", use.value.labels = TRUE, to.data.frame=TRUE)
table(df$AGE)
class(df$AGE)
age.num <- as.numeric(df$AGE)
table(df$age.num)
age.num <- as.numeric(df$AGE)
df$age.num <- as.numeric(df$AGE)
table(df$age.num)
table(df$AGE)
table(df$age.num)
min(df$AGE)
df$age.num.paste <- as.numeric(paste(df$AGE))
table(df$age.num.paste)
