table(df$CCINJ, useNA = "ifany") #powder cocaine injection
table(df$MTINJ, useNA = "ifany") #meth injection
table(df$STINJ, useNA = "ifany") #prescription stimulant injection
table(df$HRINJ, useNA = "ifany") #heroin injection
table(df$OPINJ, useNA = "ifany") #NMPO injection
#any stimulant injection (composite)
df$ANYSTIMINJ <- ifelse(df$CRKINJ=="Yes" | df$CCINJ=="Yes" | df$MTINJ=="Yes" | df$STINJ=="Yes", 1, ifelse(df$CRKINJ=="No" & df$CCINJ=="No" & df$MTINJ=="No" & df$STINJ=="No", 0, NA))
df$ANYSTIMINJ <- as.factor(df$ANYSTIMINJ)
table(df$ANYSTIMINJ, useNA = "ifany")
#any opioid injection (composite)
df$ANYOPIATEINJ <- ifelse(df$HRINJ=="Yes" | df$OPINJ=="Yes", 1, ifelse(df$HRINJ=="No" & df$OPINJ=="No", 0, NA))
df$ANYOPIATEINJ <- as.factor(df$ANYOPIATEINJ)
table(df$ANYOPIATEINJ, useNA = "ifany")
#overdose witnessed (witnessed an overdose in the last 6 months)
table(df$WOD6M, useNA = "ifany")
#personal overdose history (Overdosed in the last 6 months)
table(df$ODP6M, useNA = "ifany")
# Identify the variables of interest
myVars <- c("LOCALID", "GENDER","agecat","ED","HOMELESS", "JAIL", "ANYSTIMINJ", "ANYOPIATEINJ", "WOD6M", "ODP6M")
# Specify which of the variables are categorical
catVars <- c("LOCALID", "GENDER", "agecat", "ED","HOMELESS", "JAIL", "ANYSTIMINJ", "ANYOPIATEINJ", "WOD6M", "ODP6M")
# Create an overall table 1
#REMINDER THAT TABLE1 PACKAGE DOES WEIRD STUFF WITH MISSING, SO CHECK N (PERCENTAGE) WITH CROSSTABS
table1.overall <- CreateTableOne(vars= myVars,
data= df,
factorVars = catVars)
print(table1.overall, showAllLevels = TRUE, missing = FALSE)
# Create a table 1 stratified by ever receiving naloxone (1 = ever received, 0 = never received)
##REMINDER THAT TABLE1 PACKAGE DOES WEIRD STUFF WITH MISSING, SO CHECK N (PERCENTAGE) WITH CROSSTABS
table1byNALEVER <- CreateTableOne(vars=myVars,
data=df,
factorVars = catVars,
strata="NALEVER")
print(table1byNALEVER, showAllLevels = TRUE, test=TRUE, missing = FALSE)
#check column percentages of bivariates. this is because prop.table will show missing percentages whereas tableone package doesn't include the missing data when calculating column percents.
#prop.table(table(df$X, df$NALEVER, useNA = "ifany"),2)
#CITY
localIDbynalever <- glm(NALEVER ~ factor(LOCALID), data=df, family=binomial)
summary(localIDbynalever)
exp(cbind(OR = coef(localIDbynalever), confint(localIDbynalever)))
#GENDER
genderbynalever <- glm(NALEVER ~ factor(GENDER), data=df, family=binomial)
summary(genderbynalever)
exp(cbind(OR = coef(genderbynalever), confint(genderbynalever)))
#agecat
agebynalever <- glm(NALEVER ~ factor(agecat), data=df, family=binomial)
summary(agebynalever)
exp(cbind(OR = coef(agebynalever), confint(agebynalever)))
#ED
edbynalever <- glm(NALEVER ~ factor(ED), data=df, family=binomial)
summary(edbynalever)
exp(cbind(OR = coef(edbynalever), confint(edbynalever)))
#HOMELESS
homelessbynalever <- glm(NALEVER ~ factor(HOMELESS), data=df, family=binomial)
summary(homelessbynalever)
exp(cbind(OR = coef(homelessbynalever), confint(homelessbynalever)))
#JAIL
jailbynalever <- glm(NALEVER ~ factor(JAIL), data=df, family=binomial)
summary(jailbynalever)
exp(cbind(OR = coef(jailbynalever), confint(jailbynalever)))
#ANYSTIMINJ
anystimbynalever <- glm(NALEVER ~ factor(ANYSTIMINJ), data=df, family=binomial)
summary(anystimbynalever)
exp(cbind(OR = coef(anystimbynalever), confint(anystimbynalever)))
#ANYOPIATEINJ
anyopiatebynalever <- glm(NALEVER ~ factor(ANYOPIATEINJ), data=df, family=binomial)
summary(anyopiatebynalever)
exp(cbind(OR = coef(anyopiatebynalever), confint(anyopiatebynalever)))
#WOD6M
ODwitness6mobynalever <- glm(NALEVER ~ factor(WOD6M), data=df, family=binomial)
summary(ODwitness6mobynalever)
exp(cbind(OR = coef(ODwitness6mobynalever), confint(ODwitness6mobynalever)))
#ODP6M
ODself6mobynalever <- glm(NALEVER ~ factor(ODP6M), data=df, family=binomial)
summary(ODself6mobynalever)
exp(cbind(OR = coef(ODself6mobynalever), confint(ODself6mobynalever)))
#multivariate model
fit.nalever.logistic <- glm(NALEVER ~ factor(LOCALID) + factor(GENDER) + factor(agecat) + factor(ED) + factor(HOMELESS) + factor(JAIL) + factor(ANYSTIMINJ) + factor(ANYOPIATEINJ) + factor(WOD6M) + factor(ODP6M), data=df, family=binomial)
summary(fit.nalever.logistic)
#get ORs and 95% CIs
fitnalever.OR.coefci.adj <- cbind(fit.nalever.logistic$coefficients, confint.default(fit.nalever.logistic))
fitnalever.OR.expci.adj <- exp(fitnalever.OR.coefci.adj)
fitnalever.OR.expci.adj
require(geepack)
#subset the data with complete observations
df.modpoiss <- subset(df, select=c(SUBJECT, NALEVER, LOCALID, GENDER, agecat, ED, HOMELESS, JAIL, ANYSTIMINJ, ANYOPIATEINJ, WOD6M, ODP6M))
df.modpoiss <- na.omit(df.modpoiss)
#turn the y variable (nalever into a 0/1 instead of no/yes due to modified poisson error)
df.modpoiss$NALEVER_binary <- as.numeric(df.modpoiss$NALEVER== "Yes")
#CITY
localIDbynalever.modpoiss <- geeglm(formula=NALEVER_binary ~ factor(LOCALID), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(localIDbynalever.modpoiss)
exp(coef(localIDbynalever.modpoiss))
#GENDER
genderbynalever.modpoiss <- geeglm(formula=NALEVER_binary ~ factor(GENDER), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(genderbynalever.modpoiss)
exp(coef(genderbynalever.modpoiss))
#agecat
agecatbynalever.modpoiss <- geeglm(formula=NALEVER_binary ~ factor(agecat), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(agecatbynalever.modpoiss)
exp(coef(agecatbynalever.modpoiss))
#ED
edbynalever.modpoiss <- geeglm(formula=NALEVER_binary ~ factor(ED), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(edbynalever.modpoiss)
exp(coef(edbynalever.modpoiss))
#HOMELESS
homelessbynalever.modpoiss <- geeglm(formula=NALEVER_binary ~ factor(HOMELESS), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(homelessbynalever.modpoiss)
exp(coef(homelessbynalever.modpoiss))
#JAIL
jailbynalever.modpoiss <- geeglm(formula=NALEVER_binary ~ factor(JAIL), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(jailbynalever.modpoiss)
exp(coef(jailbynalever.modpoiss))
#ANYSTIMINJ
anystiminjbynalever.modpoiss <- geeglm(formula=NALEVER_binary ~ factor(ANYSTIMINJ), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(anystiminjbynalever.modpoiss)
exp(coef(anystiminjbynalever.modpoiss))
#ANYOPIATEINJ
anyopiateinjbynalever.modpoiss <- geeglm(formula=NALEVER_binary ~ factor(ANYOPIATEINJ), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(anyopiateinjbynalever.modpoiss)
exp(coef(anyopiateinjbynalever.modpoiss))
#WOD6M
WOD6Mbynalever.modpoiss <- geeglm(formula=NALEVER_binary ~ factor(WOD6M), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(WOD6Mbynalever.modpoiss)
exp(coef(WOD6Mbynalever.modpoiss))
#ODP6M
ODP6Mbynalever.modpoiss <- geeglm(formula=NALEVER_binary ~ factor(ODP6M), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(ODP6Mbynalever.modpoiss)
exp(coef(ODP6Mbynalever.modpoiss))
#multivariate modified poisson model
fitnalever.modpoiss  <- geeglm(formula=NALEVER_binary ~ factor(LOCALID) + factor(GENDER) + factor(agecat) + factor(ED) + factor(HOMELESS) + factor(JAIL) + factor(ANYSTIMINJ) + factor(ANYOPIATEINJ) + factor(WOD6M) + factor(ODP6M), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(fitnalever.modpoiss)
#extract the coefficients and confidence intervals, exponentiate to get RR and 95% CI (using confint.default)
fitnalever.RR.coefci.adj <- cbind(fitnalever.modpoiss$coefficients, confint.default(fitnalever.modpoiss))
fitnalever.RR.expci.adj <- exp(fitnalever.RR.coefci.adj)
fitnalever.RR.expci.adj
#getting coefficients and standard errors using regular glm and the sandwich estimator
#fitnalever.modpoiss <- glm(NALEVER_binary ~ factor(LOCALID) + factor(GENDER) + factor(agecat) + factor(ED) + factor(HOMELESS) + factor(JAIL) + factor(ANYSTIMINJ) + factor(ANYOPIATEINJ) + factor(WOD6M) + factor(ODP6M), family = poisson(link = "log"), data = df.modpoiss)
#library(sandwich) # to get robust estimators
#library(lmtest) # to test coefficients
#coeftest(fitnalever.modpoiss, vcov = sandwich)
#exp(coef(fitnalever.modpoiss)) #to get RR
## CIs
#localID
#exp(-0.05752 + qnorm(0.05 / 2) * 0.05984) # lower 95% CI
#exp(-0.05752  + qnorm(1 - 0.05 / 2) * 0.05984) #upper 95% CI
#subset the data to those who have ever received naloxone
#df_EVERRECEIVEDNAL <- subset(df, NALEVER == "Yes") #N=387 who ever received naloxone
#table(df_EVERRECEIVEDNAL$NALOWN, useNA = "ifany")
#####Figure out who the 123 missing are who said they ever received naloxone but are missing on currently owning naloxone. Skip pattern at receiving naloxone in the last 6 months (F16) says if the answer is no, to skip over question about currently owning naloxone (F25) and go straight to F26, which is where the people are getting lost. At least some of the people who are NA on "df_EVERRECEIVEDNAL$NALOWN" are getting lost here.
# Create a table 1 stratified by currently owning naloxone  (1 = ever received, currently own / 0 = ever received, don't currently own)
#table1byNALOWN <- CreateTableOne(vars=myVars,
#data=df_EVERRECEIVEDNAL,
#factorVars = catVars,
#strata="NALOWN")
#print(table1byNALOWN, showAllLevels = TRUE, missing = FALSE)
#NALEVER: Ever received naloxone
#Have you ever received naloxone (including narcan, intranasal narcan, and/or autoinjector
#of naloxone to use on yourself or other people?
tbl.NALEVER
#NAL6MOS: Received naloxone in the last 6 months
#Have you received naloxone in the last 6 months?
tbl.NAL6MOS
#NAL6MOS: Received naloxone in the last 6 months
#Have you received naloxone in the last 6 months?
table(df_SF$NAL6MOS, useNA = "ifany")
#NAL6MOS: Received naloxone in the last 6 months
#Have you received naloxone in the last 6 months?
table(df_LA$NAL6MOS, useNA = "ifany")
#NAL6MOS: Received naloxone in the last 6 months
#Have you received naloxone in the last 6 months?
table(df_men$NAL6MOS, useNA = "ifany")
#NAL6MOS: Received naloxone in the last 6 months
#Have you received naloxone in the last 6 months?
table(df_men$NAL6MOS, useNA = "ifany")
#NAL6MOS: Received naloxone in the last 6 months
#Have you received naloxone in the last 6 months?
table(df_women$NAL6MOS, useNA = "ifany")
#NAL6MOS: Received naloxone in the last 6 months
#Have you received naloxone in the last 6 months?
table(df_unhoused$NAL6MOS, useNA = "ifany")
#NAL6MOS: Received naloxone in the last 6 months
#Have you received naloxone in the last 6 months?
table(df_housed$NAL6MOS, useNA = "ifany")
prop.table(tbl.NALEVER)
prop.table(tbl.NAL6MOS)
prop.table(tbl.NALOWN)
387/536
265/536
188/536
243/312
177/312
132/312
X <- 224
144/X
88/X
56/X
X <- 387
table(df$NALEVER)
table(df$NALEVER, useNA = "ifany")
table(df$NAL6MOS, useNA = "ifany")
265/(122+265+149)
table(df$NALEVER, df$NAL6MOS, useNA = "ifany")
df$NAL6MOS.new <- ifelse((df$NALEVER=="Yes" | df$NAL6MOS=="Yes"), 1, ifelse(df$NALEVER=="Yes" | df$NAL6MOS=="No"),0, ifelse(df$NALEVER=="No"),0)
df$NAL6MOS.new <- ifelse((df$NALEVER=="Yes" & df$NAL6MOS=="Yes"), 1, ifelse(df$NALEVER=="Yes" & df$NAL6MOS=="No"), 0, ifelse(df$NALEVER=="No"), 0)
df$NAL6MOS.new <- ifelse((df$NALEVER=="Yes" & df$NAL6MOS=="Yes"), 1, ifelse(df$NALEVER=="Yes" & df$NAL6MOS=="No"), 0)
df$NAL6MOS.new <- ifelse((df$NALEVER=="Yes" & df$NAL6MOS=="Yes"), 1, ifelse(df$NALEVER=="Yes" & df$NAL6MOS=="No"), 0, NA)
mutate(df, NAL6MOS.new = ifelse(NALEVER=="Yes" & NAL6MOS=="Yes", "Yes",
ifelse(NALEVER=="Yes" & NAL6MOS=="No", "No",
ifelse(NALEVER=="No" & NAL6MOS=="NA", "No",
))))
mutate(df, NAL6MOS.new = ifelse(NALEVER=="Yes" & NAL6MOS=="Yes", "Yes",
ifelse(NALEVER=="Yes" & NAL6MOS=="No", "No",
ifelse(NALEVER=="No" & NAL6MOS=="NA", "No",))))
mutate(df, NAL6MOS.new = ifelse(NALEVER=="Yes" & NAL6MOS=="Yes", "Yes",
ifelse(NALEVER=="Yes" & NAL6MOS=="No", "No",
ifelse(NALEVER=="No" & NAL6MOS==NA, "No",))))
mutate(df, NAL6MOS.new = ifelse(NALEVER=="Yes" & NAL6MOS=="Yes", "Yes",
ifelse(NALEVER=="Yes" & NAL6MOS=="No", "No",
ifelse(NALEVER=="No" & NAL6MOS=NA, "No",))))
mutate(df, NAL6MOS.new = ifelse(NALEVER=="Yes" & NAL6MOS=="Yes", "Yes",
ifelse(NALEVER=="Yes" & NAL6MOS=="No", "No",
ifelse(NALEVER=="No" & NAL6MOS=is.na, "No",))))
mutate(df, NAL6MOS.new = ifelse(NALEVER=="Yes" & NAL6MOS=="Yes", "Yes",
ifelse(NALEVER=="Yes" & NAL6MOS=="No", "No",
ifelse(NALEVER=="No" & is.na(NAL6MOS), "No",))))
mutate(df, NAL6MOS.new = ifelse(NALEVER=="Yes" & NAL6MOS=="Yes", "Yes",
ifelse(NALEVER=="Yes" & NAL6MOS=="No", "No",
ifelse(NALEVER=="No" & NAL6MOS=NA, "No",))))
mutate(df, NAL6MOS.new = ifelse(NALEVER=="Yes" & NAL6MOS=="Yes", "Yes",
ifelse(NALEVER=="Yes" & NAL6MOS=="No", "No",
ifelse(NALEVER=="No" & NAL6MOS==NA, "No"))))
mutate(df, NAL6MOS.new = ifelse(NALEVER=="Yes" & NAL6MOS=="Yes", "Yes",
ifelse(NALEVER=="Yes" & NAL6MOS=="No", "No",
ifelse(NALEVER=="No" & NAL6MOS=NA, "No"))))
mutate(df, NAL6MOS.new = ifelse(NALEVER=="Yes" & NAL6MOS=="Yes", "Yes",
ifelse(NALEVER=="Yes" & NAL6MOS=="No", "No",
ifelse(NALEVER=="No" & NAL6MOS=NA, "No"))),NA)
mutate(df, NAL6MOS.new = ifelse(NALEVER=="Yes" & NAL6MOS=="Yes", "Yes",
ifelse(NALEVER=="Yes" & NAL6MOS=="No", "No",
ifelse(NALEVER=="No" & NAL6MOS=NA, "No", "NA"))))
mutate(df, NAL6MOS.new = ifelse(NALEVER=="Yes" & NAL6MOS=="Yes", "Yes",
ifelse(NALEVER=="Yes" & NAL6MOS=="No", "No",
ifelse(NALEVER=="No" & NAL6MOS="NA", "No", "NA"))))
mutate(df, NAL6MOS.new = ifelse(NALEVER=="Yes" & NAL6MOS=="Yes", 1,
ifelse(NALEVER=="Yes" & NAL6MOS=="No", 0,
ifelse(NALEVER=="No" & NAL6MOS="NA", 0, NA))))
mutate(df, NAL6MOS.new = ifelse(NALEVER=="Yes" & NAL6MOS=="Yes", 1,
ifelse(NALEVER=="Yes" & NAL6MOS=="No", 0,
ifelse(NALEVER=="No" & NAL6MOS=="NA", 0, NA))))
table(df$NAL6MOS.new)
names(df)
View(anystiminjbynalever.modpoiss)
df$NAL6MOS.new <- mutate(df, NAL6MOS.new = ifelse(NALEVER=="Yes" & NAL6MOS=="Yes", 1,
ifelse(NALEVER=="Yes" & NAL6MOS=="No", 0,
ifelse(NALEVER=="No" & NAL6MOS=="NA", 0, NA))))
table(df$NAL6MOS.new)
387/536
FS <- 536
387/FS
265/FS
188/FS
males <- 390
282/males
282/males
192/males
136/males
females <- 140
101/females
70/females
50/females
387/FS
265/FS
188/FS
unhoused <- 361
housed <- 175
263/unhoused
197/unhoused
132/unhoused
124/housed
68/housed
56/housed
---
title: "Naloxone12moCTC"
author: "Elizabeth Kinnard"
date: "8/31/2020"
output: pdf_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = T, eval=T, warning = FALSE, message = FALSE, global.par=TRUE)
knitr::opts_knit$set(root.dir="~/Documents/GitHub/lizzyandshelley/Dataset")
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=85),tidy=TRUE)
```
Open packages.
```{r}
library(base)
library(knitr)
library(dplyr)
library(here)
library(foreign)
library(labelled)
library(dplyr)
library(reshape2)
library(tableone)
library(forcats)
library(geepack)
library(doBy)
library(blm)
library(lmtest)
library(foreign)
library(MASS)
```
Open working directory and load/label the data.
```{r}
#set working directory
setwd("~/Documents/GitHub/lizzyandshelley/Dataset") #LIZZY
#load the data
df <- read.spss("CTC12month.SAV", use.value.labels = TRUE, to.data.frame=TRUE)
```
Get variable labels.
```{r, echo=F, eval=F}
#get variable labels
attr(df, "variable.labels")
df.labels <- as.data.frame(attr(df, "variable.labels"))
QDSlabels <- data.frame(rownames(df.labels))
df.labels <- cbind(QDSlabels, df.labels)
names(df.labels) <- c("VAR_ID", "description")
rm(QDSlabels)
#USE THIS CODE TO LOOK UP A VARIABLE DESCRIPTION
#df.labels$description[df.labels$VAR_ID=="GENDER"]
```
Subset the data to delete all rows that are entirely NA (since they didn't show up to 12 month visit).
```{r}
df <- df[rowSums(is.na(df)) < 600,] #rows reduced from N=984 to N=536 people
#EXAMPLES OF SUBSETTING
#df <- subset(df, SUMINJ>0)
#df <- subset(df, IJWOTH_3cat>0)
```
Descriptives of overdose and naloxone variables.
```{r}
#ODP6M: Overdosed in the last 6 months
#In the last 6 months, have you overdosed?
tbl.ODP6M <- table(df$ODP6M, useNA = "ifany")
tbl.ODP6M
prop.table(tbl.ODP6M)
#ODTIMES: Times overdosed in the last 6 months
#How many times did you overdose in the last 6 months?
tbl.ODTIMES <- table(df$ODTIMES, useNA = "ifany")
tbl.ODTIMES
prop.table(tbl.ODTIMES)
#FENTOD: Number of fentanyl related overdoses
#In the last 6 months, when you overdosed, how many times had you been using Fentanyl
#or drugs with Fentanyl in it?
tbl.FENTOD <- table(df$FENTOD, useNA = "ifany")
tbl.FENTOD
prop.table(tbl.FENTOD)
#ODDRUG: Drugs used when overdosed the last time
#The last time you overdosed, what drug or drugs had you been using?  Check all that apply
table(df$ODDRUG, useNA = "ifany")
table(df$ODDRUGA, useNA = "ifany") #Crack cocaine
table(df$ODDRUGB, useNA = "ifany") #Powder cocaine
table(df$ODDRUGC, useNA = "ifany") #Methamphetamine
table(df$ODDRUGD, useNA = "ifany") #Heroin (by itself)
table(df$ODDRUGE, useNA = "ifany") #Speedball (heroin mixed with cocaine or crack)
table(df$ODDRUGF, useNA = "ifany") #Goofball (heroin mixed with speed)
table(df$ODDRUGG, useNA = "ifany") #Non-opiate pain relievers (percocet, percodan, darvon)
table(df$ODDRUGH, useNA = "ifany") #Opiates (vicodin, oxycontin, dilaudid)
table(df$ODDRUGI, useNA = "ifany") #Tranquilizers (klonopin, xanax, valium, atavan)
table(df$ODDRUGJ, useNA = "ifany") #Sedatives (restoril, tuinal, phenobarbatal)
table(df$ODDRUGK, useNA = "ifany") #Stimulants (ritalin, aderall, methadrine, bezedrine)
table(df$ODDRUGL, useNA = "ifany") #Methadone
table(df$ODDRUGM, useNA = "ifany") #Alcohol
table(df$ODDRUGN, useNA = "ifany") #Fentanyl or drugs w/fentanyl
#WOD6M: Witnessed an overdose in the last 6 months
#In the last 6 months, have you witnessed a heroin or opiate overdose?
tbl.WOD6M <- table(df$WOD6M, useNA = "ifany")
tbl.WOD6M
prop.table(tbl.WOD6M)
#WODX6M: Number of witnessed overdoses in the last 6 months
#In the last 6 months, how many heroin or opiate overdoses have you witnessed?
tbl.WODX6M <- table(df$WODX6M, useNA = "ifany")
tbl.WODX6M
prop.table(tbl.WODX6M)
#NARCAN: More than one dose of narcan to revive person
#Of the overdoses you witnessed where naloxone was used, did any of them require more than
#one dose to revive the person to the best of your knowledge?
tbl.NARCAN <- table(df$NARCAN, useNA = "ifany")
tbl.NARCAN
prop.table(tbl.NARCAN)
#RIGID: Rigidty or seizures during the overdose
#During the overdose(s) that you witnessed, did any one of the victims have immediate body
#rigidity or seizures?
tbl.RIGID <- table(df$RIGID, useNA = "ifany")
tbl.RIGID
prop.table(tbl.RIGID)
#IMMED: Any immediate overdoses
#Of the overdoses you witnessed, did any of the victims overdose immediately or shortly
#after taking their shot?
tbl.IMMED <- table(df$IMMED, useNA = "ifany")
tbl.IMMED
prop.table(tbl.IMMED)
#USEDNAL: Times naloxone used by bystander to prevent overdose in the last 30 days
#In the last 6 months, how many of these witnessed overdoses did you or someone else
#who was not an EMT or police officer use naloxone or narcan?
tbl.USEDNAL <- table(df$USEDNAL, useNA = "ifany")
tbl.USEDNAL
prop.table(tbl.USEDNAL)
#OD911: Number of witnessed od where 911 was called in the last 30 days
#In the last 6 months, how many of these witnessed overdoses did you or someone else call 911?
tbl.OD911 <- table(df$OD911, useNA = "ifany")
tbl.OD911
prop.table(tbl.OD911)
#ODTRAIN: Have you ever participated in overdose prevention training?
#Have you ever participated in overdose prevention training?
tbl.ODTRAIN <- table(df$ODTRAIN, useNA = "ifany")
tbl.ODTRAIN
prop.table(tbl.ODTRAIN)
#ODTBY: OD training from whom
#From whom did you receive overdose prevention training?
table(df$ODTBY, useNA = "ifany")
table(df$ODTBYA, useNA = "ifany") #Needle exchange
table(df$ODTBYB, useNA = "ifany") #Another drug user
table(df$ODTBYC, useNA = "ifany") #Another community member
table(df$ODTBYD, useNA = "ifany") #A family member
table(df$ODTBYE, useNA = "ifany") #Pharmacy
table(df$ODTBYF, useNA = "ifany") #Community clinic
table(df$ODTBYG, useNA = "ifany") #Hospital
table(df$ODTBYH, useNA = "ifany") #Jail or prison
table(df$ODTBYI, useNA = "ifany") #Other
#ODTOTH:Overdose training by other organization
#What is the other organization or entity that provided you with overdose training?
tbl.ODTOTH <- table(df$ODTOTH, useNA = "ifany")
tbl.ODTOTH
#NALEVER: Ever received naloxone
#Have you ever received naloxone (including narcan, intranasal narcan, and/or autoinjector
#of naloxone to use on yourself or other people?
tbl.NALEVER <- table(df$NALEVER, useNA = "ifany")
tbl.NALEVER
prop.table(tbl.NALEVER)
#NAL6MOS: Received naloxone in the last 6 months
#Have you received naloxone in the last 6 months?
tbl.NAL6MOS <- table(df$NAL6MOS, useNA = "ifany")
tbl.NAL6MOS
prop.table(tbl.NAL6MOS)
#NAL6ORG: Naloxone from whom in the last 6 months
#From whom did you receive naloxone, narcan, intranasal narcan, and/or autoinjector/evzio in the last 6 months?
table(df$NAL6ORG, useNA = "ifany")
table(df$NAL6ORGA, useNA = "ifany") #Needle exchange
table(df$NAL6ORGB, useNA = "ifany") #Another drug user
table(df$NAL6ORGC, useNA = "ifany") #Another community member
table(df$NAL6ORGD, useNA = "ifany") #A family member
table(df$NAL6ORGE, useNA = "ifany") #Pharmacy
table(df$NAL6ORGF, useNA = "ifany") #Community clinic
table(df$NAL6ORGG, useNA = "ifany") #Hospital
table(df$NAL6ORGH, useNA = "ifany") #Jail or prison
table(df$NAL6ORGI, useNA = "ifany") #Other
#OTHNORG: Other organization that provided naloxone in the last 6 months
#What is the other organization or entity that provided you with naloxone in the last 6 months?
table(df$OTHNORG, useNA = "ifany")
#NALUSED:Used naloxone in the last 6 months
#Have you used your Naloxone in the last 6 months?
tbl.NALUSED <- table(df$NALUSED, useNA = "ifany")
tbl.NALUSED
prop.table(tbl.NALUSED)
#NALOSE: Lost naloxone in the last 6 months
#Have you lost your Naloxone in the last 6 months?
tbl.NALOSE <- table(df$NALOSE, useNA = "ifany")
tbl.NALOSE
prop.table(tbl.NALOSE)
#NALUSEandorLOSE: Have you used and/or used your naloxone in the last 6 months?
table(df$NALUSED, df$NALOSE, useNA = "ifany")
df$NALUSEandorLOSE <- ifelse((df$NALUSED=="Yes" | df$NALOSE=="Yes"), 1, 0)
tbl.NALUSEandorLOSE <- table(df$NALUSEandorLOSE, useNA = "ifany")
tbl.NALUSEandorLOSE
prop.table(tbl.NALUSEandorLOSE)
#NALFILL: Got a refill of naloxone in the last 6 months
#After using or losing your naloxone, did you get a replacement or refill?
tbl.NALFILL <- table(df$NALFILL, useNA = "ifany")
tbl.NALFILL
prop.table(tbl.NALFILL)
#TMEFILL: Days it took to refill or replace naloxone.
#How long after using or losing your Naloxone, did you get a replacement or refill?
tbl.TMEFILL <- table(df$TMEFILL, useNA = "ifany")
tbl.TMEFILL
prop.table(tbl.TMEFILL)
#NALPRVD: Who provided the naloxone replacement or refill
#From whom did you receive your naloxone replacement or refill?
table(df$NALPRVD, useNA = "ifany")
table(df$NALPRVDA, useNA = "ifany") #Needle exchange
table(df$NALPRVDB, useNA = "ifany") #Another drug user
table(df$NALPRVDC, useNA = "ifany") #Another community member
table(df$NALPRVDD, useNA = "ifany") #A family member
table(df$NALPRVDE, useNA = "ifany") #Pharmacy
table(df$NALPRVDF, useNA = "ifany") #Community clinic
table(df$NALPRVDG, useNA = "ifany") #Hospital
table(df$NALPRVDH, useNA = "ifany") #Jail or prison
table(df$NALPRVDI, useNA = "ifany") #Other
#OTHPRON: Replacement naloxone provided by what other organization
#What is the other organization or entity that provided you with naloxone dose replacement or refill?
table(df$OTHPRON, useNA = "ifany") #Other
#NALOWN: Own a dose of naloxone
#Do you currently have at least one dose of naloxone? (By this, we mean you possess
#or own your own naloxone dose)
tbl.NALOWN <- table(df$NALOWN, useNA = "ifany")
tbl.NALOWN
prop.table(tbl.NALOWN)
#NALAVAIL: Naloxone available
#In the last 6 months, when you injected drugs, how often did you or someone else around you have naloxone in the event of an overdose?
tbl.NALAVAIL <- table(df$NALAVAIL, useNA = "ifany")
tbl.NALAVAIL
prop.table(tbl.NALAVAIL)
```
