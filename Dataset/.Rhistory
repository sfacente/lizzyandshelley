g2A1 <- glm(A1 ~ L1, Y1, family = "poisson", data = SimData)
g2A2 <- glm(A2 ~ L2, Y2, family = "poisson", data = SimData)
g2A3 <- glm(A3 ~ L3, Y3, family = "poisson", data = SimData)
g2A4 <- glm(A4 ~ L4, Y4, family = "poisson", data = SimData)
gA1_1 <- predict(g2A1, type = 'response')
gA2_1 <- predict(g2A2, type = 'response')
gA3_1 <- predict(g2A3, type = 'response')
gA4_1 <- predict(g2A4, type = 'response')
gA1 <- mean(gA1_1)
gA2 <- mean(gA2_1)
gA3 <- mean(gA3_1)
gA4 <- mean(gA4_1)
knitr::opts_chunk$set(echo = TRUE)
library(ltmle)
load(DataStructure2.RData)
load("C:/Users/shell/Dropbox/GRAD SCHOOL/Causal II/Labs/Lab 5/DataStructure2.RData")
load("C:/Users/shell/Dropbox/GRAD SCHOOL/Causal II/Labs/Lab 5/DataStructure2.RData")
load("C:/Users/shell/Dropbox/GRAD SCHOOL/Causal II/Labs/Lab 5/DataStructure2.RData")
head(ObsData2)
?subset
ObsData = ObsData2[L1 | A1 | Y]
ObsData <- ObsData2[ObsData2$L1, ObsData2$A1, ObsData2$Y]
ObsData <- ObsData2[ObsData2$L1 | ObsData2$A1 | ObsData2$Y]
selection <- c("L1", "A1", "Y")
ObsData <- ObsData2[selection]
View(ObsData)
#2. Set variables to character names
Lnodes = ObsData$L1
Anodes = ObsData$A1
Ynodes = ObsData$Y
#1. Obtain estimates under A1 = 1 using TMLE and IPTW
EY1_ltmle_t <- ltmle(ObsData, Anodes = Anodes, Lnodes = Lnodes, Ynodes = Ynodes, abar = 1, variance.method = "ic")
#1. Obtain estimates under A1 = 1 using TMLE and IPTW
EY1_ltmle_t <- ltmle(ObsData, Lnodes = Lnodes, Anodes = Anodes, Ynodes = Ynodes, abar = 1, variance.method = "ic")
#1. Obtain estimates under A1 = 1 using TMLE and IPTW
EY1_ltmle_t <- ltmle(ObsData, abar = 1, variance.method = "ic")
options(warn = -1)
#2. Set variables to character names
Lnodes <- "L1"
Anodes <- "A1"
Ynodes <- "Y"
#1. Obtain estimates under A1 = 1 using TMLE and IPTW
EY1_ltmle_t <- ltmle(ObsData, Anodes = Anodes, abar = 1, variance.method = "ic")
#1. Obtain estimates under A1 = 1 using TMLE and IPTW
EY1_ltmle_t <- ltmle(ObsData, Anodes = Anodes, Lnodes = Lnodes, Ynodes = Ynodes, abar = 1, variance.method = "ic")
#2. Obtain estimates under A1 = 1 using G-comp and IPTW
EY1_ltmle_g <- ltmle(ObsData, Anodes = Anodes, Lnodes = Lnodes, Ynodes = Ynodes, abar = 1, variance.method = "ic, gcomp = TRUE)
#2. Obtain estimates under A1 = 1 using G-comp and IPTW
EY1_ltmle_g <- ltmle(ObsData, Anodes = Anodes, Lnodes = Lnodes, Ynodes = Ynodes, abar = 1, variance.method = "ic", gcomp = TRUE)
#1. Obtain estimates under A1 = 1 using TMLE and IPTW
EY1_ltmle_t <- ltmle(ObsData, Anodes = Anodes, Lnodes = Lnodes, Ynodes = Ynodes, abar = 1, variance.method = "ic")
#2. Obtain estimates under A1 = 1 using G-comp and IPTW
EY1_ltmle_g <- ltmle(ObsData, Anodes = Anodes, Lnodes = Lnodes, Ynodes = Ynodes, abar = 1, variance.method = "ic", gcomp = TRUE)
#3. Print the summary of results for the estimators
summary(EY1_ltmle_t$estimates["tmle"])
print(summary(EY1_ltmle_t$estimates["iptw"]))
print(summary(EY1_ltmle_g$estimates["gcomp"]))
#3. Print the summary of results for the estimators
summary(EY1_ltmle_t$estimates["tmle"])
summary(EY1_ltmle_t$estimates["iptw"])
summary(EY1_ltmle_g$estimates["gcomp"])
#1. Obtain estimates under A1 = 1 using TMLE and IPTW
EY1_ltmle_t <- ltmle(ObsData, Anodes = Anodes, Lnodes = Lnodes, Ynodes = Ynodes, abar = 1, variance.method = "ic")
#2. Obtain estimates under A1 = 1 using G-comp and IPTW
EY1_ltmle_g <- ltmle(ObsData, Anodes = Anodes, Lnodes = Lnodes, Ynodes = Ynodes, abar = 1, variance.method = "ic", gcomp = TRUE)
#3. Print the summary of results for the estimators
summary(EY1_ltmle_t$estimates["tmle"])
summary(EY1_ltmle_t$estimates["iptw"])
summary(EY1_ltmle_g$estimates["gcomp"])
#1. Obtain estimates under A1 = 1 using TMLE and IPTW
EY1_ltmle_t <- ltmle(data = ObsData, Anodes = Anodes, Lnodes = Lnodes, Ynodes = Ynodes, abar = 1, variance.method = "ic")
#2. Obtain estimates under A1 = 1 using G-comp and IPTW
EY1_ltmle_g <- ltmle(data = ObsData, Anodes = Anodes, Lnodes = Lnodes, Ynodes = Ynodes, abar = 1, variance.method = "ic", gcomp = TRUE)
#4. Store the estimates
EY1_hat_tmle <- EY1_ltmle_t$estimates["tmle"]
EY1_hat_iptw <- EY1_ltmle_t$estimates["iptw"]
EY1_hat_gcomp <- EY1_ltmle_g$estimates["gcomp"]
#3. Print the summary of results for the estimators
summary(EY1_ltmle_t)
summary(EY1_ltmle_g)
#4. Store the estimates
EY1_hat_tmle <- EY1_ltmle_t$estimates["tmle"]
EY1_hat_iptw <- EY1_ltmle_t$estimates["iptw"]
EY1_hat_gcomp <- EY1_ltmle_g$estimates["gcomp"]
#3. Print the summary of results for the estimators
summary(EY1_ltmle_t, "tmle")
summary(EY1_ltmle_t, "iptw")
summary(EY1_ltmle_g, "gcomp")
#1. Generate a bootstrap sample
n <- nrow(ObsData)
B <- 5
estimates <- matrix(NA, nrow = B, ncol = 3)
colnames(estimates) <- c("G-Comp", "IPTW", "TMLE")
for(b in 1:B) {
#create bootstrap sample
bootIndices <- sample(1:n, replace = TRUE)
bootData <- ObsData[bootIndices,]
#Estimate treatment specific means
Boot_ltmle_t <- ltmle(data = bootData, Anodes = "A1", Lnodes = "L1",    Ynodes = "Y", abar = 1, variance.method = "ic")
Boot_ltmle_g <- ltmle(data = bootData, Anodes = "A1", Lnodes = "L1",    Ynodes = "Y", abar = 1, variance.method = "ic", gcomp = TRUE)
#Save the estimates
PsiHat_TMLE_b <- Boot_ltmle_t$estimates["tmle"]
PsiHat_IPTW_b <- Boot_ltmle_t$estimates["iptw"]
PsiHat_gcomp_b <- Boot_ltmle_g$estimates["gcomp"]
estimates[b,] <- c(PsiHat_gcomp_b, PsiHat_IPTW_b, PsiHat_TMLE_b)
}
#1. Generate a bootstrap sample
n <- nrow(ObsData)
B <- 500
estimates <- matrix(NA, nrow = B, ncol = 3)
colnames(estimates) <- c("G-Comp", "IPTW", "TMLE")
for(b in 1:B) {
#create bootstrap sample
bootIndices <- sample(1:n, replace = TRUE)
bootData <- ObsData[bootIndices,]
#Estimate treatment specific means
Boot_ltmle_t <- ltmle(data = bootData, Anodes = "A1", Lnodes = "L1",    Ynodes = "Y", abar = 1, variance.method = "ic")
Boot_ltmle_g <- ltmle(data = bootData, Anodes = "A1", Lnodes = "L1",    Ynodes = "Y", abar = 1, variance.method = "ic", gcomp = TRUE)
#Save the estimates
PsiHat_TMLE_b <- Boot_ltmle_t$estimates["tmle"]
PsiHat_IPTW_b <- Boot_ltmle_t$estimates["iptw"]
PsiHat_gcomp_b <- Boot_ltmle_g$estimates["gcomp"]
estimates[b,] <- c(PsiHat_gcomp_b, PsiHat_IPTW_b, PsiHat_TMLE_b)
}
?quantile
quantile(estimates, pros = c(0.25, .975))
bootCI <- quantile(estimates, pros = c(0.25, .975))
bootCI <- quantile(estimates, pros = c(0.025, .975))
bootCI
bootCI <- quantile(estimates, probs = c(0.025, .975))
bootCI
ltmle <- function(...) {
suppressMessages(ltmle::ltmle(...))
}
ltmleMSM <- function(...) {
suppressMessages(ltmle::ltmleMSM(...))
}
#5. Compute CIs assuming normality
normalCI_TMLE_u <- PsiHat_TMLE_b + 1.96(sqrt(Boot_ltmle_t$variance.estimate["tmle"]))
#5. Compute CIs assuming normality
normalCI <- apply(estimates, 2, var)var(estimates)
#5. Compute CIs assuming normality
normalCI <- apply(estimates, 2, var)
apply(estimates, 2, var)
#5. Compute CIs assuming normality
variance <- apply(estimates, 2, var)
#6. Use quantile function to obtain bootstrap CI
bootCI_TMLE <- quantile(PsiHat_TMLE_b, probs = c(0.025, .975))
bootCI_IPTW <- quantile(PsiHat_IPTW_b, probs = c(0.025, .975))
bootCI_Gcomp <- quantile(PsiHat_Gcomp_b, probs = c(0.025, .975))
normalCI_TMLE_u <- PsiHat_TMLE_b + 1.96(sqrt(variance[3]))
normalCI_TMLE_l <- PsiHat_TMLE_b - 1.96(sqrt(variance[3]))
#5. Compute CIs assuming normality
variance <- apply(estimates, 2, var)
normalCI_TMLE_u <- PsiHat_TMLE_b + 1.96(sqrt(variance[3]))
#5. Compute CIs assuming normality
variancecalc <- apply(estimates, 2, var)
normalCI_TMLE_u <- PsiHat_TMLE_b + 1.96(sqrt(variancecalc[3]))
PsiHat_TMLE_b + 1.96(sqrt(variance[3]))
normalCI_TMLE_u <- PsiHat_TMLE_b + 1.96*(sqrt(variance[3]))
normalCI_Gcomp_l <- PsiHat_gcomp_b - 1.96*(sqrt(variance[1]))
#6. Use quantile function to obtain bootstrap CI
bootCI_TMLE <- quantile(PsiHat_TMLE_b, probs = c(0.025, .975))
bootCI_IPTW <- quantile(PsiHat_IPTW_b, probs = c(0.025, .975))
SL.library <- c("SL.glm", "SL.bayesglm", "SL.mean")
SL.library <- c("SL.glm", "SL.bayesglm", "SL.mean")
#Obtain estimates under A1 = 1 using TMLE and IPTW
EY1_ltmle_t_SL <- ltmle(data = ObsData, Anodes = Anodes, Lnodes = Lnodes, Ynodes = Ynodes, abar = 1, variance.method = "ic", SL.library = "SL.library")
#Obtain estimates under A1 = 1 using G-comp and IPTW
EY1_ltmle_g_SL <- ltmle(data = ObsData, Anodes = Anodes, Lnodes = Lnodes, Ynodes = Ynodes, abar = 1, variance.method = "ic", gcomp = TRUE, SL.library = "SL.library")
#Store the estimates
EY1_hat_tmle_SL <- EY1_ltmle_t_SL$estimates["tmle"]
EY1_hat_iptw_SL <- EY1_ltmle_t_SL$estimates["iptw"]
EY1_hat_gcomp_SL <- EY1_ltmle_g_SL$estimates["gcomp"]
SL.library <- c("SL.glm", "SL.bayesglm", "SL.mean")
#Obtain estimates under A1 = 1 using TMLE and IPTW
EY1_ltmle_t_SL <- ltmle(data = ObsData, Anodes = Anodes, Lnodes = Lnodes, Ynodes = Ynodes, abar = 1, variance.method = "ic", SL.library = "SL.library")
#Obtain estimates under A1 = 1 using TMLE and IPTW
EY1_ltmle_t_SL <- ltmle(data = ObsData, Anodes = Anodes, Lnodes = Lnodes, Ynodes = Ynodes, abar = 1, variance.method = "ic", SL.library = SL.library)
#Obtain estimates under A1 = 1 using G-comp and IPTW
EY1_ltmle_g_SL <- ltmle(data = ObsData, Anodes = Anodes, Lnodes = Lnodes, Ynodes = Ynodes, abar = 1, variance.method = "ic", gcomp = TRUE, SL.library = SL.library)
SL.library <- c("SL.glm", "SL.bayesglm", "SL.mean")
#Obtain estimates under A1 = 1 using TMLE and IPTW
EY1_ltmle_t_SL <- ltmle(data = ObsData, Anodes = Anodes, Lnodes = Lnodes, Ynodes = Ynodes, abar = 1, variance.method = "ic", SL.library = SL.library)
#Obtain estimates under A1 = 1 using G-comp and IPTW
EY1_ltmle_g_SL <- ltmle(data = ObsData, Anodes = Anodes, Lnodes = Lnodes, Ynodes = Ynodes, abar = 1, variance.method = "ic", gcomp = TRUE, SL.library = SL.library)
#Store the estimates
EY1_hat_tmle_SL <- EY1_ltmle_t_SL$estimates["tmle"]
EY1_hat_iptw_SL <- EY1_ltmle_t_SL$estimates["iptw"]
EY1_hat_gcomp_SL <- EY1_ltmle_g_SL$estimates["gcomp"]
#5. Compute CIs assuming normality
variance <- apply(estimates, 2, var)
normalCI_TMLE_u <- PsiHat_TMLE_b + 1.96*(sqrt(variance[3]))
normalCI_TMLE_l <- PsiHat_TMLE_b - 1.96*(sqrt(variance[3]))
normalCI_IPTW_u <- PsiHat_IPTW_b + 1.96*(sqrt(variance[2]))
normalCI_IPTW_l <- PsiHat_IPTW_b - 1.96*(sqrt(variance[2]))
normalCI_Gcomp_u <- PsiHat_gcomp_b + 1.96*(sqrt(variance[1]))
normalCI_Gcomp_l <- PsiHat_gcomp_b - 1.96*(sqrt(variance[1]))
#6. Use quantile function to obtain bootstrap CI
bootCI_TMLE <- quantile(PsiHat_TMLE_b, probs = c(0.025, .975))
bootCI_IPTW <- quantile(PsiHat_IPTW_b, probs = c(0.025, .975))
bootCI_Gcomp <- quantile(PsiHat_gcomp_b, probs = c(0.025, .975))
bootCI_Gcomp
#8 - Incorporating SuperLearner
SL.library <- c("SL.glm", "SL.bayesglm", "SL.mean")
#Obtain estimates under A1 = 1 using TMLE and IPTW
EY1_ltmle_t_SL <- ltmle(data = ObsData, Anodes = Anodes, Lnodes = Lnodes, Ynodes = Ynodes, abar = 1, variance.method = "ic", SL.library = SL.library)
#Obtain estimates under A1 = 1 using G-comp and IPTW
EY1_ltmle_g_SL <- ltmle(data = ObsData, Anodes = Anodes, Lnodes = Lnodes, Ynodes = Ynodes, abar = 1, variance.method = "ic", gcomp = TRUE, SL.library = SL.library)
#Store the estimates
EY1_hat_tmle_SL <- EY1_ltmle_t_SL$estimates["tmle"]; EY1_hat_tmle_SL
EY1_hat_iptw_SL <- EY1_ltmle_t_SL$estimates["iptw"]; EY1_hat_iptw_SL
EY1_hat_gcomp_SL <- EY1_ltmle_g_SL$estimates["gcomp"]; EY1_hat_gcomp_SL
#Obtain estimates under A1 = 1 using TMLE and IPTW
EY1_ltmle_t_add <- ltmle(data = ObsData, Anodes = Anodes, Lnodes = Lnodes, Ynodes = Ynodes, abar = list(1,0), variance.method = "ic", SL.library = SL.library)
#Obtain estimates under A1 = 1 using G-comp and IPTW
EY1_ltmle_g_add <- ltmle(data = ObsData, Anodes = Anodes, Lnodes = Lnodes, Ynodes = Ynodes, abar = 1, variance.method = "ic", gcomp = TRUE, SL.library = SL.library)
#Store the estimates
EY1_hat_tmle_add <- EY1_ltmle_t_SL$estimates["tmle"]; EY1_hat_tmle_SL
EY1_hat_iptw_add <- EY1_ltmle_t_SL$estimates["iptw"]; EY1_hat_iptw_SL
EY1_hat_gcomp_add <- EY1_ltmle_g_SL$estimates["gcomp"]; EY1_hat_gcomp_SL
#Obtain estimates under A1 = 1 using TMLE and IPTW
EY1_ltmle_t_add <- ltmle(data = ObsData, Anodes = Anodes, Lnodes = Lnodes, Ynodes = Ynodes, abar = list(1,0), variance.method = "ic", SL.library = SL.library)
#Obtain estimates under A1 = 1 using G-comp and IPTW
EY1_ltmle_g_add <- ltmle(data = ObsData, Anodes = Anodes, Lnodes = Lnodes, Ynodes = Ynodes, abar = list(1,0), variance.method = "ic", gcomp = TRUE, SL.library = SL.library)
#Store the estimates
EY1_hat_tmle_add <- EY1_ltmle_t_add$estimates["tmle"]; EY1_hat_tmle_add
EY1_hat_iptw_add <- EY1_ltmle_t_add$estimates["iptw"]; EY1_hat_iptw_add
EY1_hat_gcomp_add <- EY1_ltmle_g_add$estimates["gcomp"]; EY1_hat_gcomp_add
#Print the summary
summary(EY1_ltmle_t_add, "tmle")
summary(EY1_ltmle_t_add, "iptw")
summary(EY1_ltmle_g_add, "gcomp")
load("C:/Users/shell/Dropbox/GRAD SCHOOL/Causal II/Labs/Lab 5/ObsDataMSM.RData")
head(ObsDataMSM)
summary(ObsDataMSM)
#3 create A1 and A2 from all combinations of A
ObsDataMSM$A <- ifelse(ObsDataMSM$A1==1 & ObsDataMSM$A2==0, 1, ifelse(ObsDataMSM$A1==0 & ObsDataMSM$A2==1, 2, ifelse(ObsDataMSM$A1==0 & ObsDataMSM$A2==0, 3, NA)))
View(ObsDataMSM)
#3 create A1 and A2 from all combinations of A
ObsDataMSM$A1 <- ifelse(ObsDataMSM$A==1, 1, 0)
ObsDataMSM$A2 <- ifelse(ObsDataMSM$A==2, 1, 0)
ObsDataMSM <- ObsDataMSM[, c("W1", "W2", "A1", "A2", "Y")]
#5 create the object summary.measures
summary.measures <- array(1:3, dim = c(3,1,1))
#name column
colmnames(summary.measures) = level
#name column
colnames(summary.measures) = level
#name column
colnames(summary.measures) = "level"
#7 estimate the parameters of the above MSM
results_l <- ltmleMSM(data = ObsDataMSM, Anodes = c("A1", "A2"), Ynodes = "Y", regimes = regimes, summary.measures = summary.measures, variance.method = "ic", working.msm = working.msm)
#4 create regimes
regimes <- list(function (row) c(1, 0),
function (row) c(0, 1),
function (row) c(0, 0))
#5 create the object summary.measures
summary.measures <- array(1:3, dim = c(3,1,1))
colnames(summary.measures) = "level"
#6 create working.msm
working.msm <- "Y ~ level"
#7 estimate the parameters of the above MSM
results_l <- ltmleMSM(data = ObsDataMSM, Anodes = c("A1", "A2"), Ynodes = "Y", regimes = regimes, summary.measures = summary.measures, variance.method = "ic", working.msm = working.msm)
results_g <- ltmleMSM(data = ObsDataMSM, Anodes = c("A1", "A2"), Ynodes = "Y", regimes = regimes, summary.measures = summary.measures, variance.method = "ic", working.msm = working.msm, gcomp = TRUE)
#Print the summary
summary(results_l, "tmle")
summary(results_l, "iptw")
summary(results_g, "gcomp")
bootCI_IPTW
quantile(PsiHat_gcomp_b, probs = c(0.025, .975))
PsiHat_gcomp_b
head(estimates)
plot(PsiHat_gcomp_b)
normalCI_TMLE_u <- estimates[,3] + 1.96*(sqrt(variance[3]))
#6. Use quantile function to obtain bootstrap CI
bootCI_TMLE <- quantile(estimates[,3], probs = c(0.025, .975))
bootCI_IPTW <- quantile(estimates[,2], probs = c(0.025, .975))
bootCI_Gcomp <- quantile(estimates[,1], probs = c(0.025, .975))
sqrt(32)
setwd("C:/Users/shell/Box Sync/242FinalProject")
source('C:/Users/shell/Box Sync/242FinalProject/Descriptive.R', echo=TRUE)
source('C:/Users/shell/Box Sync/242FinalProject/Descriptive.R', echo=TRUE)
source('C:/Users/shell/Box Sync/242FinalProject/Descriptive.R', echo=TRUE)
View(df)
val_label(df$lkinjrc)
library(labelled)
install.packages("labelled")
val_label(df$lkinjrc)
library(labelled)
val_label(lkinjrc)
val_label(df$lkinjrc)
val_labels(v)
val_labels(df)
val_label(df$Black)
val_label(df, Black)
#set working directory
#setwd("~/Box Sync/242FinalProject/Dataset") #LIZZY
setwd("C:/Users/shell/Box Sync/242FinalProject")  #SHELLEY
#open packages
library(here)
library(foreign)
library(labelled)
setwd("~/GitHub/lizzyandshelley/Dataset")
#load the data
df <- read.spss("Ricky.SAV", use.value.labels = TRUE, to.data.frame=TRUE)
#get variable labels
attr(df, "variable.labels")
df.labels <- as.data.frame(attr(df, "variable.labels"))
View(df.labels)
rownames(df.labels)
QDSlabels <- data.frame(rownames(df.labels))
head(QDSlabels)
df.labels2 <- c(QDSlabels, df.labels)
head(df.labels2)
View(QDSlabels)
View(df.labels)
merge(QDSlabels)
df.labels2 <- cbind(QDSlabels, df.labels)
head(df.labels2)
View(df.labels)
View(df.labels2)
names(df.labels2) <- ("QDSlabels", "description")
names(df.labels2) <- c("QDSlabels", "description")
df.labels2$description[df.labels2$QDSlabels=="GENDER"]
#set working directory
#setwd("~/Box Sync/242FinalProject/Dataset") #LIZZY
setwd("~/GitHub/lizzyandshelley/Dataset")  #SHELLEY
#open packages
library(here)
library(foreign)
library(labelled)
#load the data
df <- read.spss("Ricky.SAV", use.value.labels = TRUE, to.data.frame=TRUE)
#get variable labels
attr(df, "variable.labels")
df.labels <- as.data.frame(attr(df, "variable.labels"))
QDSlabels <- data.frame(rownames(df.labels))
df.labels <- c(QDSlabels, df.labels)
df.labels <- cbind(QDSlabels, df.labels)
#set working directory
#setwd("~/Box Sync/242FinalProject/Dataset") #LIZZY
setwd("~/GitHub/lizzyandshelley/Dataset")  #SHELLEY
#open packages
library(here)
library(foreign)
library(labelled)
#load the data
df <- read.spss("Ricky.SAV", use.value.labels = TRUE, to.data.frame=TRUE)
#get variable labels
attr(df, "variable.labels")
df.labels <- as.data.frame(attr(df, "variable.labels"))
QDSlabels <- data.frame(rownames(df.labels))
df.labels <- cbind(QDSlabels, df.labels)
names(df.labels) <- c("VAR_ID", "description")
rm(QDSlabels)
QDSlabels <- data.frame(rownames(df.labels))
rm(QDSlabels)
df.labels$description[df.labels$VAR_ID=="GENDER"]
View(df.labels)
View(df.labels)
view(df$ALWYSHL)
View(df$ALWYSHL)
View(df$NHLP6M)
View(df$HLP6M)
df$RELSTAT
df$GENDER
df$RACELG
#select variables
dfs <- df %>%
cbind(GENDER, AGE)
library(dplyr)
#select variables
dfs <- df %>%
cbind(GENDER, AGE)
#select variables
dfs <- df %>%
cbind("GENDER", "AGE")
#select variables
dfs <- df %>%
select.list("GENDER", "AGE")
#select variables
dfs <- df %>%
SELECT("GENDER", "AGE")
#select variables
dfs <- df %>%
select("GENDER", "AGE")
View(dfs)
#select variables
dfs <- df %>%
select("GENDER", "AGE", "RACELG", "HOMELESS", "HOMELESS1", "HOMELESS2", "MOSHOME", "MOSHOME1", "MOSHOME2",
"NVHOUSED", "ALWYSHL", "HOUSED", "HLP6M", "HLP6M1", "HLP6M2", "NHLP6M", "NHLP6M1", "NHLP6M2", "NDLSRCF",
"NDLSRCF1", "NDLSRCF2", "PUBINJ", "PUBINJ1", "PUBINJ2", "IJWOTH", "IJWOTH1", "IJWOTH2", "IJNON", "IJNON1",
"IJNON2", "ODP6M", "ODP6M1", "ODP6M2", "ODTIMES", "ODTIMES1", "ODTIMES2", "WOD6M", "WOD6M1", "WOD6M2", "ODTRAIN",
"ODTRAIN1", "ODTRAIN2", "NALOWN", "NALOWN1", "NALOWN2", "NALAVAIL", "NALAVAIL1", "NALAVAIL2", "POLICE", "POLICE1",
"POLICE2", "POLTIME", "POLTIME1", "POLTIME2", "ARREST", "ARREST1", "ARREST2", "JAIL", "JAIL1", "JAIL2", "TX6MOS",
"TX6MOS1", "TX6MOS2")
#select variables
dfs <- df %>%
select("GENDER", "AGE", "RACELG", "HOMELESS", "HOMELESS1", "HOMELESS2", "MOSHOME", "MOSHOME1", "MOSHOM2",
"NVHOUSED", "ALWYSHL", "HOUSED", "HLP6M", "HLP6M1", "HLP6M2", "NHLP6M", "NHLP6M1", "NHLP6M2", "NDLSRCF",
"NDLSRCF1", "NDLSRCF2", "PUBINJ", "PUBINJ1", "PUBINJ2", "IJWOTH", "IJWOTH1", "IJWOTH2", "IJNON", "IJNON1",
"IJNON2", "ODP6M", "ODP6M1", "ODP6M2", "ODTIMES", "ODTIMES1", "ODTIMES2", "WOD6M", "WOD6M1", "WOD6M2", "ODTRAIN",
"ODTRAIN1", "ODTRAIN2", "NALOWN", "NALOWN1", "NALOWN2", "NALAVAIL", "NALAVAIL1", "NALAVAIL2", "POLICE", "POLICE1",
"POLICE2", "POLTIME", "POLTIME1", "POLTIME2", "ARREST", "ARREST1", "ARREST2", "JAIL", "JAIL1", "JAIL2", "TX6MOS",
"TX6MOS1", "TX6MOS2")
#select variables
dfs <- df %>%
select("GENDER", "AGE", "RACELG", "HOMELESS", "HOMELESS1", "HOMELESS2", "MOSHOME", "MOSHOME1", "MOSHOM2",
"NVHOUSED", "ALWYSHL", "HOUSED", "HLP6M", "HLP6M1", "HLP6M2", "NHLP6M", "NHLP6M1", "NHLP6M2", "NDLSRCF",
"NDLSRCF1", "NDLSRCF2", "PUBINJ", "PUBINJ1", "PUBINJ2", "IJWOTH", "IJWOTH1", "IJWOTH2", "IJNON", "IJNON1",
"IJNON2", "ODP6M", "ODP6M1", "ODP6M2", "ODTIMES1", "ODTIMES2", "WOD6M", "WOD6M1", "WOD6M2", "ODTRAIN",
"ODTRAIN1", "ODTRAIN2", "NALOWN", "NALOWN1", "NALOWN2", "NALAVAIL", "NALAVAIL1", "NALAVAIL2", "POLICE", "POLICE1",
"POLICE2", "POLTIME", "POLTIME1", "POLTIME2", "ARREST", "ARREST1", "ARREST2", "JAIL", "JAIL1", "JAIL2", "TX6MOS",
"TX6MOS1", "TX6MOS2")
#select variables
dfs <- df %>%
select("GENDER", "AGE", "RACELG", "HOMELESS", "HOMELESS1", "HOMELESS2", "MOSHOME", "MOSHOME1", "MOSHOM2",
"NVHOUSED", "ALWYSHL", "HOUSED", "HLP6M", "HLP6M1", "HLP6M2", "NHLP6M", "NHLP6M1", "NHLP6M2", "NDLSRCF",
"NDLSRCF1", "NDLSRCF2", "PUBINJ", "PUBINJ1", "PUBINJ2", "IJWOTH", "IJWOTH1", "IJWOTH2", "IJNON", "IJNON1",
"IJNON2", "ODP6M", "ODP6M1", "ODP6M2", "ODTIMES1", "ODTIMES2", "WOD6M", "WOD6M1", "WOD6M2", "ODTRAIN1",
"NALOWN", "NALOWN1", "NALOWN2", "NALAVAIL", "NALAVAIL1", "NALAVAIL2", "POLICE", "POLICE1", "POLICE2",
"POLTIME", "POLTIME1", "POLTIME2", "ARREST", "ARREST1", "ARREST2", "JAIL", "JAIL1", "JAIL2", "TX6MOS",
"TX6MOS1", "TX6MOS2")
#select variables
dfs <- df %>%
select("GENDER", "AGE", "RACELG", "HOMELESS", "HOMELESS1", "HOMELESS2", "MOSHOME", "MOSHOME1", "MOSHOM2",
"NVHOUSED", "ALWYSHL", "HOUSED", "HLP6M", "HLP6M1", "HLP6M2", "NHLP6M", "NHLP6M1", "NHLP6M2", "NDLSRCF",
"NDLSRCF1", "NDLSRCF2", "PUBINJ", "PUBINJ1", "PUBINJ2", "IJWOTH", "IJWOTH1", "IJWOTH2", "IJNON", "IJNON1",
"IJNON2", "ODP6M", "ODP6M1", "ODP6M2", "ODTIMES1", "ODTIMES2", "WOD6M", "WOD6M1", "WOD6M2", "ODTRAIN1",
"NALOWN1", "NALAVAIL", "NALAVAIL1", "NALAVAIL2", "POLICE", "POLICE1", "POLICE2", "POLTIME", "POLTIME1",
"POLTIME2", "ARREST", "ARREST1", "ARREST2", "JAIL", "JAIL1", "JAIL2", "TX6MOS", "TX6MOS1", "TX6MOS2")
#select variables
dfs <- df %>%
select("GENDER", "AGE", "RACELG", "HOMELESS", "HOMELESS1", "HOMELESS2", "MOSHOME", "MOSHOME1", "MOSHOM2",
"NVHOUSED", "ALWYSHL", "HOUSED", "HLP6M", "HLP6M1", "HLP6M2", "NHLP6M", "NHLP6M1", "NHLP6M2", "NDLSRCF",
"NDLSRCF1", "NDLSRCF2", "PUBINJ", "PUBINJ1", "PUBINJ2", "IJWOTH", "IJWOTH1", "IJWOTH2", "IJNON", "IJNON1",
"IJNON2", "ODP6M", "ODP6M1", "ODP6M2", "ODTIMES1", "ODTIMES2", "WOD6M", "WOD6M1", "WOD6M2", "ODTRAIN1",
"NALOWN1", "NALAVAIL1", "POLICE", "POLICE1", "POLICE2", "POLTIME", "POLTIME1", "POLTIME2", "ARREST",
"ARREST1", "ARREST2", "JAIL", "JAIL1", "JAIL2", "TX6MOS", "TX6MOS1", "TX6MOS2")
#select variables
dfs <- df %>%
select("GENDER", "AGE", "RACELG", "HOMELESS", "HOMELESS1", "HOMELESS2", "MOSHOME", "MOSHOME1", "MOSHOM2",
"NVHOUSED", "ALWYSHL", "HOUSED", "HLP6M", "HLP6M1", "HLP6M2", "NHLP6M", "NHLP6M1", "NHLP6M2", "NDLSRCF",
"NDLSRCF1", "NDLSRCF2", "PUBINJ", "PUBINJ1", "PUBINJ2", "IJWOTH", "IJWOTH1", "IJWOTH2", "IJNON", "IJNON1",
"IJNON2", "ODP6M", "ODP6M1", "ODP6M2", "ODTIMES1", "ODTIMES2", "WOD6M", "WOD6M1", "WOD6M2", "ODTRAIN1",
"NALOWN1", "NALAVAIL1", "POLICE1", "POLICE2", "POLTIME", "POLTIME1", "POLTIME2", "ARREST",
"ARREST1", "ARREST2", "JAIL", "JAIL1", "JAIL2", "TX6MOS", "TX6MOS1", "TX6MOS2")
#select variables
dfs <- df %>%
select("GENDER", "AGE", "RACELG", "HOMELESS", "HOMELESS1", "HOMELESS2", "MOSHOME", "MOSHOME1", "MOSHOM2",
"NVHOUSED", "ALWYSHL", "HOUSED", "HLP6M", "HLP6M1", "HLP6M2", "NHLP6M", "NHLP6M1", "NHLP6M2", "NDLSRCF",
"NDLSRCF1", "NDLSRCF2", "PUBINJ", "PUBINJ1", "PUBINJ2", "IJWOTH", "IJWOTH1", "IJWOTH2", "IJNON", "IJNON1",
"IJNON2", "ODP6M", "ODP6M1", "ODP6M2", "ODTIMES1", "ODTIMES2", "WOD6M", "WOD6M1", "WOD6M2", "ODTRAIN1",
"NALOWN1", "NALAVAIL1", "POLICE1", "POLICE2", "POLTIME1", "ARREST",
"ARREST1", "ARREST2", "JAIL", "JAIL1", "JAIL2", "TX6MOS", "TX6MOS1", "TX6MOS2")
#select variables
dfs <- df %>%
select("GENDER", "AGE", "RACELG", "HOMELESS", "HOMELESS1", "HOMELESS2", "MOSHOME", "MOSHOME1", "MOSHOM2",
"NVHOUSED", "ALWYSHL", "HOUSED", "HLP6M", "HLP6M1", "HLP6M2", "NHLP6M", "NHLP6M1", "NHLP6M2", "NDLSRCF",
"NDLSRCF1", "NDLSRCF2", "PUBINJ", "PUBINJ1", "PUBINJ2", "IJWOTH", "IJWOTH1", "IJWOTH2", "IJNON", "IJNON1",
"IJNON2", "ODP6M", "ODP6M1", "ODP6M2", "ODTIMES1", "ODTIMES2", "WOD6M", "WOD6M1", "WOD6M2", "ODTRAIN1",
"NALOWN1", "NALAVAIL1", "POLICE1", "POLICE2", "POLTIME1", "ARREST1", "ARREST2", "JAIL", "JAIL1", "JAIL2",
"TX6MOS", "TX6MOS1", "TX6MOS2")
#select variables
dfs <- df %>%
select("GENDER", "AGE", "RACELG", "HOMELESS", "HOMELESS1", "HOMELESS2", "MOSHOME", "MOSHOME1", "MOSHOM2", "NVHOUSED",
"ALWYSHL", "HOUSED", "HLP6M", "HLP6M1", "HLP6M2", "NHLP6M", "NHLP6M1", "NHLP6M2", "NDLSRCF", "NDLSRCF1",
"NDLSRCF2", "PUBINJ", "PUBINJ1", "PUBINJ2", "IJWOTH", "IJWOTH1", "IJWOTH2", "IJNON", "IJNON1", "IJNON2",
"ODP6M", "ODP6M1", "ODP6M2", "ODTIMES1", "ODTIMES2", "WOD6M", "WOD6M1", "WOD6M2", "ODTRAIN1", "NALOWN1",
"NALAVAIL1", "POLICE1", "POLICE2", "POLTIME1", "ARREST1", "ARREST2", "JAIL1", "JAIL2", "TX6MOS", "TX6MOS1", "TX6MOS2")
#select variables
dfs <- df %>%
select("GENDER", "AGE", "RACELG", "HOMELESS", "HOMELESS1", "HOMELESS2", "MOSHOME", "MOSHOME1", "MOSHOM2", "NVHOUSED",
"ALWYSHL", "HOUSED", "HLP6M", "HLP6M1", "HLP6M2", "NHLP6M", "NHLP6M1", "NHLP6M2", "NDLSRCF", "NDLSRCF1",
"NDLSRCF2", "PUBINJ", "PUBINJ1", "PUBINJ2", "IJWOTH", "IJWOTH1", "IJWOTH2", "IJNON", "IJNON1", "IJNON2",
"ODP6M", "ODP6M1", "ODP6M2", "ODTIMES1", "ODTIMES2", "WOD6M", "WOD6M1", "WOD6M2", "ODTRAIN1", "NALOWN1",
"NALAVAIL1", "POLICE1", "POLICE2", "POLTIME1", "ARREST1", "ARREST2", "JAIL1", "JAIL2", "TX6MOS1", "TX6MOS2")
View(dfs)
#select complete cases
dfc <- df[df$FU2==1]
table(df$FU1, useNA = "ifany")
table(df$FU2, useNA = "ifany")
#select complete cases
dfc <- subset(df, FU2==1 & FU1=="Yes")
#select variables
dfs <- dfc %>%
select("GENDER", "AGE", "RACELG", "HOMELESS", "HOMELESS1", "HOMELESS2", "MOSHOME", "MOSHOME1", "MOSHOM2", "NVHOUSED",
"ALWYSHL", "HOUSED", "HLP6M", "HLP6M1", "HLP6M2", "NHLP6M", "NHLP6M1", "NHLP6M2", "NDLSRCF", "NDLSRCF1",
"NDLSRCF2", "PUBINJ", "PUBINJ1", "PUBINJ2", "IJWOTH", "IJWOTH1", "IJWOTH2", "IJNON", "IJNON1", "IJNON2",
"ODP6M", "ODP6M1", "ODP6M2", "ODTIMES1", "ODTIMES2", "WOD6M", "WOD6M1", "WOD6M2", "ODTRAIN1", "NALOWN1",
"NALAVAIL1", "POLICE1", "POLICE2", "POLTIME1", "ARREST1", "ARREST2", "JAIL1", "JAIL2", "TX6MOS1", "TX6MOS2")
View(dfs)
View(df.labels)
#look at initiation variables
dfs %>%
summarise(HLP6M, HLP6M1, HLP6M2)
#look at initiation variables
dfs %>%
sum(HLP6M, HLP6M1, HLP6M2)
#look at initiation variables
apply(dfs[c("HLP6M", "HLP6M1", "HLP6M2")], 2, table)
table(dfs$HLP6M)
table(dfs$HLP6M1)
#look at initiation variables
apply(dfs[c("HLP6M", "HLP6M1", "HLP6M2")], 2, table)
df$TX6
table(dfs$ODTRAIN1)
table(dfs$NALAVAIL1)
table(df$ARREST2, useNA = "ifany")
table(dfs$ARREST2, useNA = "ifany")
View(dfs)
