OAT6monthbynal6mos.modpoiss.RR.coefci.adj <- cbind(OAT6monthbynal6mos.modpoiss$coefficients, confint.default(OAT6monthbynal6mos.modpoiss))
OAT6monthbynal6mos.modpoiss.RR.expci.adj <- exp(OAT6monthbynal6mos.modpoiss.RR.coefci.adj)
OAT6monthbynal6mos.modpoiss.RR.expci.adj
#rounded to two decimal places
round(OAT6monthbynal6mos.modpoiss.RR.expci.adj, 2)
#WOD6M
WOD6Mbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(WOD6M), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(WOD6Mbynal6mos.modpoiss)
exp(coef(WOD6Mbynal6mos.modpoiss))
#95% CI for WOD6M
WOD6Mbynal6mos.modpoiss.RR.coefci.adj <- cbind(WOD6Mbynal6mos.modpoiss$coefficients, confint.default(WOD6Mbynal6mos.modpoiss))
WOD6Mbynal6mos.modpoiss.RR.expci.adj <- exp(WOD6Mbynal6mos.modpoiss.RR.coefci.adj)
WOD6Mbynal6mos.modpoiss.RR.expci.adj
#rounded to two decimal places
round(WOD6Mbynal6mos.modpoiss.RR.expci.adj, 2)
#ODP6M
ODP6Mbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(ODP6M), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(ODP6Mbynal6mos.modpoiss)
exp(coef(ODP6Mbynal6mos.modpoiss))
#95% CI for ODP6M
ODP6Mbynal6mos.modpoiss.RR.coefci.adj <- cbind(ODP6Mbynal6mos.modpoiss$coefficients, confint.default(ODP6Mbynal6mos.modpoiss))
ODP6Mbynal6mos.modpoiss.RR.expci.adj <- exp(ODP6Mbynal6mos.modpoiss.RR.coefci.adj)
ODP6Mbynal6mos.modpoiss.RR.expci.adj
#rounded to two decimal places
round(ODP6Mbynal6mos.modpoiss.RR.expci.adj, 2)
####DIFFERENT APPROACHES FOR MULTIVARIABLE MODELS
####FULL MULTIVARIABLE MODIFIED POISSON MODEL WITH ROBUST SE'S WITH EVERY COVARIATE INCLUDED####
fitnal6mos.modpoiss  <- geeglm(formula=NAL6MOS.new ~ factor(LOCALID) + factor(GENDER) + factor(agecat) + factor(RACE_cat) + factor(ED) + factor(HOMELESS) + factor(JAIL) + factor(STIM.freq) + factor(OPIOID.freq) + factor(OAT6month) + factor(WOD6M) + factor(ODP6M), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(fitnal6mos.modpoiss)
#extract the coefficients and confidence intervals, exponentiate to get RR and 95% CI (using confint.default)
fitnal6mos.RR.coefci.adj <- cbind(fitnal6mos.modpoiss$coefficients, confint.default(fitnal6mos.modpoiss))
fitnal6mos.RR.expci.adj <- exp(fitnal6mos.RR.coefci.adj)
fitnal6mos.RR.expci.adj
round(fitnal6mos.RR.expci.adj, 2)
###ADJUSTED MULTIVARIATE MODIFIED POISSON INCLUDING ONLY THOSE SIGNIFICANT AT LESS THAN 0.05 or 0.2 (SO ONLY TAKE OUT GENDER)
#fitnal6mos.modpoiss.approach1  <- geeglm(formula=NAL6MOS.new ~ factor(LOCALID) + factor(agecat) + factor(RACE_cat) + factor(ED) + factor(HOMELESS) + factor(JAIL) + factor(STIM.freq) + factor(OPIOID.freq) + factor(WOD6M) + factor(ODP6M), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
#summary(fitnal6mos.modpoiss.approach1)
#extract the coefficients and confidence intervals, exponentiate to get RR and 95% CI (using confint.default)
#fitnal6mos.modpoiss.approach1.RR.coefci.adj <- cbind(fitnal6mos.modpoiss.approach1$coefficients, confint.default(fitnal6mos.modpoiss.approach1))
#fitnal6mos.modpoiss.approach1.RR.expci.adj <- exp(fitnal6mos.modpoiss.approach1.RR.coefci.adj)
#fitnal6mos.modpoiss.approach1.RR.expci.adj
#round(fitnal6mos.modpoiss.approach1.RR.expci.adj, 2)
#subset the data to those who have received naloxone in the last 6 mos
df_nal6mos <- subset(df, NAL6MOS.new == 1) #N = 265 who have received naloxone in the last 6 mos
#checking frequencies are correct
table(df_nal6mos$NALOWN, useNA = "ifany")
#Create a table 1 not stratified by any outcome variable, just for this subset of N = 265 PWID who received naloxone in the last 6mos
table1.subset.receivednal6mos <- CreateTableOne(vars= myVars,
data= df_nal6mos,
factorVars = catVars)
print(table1.subset.receivednal6mos, showAllLevels = TRUE, missing = FALSE)
# Create a table 1 stratified by currently owning naloxone
table1byNALOWN <- CreateTableOne(vars=myVars,
data=df_nal6mos,
factorVars = catVars,
strata="NALOWN")
print(table1byNALOWN, showAllLevels = TRUE, missing = FALSE)
#FOR UNIVARIATES: check column percentages of univariates. this is because prop.table will show missing percentages whereas tableone package doesn't include the missing data when calculating column percents.
#table(df_nal6mos$X, useNA = "ifany")
#round(prop.table(table(df_nal6mos$X, useNA = "ifany")),3)
#FOR BIVARIATES: check column percentages of bivariates. this is because prop.table will show missing percentages whereas tableone package doesn't include the missing data when calculating column percents.
#table(df_nal6mos$X, df_nal6mos$NALOWN, useNA = "ifany")
#round(prop.table(table(df_nal6mos$X, df_nal6mos$NALOWN, useNA = "ifany"),2),3)
18+58
23.7+76.3
46+142
round(prop.table(table(df_nal6mos$OAT6month, df_nal6mos$NALOWN, useNA = "ifany"),2),3)
round(prop.table(table(df_nal6mos$OAT6month, df_nal6mos$NAL6MOS.new, useNA = "ifany"),2),3)
round(prop.table(table(df$OAT6month, df$NAL6MOS.new, useNA = "ifany"),2),3)
#require geepack because modified poisson is picky
require(geepack)
#subset the data with complete observations because geepack is picky (N= 259)
df.modpoiss.nalown <- subset(df_nal6mos, select=c(SUBJECT, NALOWN, LOCALID, GENDER, agecat, RACE_cat, ED, HOMELESS, JAIL, STIM.freq, OPIOID.freq, OAT6month, WOD6M, ODP6M))
df.modpoiss.nalown <- na.omit(df.modpoiss.nalown)
#recode NALOWN as binary numeric since factor isn't working
df.modpoiss.nalown$NALOWN.binary<-ifelse(df.modpoiss.nalown$NALOWN=='Yes', 1,0)
#LOCALID
localIDbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(LOCALID), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(localIDbynalown.modpoiss)
exp(coef(localIDbynalown.modpoiss))
#95% CI for localID
localIDbynalown.modpoiss.RR.coefci.adj <- cbind(localIDbynalown.modpoiss$coefficients, confint.default(localIDbynalown.modpoiss))
localIDbynalown.modpoiss.RR.expci.adj <- exp(localIDbynalown.modpoiss.RR.coefci.adj)
localIDbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(localIDbynalown.modpoiss.RR.expci.adj, 2)
#GENDER
genderbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(GENDER), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(genderbynalown.modpoiss)
exp(coef(genderbynalown.modpoiss))
#95% CI for gender
genderbynalown.modpoiss.RR.coefci.adj <- cbind(genderbynalown.modpoiss$coefficients, confint.default(genderbynalown.modpoiss))
genderbynalown.modpoiss.RR.expci.adj <- exp(genderbynalown.modpoiss.RR.coefci.adj)
genderbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(genderbynalown.modpoiss.RR.expci.adj, 2)
#agecat
agecatbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(agecat), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(agecatbynalown.modpoiss)
exp(coef(agecatbynalown.modpoiss))
#95% CI for agecat
agecatbynalown.modpoiss.RR.coefci.adj <- cbind(agecatbynalown.modpoiss$coefficients, confint.default(agecatbynalown.modpoiss))
agecatbynalown.modpoiss.RR.expci.adj <- exp(agecatbynalown.modpoiss.RR.coefci.adj)
agecatbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(agecatbynalown.modpoiss.RR.expci.adj, 2)
#racecat
racecatbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(RACE_cat), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(racecatbynalown.modpoiss)
exp(coef(racecatbynalown.modpoiss))
#95% CI for racecat
racecatbynalown.modpoiss.RR.coefci.adj <- cbind(racecatbynalown.modpoiss$coefficients, confint.default(racecatbynalown.modpoiss))
racecatbynalown.modpoiss.RR.expci.adj <- exp(racecatbynalown.modpoiss.RR.coefci.adj)
racecatbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(racecatbynalown.modpoiss.RR.expci.adj, 2)
#ED
edbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(ED), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(edbynalown.modpoiss)
exp(coef(edbynalown.modpoiss))
#95% CI for ed
edbynalown.modpoiss.RR.coefci.adj <- cbind(edbynalown.modpoiss$coefficients, confint.default(edbynalown.modpoiss))
edbynalown.modpoiss.RR.expci.adj <- exp(edbynalown.modpoiss.RR.coefci.adj)
edbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(edbynalown.modpoiss.RR.expci.adj, 2)
#HOMELESS
homelessbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(HOMELESS), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(homelessbynalown.modpoiss)
exp(coef(homelessbynalown.modpoiss))
#95% CI for homeless
homelessbynalown.modpoiss.RR.coefci.adj <- cbind(homelessbynalown.modpoiss$coefficients, confint.default(homelessbynalown.modpoiss))
homelessbynalown.modpoiss.RR.expci.adj <- exp(homelessbynalown.modpoiss.RR.coefci.adj)
homelessbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(homelessbynalown.modpoiss.RR.expci.adj, 2)
#JAIL
jailbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(JAIL), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(jailbynalown.modpoiss)
exp(coef(jailbynalown.modpoiss))
#95% CI for jail
jailbynalown.modpoiss.RR.coefci.adj <- cbind(jailbynalown.modpoiss$coefficients, confint.default(jailbynalown.modpoiss))
jailbynalown.modpoiss.RR.expci.adj <- exp(jailbynalown.modpoiss.RR.coefci.adj)
jailbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(jailbynalown.modpoiss.RR.expci.adj, 2)
#STIM.freq
STIM.freqbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(STIM.freq), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(STIM.freqbynalown.modpoiss)
exp(coef(STIM.freqbynalown.modpoiss))
#95% CI for STIM.freq
STIM.freqbynalown.modpoiss.RR.coefci.adj <- cbind(STIM.freqbynalown.modpoiss$coefficients, confint.default(STIM.freqbynalown.modpoiss))
STIM.freqbynalown.modpoiss.RR.expci.adj <- exp(STIM.freqbynalown.modpoiss.RR.coefci.adj)
STIM.freqbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(STIM.freqbynalown.modpoiss.RR.expci.adj, 2)
#OPIOID.freq
OPIOID.freqbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(OPIOID.freq), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(OPIOID.freqbynalown.modpoiss)
exp(coef(OPIOID.freqbynalown.modpoiss))
#95% CI for OPIOID.freq
OPIOID.freqbynalown.modpoiss.RR.coefci.adj <- cbind(OPIOID.freqbynalown.modpoiss$coefficients, confint.default(OPIOID.freqbynalown.modpoiss))
OPIOID.freqbynalown.modpoiss.RR.expci.adj <- exp(OPIOID.freqbynalown.modpoiss.RR.coefci.adj)
OPIOID.freqbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(OPIOID.freqbynalown.modpoiss.RR.expci.adj, 2)
#OAT6month
OAT6monthbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(OAT6month), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(OAT6monthbynalown.modpoiss)
exp(coef(OAT6monthbynalown.modpoiss))
#95% CI for OAT6month
OAT6monthbynalown.modpoiss.RR.coefci.adj <- cbind(OAT6monthbynalown.modpoiss$coefficients, confint.default(OAT6monthbynalown.modpoiss))
OAT6monthbynalown.modpoiss.RR.expci.adj <- exp(OAT6monthbynalown.modpoiss.RR.coefci.adj)
OAT6monthbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(OAT6monthbynalown.modpoiss.RR.expci.adj, 2)
#WOD6M
WOD6Mbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(WOD6M), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(WOD6Mbynalown.modpoiss)
exp(coef(WOD6Mbynalown.modpoiss))
#95% CI for WOD6M
WOD6Mbynalown.modpoiss.RR.coefci.adj <- cbind(WOD6Mbynalown.modpoiss$coefficients, confint.default(WOD6Mbynalown.modpoiss))
WOD6Mbynalown.modpoiss.RR.expci.adj <- exp(WOD6Mbynalown.modpoiss.RR.coefci.adj)
WOD6Mbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(WOD6Mbynalown.modpoiss.RR.expci.adj, 2)
#ODP6M
ODP6Mbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(ODP6M), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(ODP6Mbynalown.modpoiss)
exp(coef(ODP6Mbynalown.modpoiss))
#95% CI for ODP6M
ODP6Mbynalown.modpoiss.RR.coefci.adj <- cbind(ODP6Mbynalown.modpoiss$coefficients, confint.default(ODP6Mbynalown.modpoiss))
ODP6Mbynalown.modpoiss.RR.expci.adj <- exp(ODP6Mbynalown.modpoiss.RR.coefci.adj)
ODP6Mbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(ODP6Mbynalown.modpoiss.RR.expci.adj, 2)
##############################################################
#########MULTIVARIATE MODELS USING DIFFERENT APPROACHES#######
##############################################################
#full multivariate model using every covariate regardless of significance
fitnalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(LOCALID) + factor(GENDER) + factor(agecat) + factor(RACE_cat) + factor(ED) + factor(HOMELESS) + factor(JAIL) + factor(STIM.freq) + factor(OPIOID.freq) + factor(WOD6M) + factor(ODP6M), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(fitnalown.modpoiss)
exp(coef(fitnalown.modpoiss))
#extract the coefficients and confidence intervals, exponentiate to get RR and 95% CI (using confint.default)
fitnalown.RR.coefci.adj <- cbind(fitnalown.modpoiss$coefficients, confint.default(fitnalown.modpoiss))
fitnalown.RR.expci.adj <- exp(fitnalown.RR.coefci.adj)
fitnalown.RR.expci.adj
round(fitnalown.RR.expci.adj, 2)
##############################################################
###ADJUSTED MULTIVARIATE MODIFIED POISSON INCLUDING ONLY THOSE SIGNIFICANT AT LESS THAN 0.2###
#fitnalown.modpoiss.approach1 <- geeglm(formula=NALOWN.binary ~ factor(LOCALID) + factor(agecat) + factor(ED) + factor(HOMELESS) + factor(JAIL), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
#summary(fitnalown.modpoiss.approach1)
#extract the coefficients and confidence intervals, exponentiate to get RR and 95% CI (using confint.default)
#fitnalown.modpoiss.approach1.RR.coefci.adj <- cbind(fitnalown.modpoiss.approach1$coefficients, confint.default(fitnalown.modpoiss.approach1))
#fitnalown.modpoiss.approach1.RR.expci.adj <- exp(fitnalown.modpoiss.approach1.RR.coefci.adj)
#fitnalown.modpoiss.approach1.RR.expci.adj
#round(fitnalown.modpoiss.approach1.RR.expci.adj, 2)
##############################################################
###ADJUSTED MULTIVARIATE MODIFIED POISSON INCLUDING ONLY THOSE SIGNIFICANT AT LESS THAN 0.05###
#fitnalown.modpoiss.approach2 <-  geeglm(formula=NALOWN.binary ~  factor(HOMELESS) + factor(JAIL), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
#summary(fitnalown.modpoiss.approach2)
#extract the coefficients and confidence intervals, exponentiate to get RR and 95% CI (using confint.default)
#fitnalown.modpoiss.approach2.RR.coefci.adj <- cbind(fitnalown.modpoiss.approach2$coefficients, confint.default(fitnalown.modpoiss.approach2))
#fitnalown.modpoiss.approach2.RR.expci.adj <- exp(fitnalown.modpoiss.approach2.RR.coefci.adj)
#fitnalown.modpoiss.approach2.RR.expci.adj
#round(fitnalown.modpoiss.approach2.RR.expci.adj, 2)
##############################################################
#########MULTIVARIATE MODELS USING DIFFERENT APPROACHES#######
##############################################################
#full multivariate model using every covariate regardless of significance
fitnalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(LOCALID) + factor(GENDER) + factor(agecat) + factor(RACE_cat) + factor(ED) + factor(HOMELESS) + factor(JAIL) + factor(STIM.freq) + factor(OPIOID.freq) + factor(OAT6month) + factor(WOD6M) + factor(ODP6M), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(fitnalown.modpoiss)
exp(coef(fitnalown.modpoiss))
#extract the coefficients and confidence intervals, exponentiate to get RR and 95% CI (using confint.default)
fitnalown.RR.coefci.adj <- cbind(fitnalown.modpoiss$coefficients, confint.default(fitnalown.modpoiss))
fitnalown.RR.expci.adj <- exp(fitnalown.RR.coefci.adj)
fitnalown.RR.expci.adj
round(fitnalown.RR.expci.adj, 2)
knitr::opts_chunk$set(echo = T, eval=T, warning = FALSE, message = FALSE, global.par=TRUE)
knitr::opts_knit$set(root.dir="~/Documents/GitHub/lizzyandshelley/Dataset")
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=85),tidy=TRUE)
library(base)
library(knitr)
library(dplyr)
library(here)
library(foreign)
library(labelled)
library(dplyr)
library(reshape2)
library(tableone)
library(forcats)
library(geepack)
library(doBy)
library(blm)
library(lmtest)
library(foreign)
library(MASS)
#set working directory
setwd("~/Documents/GitHub/lizzyandshelley/Dataset") #LIZZY
#load the data
df <- read.spss("CTC12month.SAV", use.value.labels = TRUE, to.data.frame=TRUE)
#get variable labels
attr(df, "variable.labels")
df.labels <- as.data.frame(attr(df, "variable.labels"))
QDSlabels <- data.frame(rownames(df.labels))
df.labels <- cbind(QDSlabels, df.labels)
names(df.labels) <- c("VAR_ID", "description")
rm(QDSlabels)
#USE THIS CODE TO LOOK UP A VARIABLE DESCRIPTION
#df.labels$description[df.labels$VAR_ID=="GENDER"]
df <- df[rowSums(is.na(df)) < 600,] #rows reduced from N=984 to N=536 people
#EXAMPLES OF SUBSETTING
#df <- subset(df, SUMINJ>0)
knitr::opts_chunk$set(echo = T, eval=T, warning = FALSE, message = FALSE, global.par=TRUE)
knitr::opts_knit$set(root.dir="~/Documents/GitHub/lizzyandshelley/Dataset")
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=85),tidy=TRUE)
library(base)
library(knitr)
library(dplyr)
library(here)
library(foreign)
library(labelled)
library(dplyr)
library(reshape2)
library(tableone)
library(forcats)
library(geepack)
library(doBy)
library(blm)
library(lmtest)
library(foreign)
library(MASS)
#set working directory
setwd("~/Documents/GitHub/lizzyandshelley/Dataset") #LIZZY
#load the data
df_allwaves <- read.spss("CTCAllWaves.SAV", use.value.labels = TRUE, to.data.frame=TRUE)
table(df_allwaves$FU1, useNA = "ifany")
table(df_allwaves$FU2, useNA = "ifany")
#city
table(df_allwaves$LOCALID, useNA = "ifany")
#gender (combine other and transgender into other so 3 cat variable)
df_allwaves$GENDER <- df_allwaves$GENDER %>% fct_collapse("Other" = c("Transgender","Other"))
table(df_allwaves$GENDER, useNA = "ifany")
#age
table(df_allwaves$AGE, useNA = "ifany")
table(df_allwaves$agecat, useNA = "ifany") #(<30, 30 to 39, 40-49, 50 or more)
#race (recoded into fewer categories)
table(df_allwaves$RACELG, useNA = "ifany")
df_allwaves$RACE_cat <- df_allwaves$RACELG %>% fct_collapse("Other" = c("Native American","Asian/Pacific Islander", "Mixed Race/Other"))
df_allwaves$RACE_cat <- droplevels(df_allwaves$RACE_cat, exclude=c("Don't know", "Refused"))
table(df_allwaves$RACE_cat, useNA = "ifany")
#education (High school education or more)
table(df_allwaves$ED, useNA = "ifany")
#homelessness (Consider Self Homeless)
table(df_allwaves$HOMELESS, useNA = "ifany")
#incarceration (Any jail in the last 6 months)
#not possible to use because they didn't ask about jail at baseline
###SPEEDBALL###
table(df_allwaves$SB30, useNA = "ifany") #used speedball yes/no (heroin + cocaine or crack)
table(df_allwaves$SBNINJ, useNA = "ifany")  #any non-injection speedball
table(df_allwaves$SBX, useNA = "ifany")  #non-injection speedball (# of times)
table(df_allwaves$SBINJ, useNA = "ifany")  #any injection speedball
table(df_allwaves$SBIX, useNA = "ifany")  #injection speedball (# of times)
#creating frequency variable (2= greater than or equal to 30 times, 1 = greater than 0 but less than 30, 0 = none)
df_allwaves$SBX <- as.integer(df_allwaves$SBX) #change to numeric instead of factor
df_allwaves$SBIX <- as.integer(df_allwaves$SBIX) #change to numeric instead of factor
df_allwaves$SB.freq <-   ifelse(df_allwaves$SBX>=30 | df_allwaves$SBIX>=30, 2, ifelse((df_allwaves$SBX>0 & df_allwaves$SBX<30) & (df_allwaves$SBIX>0 & df_allwaves$SBIX<30), 1,
ifelse(df_allwaves$SBX==0 & df_allwaves$SBIX==0, 0, NA)))
df_allwaves$SB.freq[is.na(df_allwaves$SB.freq)] <- 0
table(df_allwaves$SB.freq, useNA = "ifany")
###GOOFBALL###
table(df_allwaves$GB30, useNA = "ifany")   #used goofball yes/no (heroin + meth)
table(df_allwaves$GBNINJ, useNA = "ifany")   #any non-injection goofball
table(df_allwaves$GBX, useNA = "ifany")   #non-injection goofball (# times)
table(df_allwaves$GBINJ, useNA = "ifany")   #any injection goofball
table(df_allwaves$GBIX, useNA = "ifany")   #injection goofball (# times)
#creating frequency variable (2= greater than or equal to 30 times, 1 = greater than 0 but less than 30, 0 = none)
df_allwaves$GBX <- as.integer(df_allwaves$GBX) #change to numeric instead of factor
df_allwaves$GBIX <- as.integer(df_allwaves$GBIX) #change to numeric instead of factor
df_allwaves$GB.freq <-   ifelse(df_allwaves$GBX>=30 | df_allwaves$GBIX>=30, 2, ifelse((df_allwaves$GBX>0 & df_allwaves$GBX<30) & (df_allwaves$GBIX>0 & df_allwaves$GBIX<30), 1,
ifelse(df_allwaves$GBX==0 & df_allwaves$GBIX==0, 0, NA)))
df_allwaves$GB.freq[is.na(df_allwaves$GB.freq)] <- 0
table(df_allwaves$GB.freq, useNA = "ifany")
###CRACK###
table(df_allwaves$CRCK30, useNA = "ifany")  #used crack yes/no
table(df_allwaves$CRKNINJ, useNA = "ifany") #any non-injection crack
table(df_allwaves$CRCKX, useNA = "ifany")   #non-injection crack (# times)
table(df_allwaves$CRKINJ, useNA = "ifany") #any injection crack
table(df_allwaves$CRCKIX, useNA = "ifany") #injection crack (# times)
#creating frequency variable (2= greater than or equal to 30 times, 1 = greater than 0 but less than 30, 0 = none)
df_allwaves$CRCKX <- as.integer(df_allwaves$CRCKX) #change to numeric instead of factor
df_allwaves$CRCKIX <- as.integer(df_allwaves$CRCKIX) #change to numeric instead of factor
df_allwaves$CRCK.freq <-   ifelse(df_allwaves$CRCKX>=30 | df_allwaves$CRCKIX>=30, 2, ifelse((df_allwaves$CRCKX>0 & df_allwaves$CRCKX<30) & (df_allwaves$CRCKIX>0 & df_allwaves$CRCKIX<30), 1,
ifelse(df_allwaves$CRCKX==0 & df_allwaves$CRCKIX==0, 0, NA)))
df_allwaves$CRCK.freq[is.na(df_allwaves$CRCK.freq)] <- 0
table(df_allwaves$CRCK.freq, useNA = "ifany")
###COCAINE###
table(df_allwaves$PCOKE30, useNA = "ifany") #used powder cocaine yes/no
table(df_allwaves$CCNINJ, useNA = "ifany") #any non-injection powder cocaine
table(df_allwaves$PCOKEX, useNA = "ifany") #non-injection powder cocaine (times)
table(df_allwaves$CCINJ, useNA = "ifany")  #any injection powder cocaine
table(df_allwaves$PCOKEIX, useNA = "ifany") #injection powder cocaine (# times)
#creating frequency variable (2= greater than or equal to 30 times, 1 = greater than 0 but less than 30, 0 = none)
df_allwaves$PCOKEX <- as.integer(df_allwaves$PCOKEX) #change to numeric instead of factor
df_allwaves$PCOKEIX <- as.integer(df_allwaves$PCOKEIX) #change to numeric instead of factor
df_allwaves$PCOKE.freq <-   ifelse(df_allwaves$PCOKEX>=30 | df_allwaves$PCOKEIX>=30, 2, ifelse((df_allwaves$PCOKEX>0 & df_allwaves$PCOKEX<30) & (df_allwaves$PCOKEIX>0 & df_allwaves$PCOKEIX<30), 1,
ifelse(df_allwaves$PCOKEX==0 & df_allwaves$PCOKEIX==0, 0, NA)))
df_allwaves$PCOKE.freq[is.na(df_allwaves$PCOKE.freq)] <- 0
table(df_allwaves$PCOKE.freq, useNA = "ifany")
###METHAMPHETAMINE###
table(df_allwaves$METH30, useNA = "ifany") #used meth yes/no
table(df_allwaves$MTNINJ, useNA = "ifany") #any non-injection meth
table(df_allwaves$METHX, useNA = "ifany") #non-injection meth (# times)
table(df_allwaves$MTINJ, useNA = "ifany") #any injection meth
table(df_allwaves$METHIX, useNA = "ifany") #injection meth (# times)
#creating frequency variable (2= greater than or equal to 30 times, 1 = greater than 0 but less than 30, 0 = none)
df_allwaves$METHX <- as.integer(df_allwaves$METHX) #change to numeric instead of factor
df_allwaves$METHIX <- as.integer(df_allwaves$METHIX) #change to numeric instead of factor
df_allwaves$METH.freq <-   ifelse(df_allwaves$METHX>=30 | df_allwaves$METHIX>=30, 2, ifelse((df_allwaves$METHX>0 & df_allwaves$METHX<30) & (df_allwaves$METHIX>0 & df_allwaves$METHIX<30), 1,
ifelse(df_allwaves$METHX==0 & df_allwaves$METHIX==0, 0, NA)))
df_allwaves$METH.freq[is.na(df_allwaves$METH.freq)] <- 0
table(df_allwaves$METH.freq, useNA = "ifany")
###NONMEDICAL PRESCRIPTION STIMULANT###
table(df_allwaves$ST30, useNA = "ifany") #used NMPS yes/no
table(df_allwaves$STNINJ, useNA = "ifany") #any non-injection NMPS
table(df_allwaves$STX, useNA = "ifany") #non-injection NMPS (# times)
table(df_allwaves$STINJ, useNA = "ifany") #any injection NMPS
table(df_allwaves$STIX, useNA = "ifany") #injection NMPS (# times)
#creating frequency variable (2= greater than or equal to 30 times, 1 = greater than 0 but less than 30, 0 = none)
df_allwaves$STX <- as.integer(df_allwaves$STX) #change to numeric instead of factor
df_allwaves$STIX <- as.integer(df_allwaves$STIX) #change to numeric instead of factor
df_allwaves$ST.freq <-   ifelse(df_allwaves$STX>=30 | df_allwaves$STIX>=30, 2, ifelse((df_allwaves$STX>0 & df_allwaves$STX<30) & (df_allwaves$STIX>0 & df_allwaves$STIX<30), 1,
ifelse(df_allwaves$STX==0 & df_allwaves$STIX==0, 0, NA)))
df_allwaves$ST.freq[is.na(df_allwaves$ST.freq)] <- 0
table(df_allwaves$ST.freq, useNA = "ifany")
###HEROIN###
table(df_allwaves$HER30, useNA = "ifany") #used heroin yes/no
table(df_allwaves$HRNINJ, useNA = "ifany") #any non-injection heroin
table(df_allwaves$HERX, useNA = "ifany") #non-injection heroin (# times)
table(df_allwaves$HRINJ, useNA = "ifany") #any injection heroin
table(df_allwaves$HERIX, useNA = "ifany") #injection heroin (# times)
#creating frequency variable (2= greater than or equal to 30 times, 1 = greater than 0 but less than 30, 0 = none)
df_allwaves$HERX <- as.integer(df_allwaves$HERX) #change to numeric instead of factor
df_allwaves$HERIX <- as.integer(df_allwaves$HERIX) #change to numeric instead of factor
df_allwaves$HER.freq <-   ifelse(df_allwaves$HERX>=30 | df_allwaves$HERIX>=30, 2, ifelse((df_allwaves$HERX>0 & df_allwaves$HERX<30) & (df_allwaves$HERIX>0 & df_allwaves$HERIX<30), 1,
ifelse(df_allwaves$HERX==0 & df_allwaves$HERIX==0, 0, NA)))
df_allwaves$HER.freq[is.na(df_allwaves$HER.freq)] <- 0
table(df_allwaves$HER.freq, useNA = "ifany")
###NONMEDICAL PRESCRIPTION OPIOIDS###
table(df_allwaves$OP30, useNA = "ifany") #used NMPO yes/no
table(df_allwaves$OPNINJ, useNA = "ifany") #any non-injection NMPO
table(df_allwaves$OPX, useNA = "ifany") #non-injection NMPO (# times)
table(df_allwaves$OPINJ, useNA = "ifany") #any injection NMPO
table(df_allwaves$OPIX, useNA = "ifany") #injection NMPO (# times)
#creating frequency variable (2= greater than or equal to 30 times, 1 = greater than 0 but less than 30, 0 = none)
df_allwaves$OPX <- as.integer(df_allwaves$OPX) #change to numeric instead of factor
df_allwaves$OPIX <- as.integer(df_allwaves$OPIX) #change to numeric instead of factor
df_allwaves$OP.freq <-   ifelse(df_allwaves$OPX>=30 | df_allwaves$OPIX>=30, 2, ifelse((df_allwaves$OPX>0 & df_allwaves$OPX<30) & (df_allwaves$OPIX>0 & df_allwaves$OPIX<30), 1,
ifelse(df_allwaves$OPX==0 & df_allwaves$OPIX==0, 0, NA)))
df_allwaves$OP.freq[is.na(df_allwaves$OP.freq)] <- 0
table(df_allwaves$OP.freq, useNA = "ifany")
###METHADONE###
table(df_allwaves$MD30, useNA = "ifany") #used methadone yes/no
table(df_allwaves$MDNINJ, useNA = "ifany") #any non-injection methadone
table(df_allwaves$MDX, useNA = "ifany") #non-injection methadone (# times)
table(df_allwaves$MDINJ, useNA = "ifany") #any injection methadone
table(df_allwaves$MDIX, useNA = "ifany") #injection methadone (# times)
#creating frequency variable (2= greater than or equal to 30 times, 1 = greater than 0 but less than 30, 0 = none)
df_allwaves$MDX <- as.integer(df_allwaves$MDX) #change to numeric instead of factor
df_allwaves$MDIX <- as.integer(df_allwaves$MDIX) #change to numeric instead of factor
df_allwaves$MD.freq <-   ifelse(df_allwaves$MDX>=30 | df_allwaves$MDIX>=30, 2, ifelse((df_allwaves$MDX>0 & df_allwaves$MDX<30) & (df_allwaves$MDIX>0 & df_allwaves$MDIX<30), 1,
ifelse(df_allwaves$MDX==0 & df_allwaves$MDIX==0, 0, NA)))
df_allwaves$MD.freq[is.na(df_allwaves$MD.freq)] <- 0
table(df_allwaves$MD.freq, useNA = "ifany")
###BUPRENORPHINE###
table(df_allwaves$BUP30, useNA = "ifany") #used bup yes/no
table(df_allwaves$BUPNINJ, useNA = "ifany") #any non-injection bup
table(df_allwaves$BUPX, useNA = "ifany") #non-injection bup (# times)
table(df_allwaves$BUPINJ, useNA = "ifany") #any injection bup
table(df_allwaves$BUPIX, useNA = "ifany") #injection bup (# times)
#creating frequency variable (2= greater than or equal to 30 times, 1 = greater than 0 but less than 30, 0 = none)
df_allwaves$BUPX <- as.integer(df_allwaves$BUPX) #change to numeric instead of factor
df_allwaves$BUPIX <- as.integer(df_allwaves$BUPIX) #change to numeric instead of factor
df_allwaves$BUP.freq <-   ifelse(df_allwaves$BUPX>=30 | df_allwaves$BUPIX>=30, 2, ifelse((df_allwaves$BUPX>0 & df_allwaves$BUPX<30) & (df_allwaves$BUPIX>0 & df_allwaves$BUPIX<30), 1,
ifelse(df_allwaves$BUPX==0 & df_allwaves$BUPIX==0, 0, NA)))
df_allwaves$BUP.freq[is.na(df_allwaves$BUP.freq)] <- 0
table(df_allwaves$BUP.freq, useNA = "ifany")
#FREQUENCY OF STIMULANT USE
#includes crack cocaine, powder cocaine, meth, nonmedical rx stimulants, speedball, and goofball
df_allwaves$STIM.freq <- ifelse(df_allwaves$SB.freq==2 | df_allwaves$GB.freq==2 | df_allwaves$CRCK.freq==2 | df_allwaves$PCOKE.freq==2 | df_allwaves$METH.freq==2 | df_allwaves$ST.freq==2, 2, ifelse(df_allwaves$SB.freq==0 & df_allwaves$GB.freq==0 & df_allwaves$CRCK.freq==0 & df_allwaves$PCOKE.freq==0 & df_allwaves$METH.freq==0 & df_allwaves$ST.freq==0, 0, 1))
df_allwaves$STIM.freq <- as.factor(df_allwaves$STIM.freq)
table(df_allwaves$STIM.freq, useNA = "ifany")
#FREQUENCY OF OPIOID USE
#includes speedball, goofball, heroin, nonmedical rx opioids, methadone, bup
df_allwaves$OPIOID.freq <- ifelse(df_allwaves$SB.freq==2 | df_allwaves$GB.freq==2 | df_allwaves$HER.freq==2 | df_allwaves$OP.freq==2 | df_allwaves$MD.freq==2 | df_allwaves$BUP.freq==2, 2, ifelse(df_allwaves$SB.freq==0 & df_allwaves$GB.freq==0 & df_allwaves$HER.freq==0 & df_allwaves$OP.freq==0 & df_allwaves$MD.freq==0 & df_allwaves$BUP.freq==0, 0, 1))
df_allwaves$OPIOID.freq <- as.factor(df_allwaves$OPIOID.freq)
table(df_allwaves$OPIOID.freq, useNA = "ifany")
####ANY STIMULANT USE IN PAST 30 DAYS (injection and/or non-injection composite)###
#includes crack cocaine, powder cocaine, meth, nonmedical rx stimulants, speedball, and goofball
df_allwaves$ANYSTIMUSE <- ifelse(df_allwaves$CRKNINJ=="Yes" | df_allwaves$CCNINJ=="Yes" | df_allwaves$MTNINJ=="Yes" | df_allwaves$STNINJ=="Yes" |df_allwaves$SBNINJ =="Yes" |df_allwaves$GBNINJ=="Yes" | df_allwaves$CRKINJ=="Yes" | df_allwaves$CCINJ=="Yes" | df_allwaves$MTINJ=="Yes" | df_allwaves$STINJ=="Yes" |df_allwaves$SBINJ=="Yes"| df_allwaves$GBINJ=="Yes", 1, ifelse(df_allwaves$CRKNINJ=="No" &df_allwaves$CCNINJ=="No" & df_allwaves$MTNINJ=="No" & df_allwaves$STNINJ=="No" & df_allwaves$SBNINJ=="No" & df_allwaves$GBNINJ=="No" & df_allwaves$CRKINJ=="No" &  df_allwaves$CCINJ=="No" & df_allwaves$MTINJ=="No" & df_allwaves$STINJ=="No" & df_allwaves$SBINJ=="No" & df_allwaves$GBINJ=="No", 0, NA))
df_allwaves$ANYSTIMUSE <- as.factor(df_allwaves$ANYSTIMUSE)
table(df_allwaves$ANYSTIMUSE, useNA = "ifany")
###ANY OPIOID USE IN PAST 30 DAYS (injection and/or non-injection composite)###
#includes speedball, goofball, heroin, nonmedical rx opioids, methadone, bup
df_allwaves$ANYOPIOIDUSE <- ifelse(df_allwaves$SBINJ=="Yes" | df_allwaves$GBINJ=="Yes" | df_allwaves$MDINJ=="Yes" | df_allwaves$BUPINJ=="Yes" | df_allwaves$HRINJ=="Yes" | df_allwaves$OPINJ=="Yes" |df_allwaves$SBNINJ=="Yes" | df_allwaves$GBNINJ=="Yes" |  df_allwaves$MDNINJ=="Yes" |  df_allwaves$BUPNINJ=="Yes" |  df_allwaves$HRNINJ=="Yes" | df_allwaves$OPNINJ=="Yes", 1, ifelse(df_allwaves$SBINJ=="No" & df_allwaves$GBINJ=="No"  & df_allwaves$MDINJ=="No"  & df_allwaves$BUPINJ=="No" & df_allwaves$HRINJ=="No" & df_allwaves$OPINJ=="No"  & df_allwaves$SBNINJ=="No" & df_allwaves$GBNINJ=="No"  & df_allwaves$MDNINJ=="No"  & df_allwaves$BUPNINJ=="No" & df_allwaves$HRNINJ=="No" & df_allwaves$OPNINJ=="No", 0, NA))
df_allwaves$ANYOPIOIDUSE <- as.factor(df_allwaves$ANYOPIOIDUSE)
table(df_allwaves$ANYOPIOIDUSE, useNA = "ifany")
#Any OAT in the past six months (IF METHADONE DETOX = YES OR METHADONE MAINTENANCE = YES OR BUP = YES)
df_allwaves$OAT6month <- ifelse(df_allwaves$DETOX=="Yes" | df_allwaves$MAINTN=="Yes" | df_allwaves$BUPETX=="Yes", 1, 0)
table(df_allwaves$OAT6month, useNA = "ifany")
#overdose witnessed (witnessed an overdose in the last 6 months)
table(df_allwaves$WOD6M, useNA = "ifany")
#personal overdose history (Overdosed in the last 6 months)
table(df_allwaves$ODP6M, useNA = "ifany")
# Identify the variables of interest
myVars <- c("LOCALID", "GENDER","agecat","RACE_cat", "ED","HOMELESS", "STIM.freq", "OPIOID.freq", "WOD6M", "ODP6M")
# Specify which of the variables are categorical
catVars <- c("LOCALID", "GENDER", "agecat", "RACE_cat", "ED","HOMELESS", "STIM.freq", "OPIOID.freq", "WOD6M", "ODP6M")
# Create an overall table 1
#REMINDER THAT TABLE1 PACKAGE DOES WEIRD STUFF WITH MISSING, SO CHECK N (PERCENTAGE) WITH CROSSTABS
table1.overall <- CreateTableOne(vars= myVars,
data= df_allwaves,
factorVars = catVars)
#this is if we want table 1 not stratified by any outcome (eg FU2)
#print(table1.overall, showAllLevels = TRUE, missing = FALSE)
table1.byFU2 <- CreateTableOne(vars=myVars,
data=df_allwaves,
factorVars = catVars,
strata="FU2")
print(table1.byFU2, showAllLevels = TRUE, test=TRUE, missing = FALSE)
#check column percentages of bivariates. this is because prop.table will show missing percentages whereas tableone package doesn't include the missing data when calculating column percents.
#table(df_allwaves$X, df_allwaves$FU2, useNA = "ifany")
#round(prop.table(table(df_allwaves$X, df_allwaves$FU2, useNA = "ifany"),2),3)
# Identify the variables of interest
myVars <- c("LOCALID", "GENDER","agecat","RACE_cat", "ED","HOMELESS", "STIM.freq", "OPIOID.freq", "OAT6month", "WOD6M", "ODP6M")
# Specify which of the variables are categorical
catVars <- c("LOCALID", "GENDER", "agecat", "RACE_cat", "ED","HOMELESS", "STIM.freq", "OPIOID.freq","OAT6month", "WOD6M", "ODP6M")
# Create an overall table 1
#REMINDER THAT TABLE1 PACKAGE DOES WEIRD STUFF WITH MISSING, SO CHECK N (PERCENTAGE) WITH CROSSTABS
table1.overall <- CreateTableOne(vars= myVars,
data= df_allwaves,
factorVars = catVars)
#this is if we want table 1 not stratified by any outcome (eg FU2)
#print(table1.overall, showAllLevels = TRUE, missing = FALSE)
table1.byFU2 <- CreateTableOne(vars=myVars,
data=df_allwaves,
factorVars = catVars,
strata="FU2")
print(table1.byFU2, showAllLevels = TRUE, test=TRUE, missing = FALSE)
#check column percentages of bivariates. this is because prop.table will show missing percentages whereas tableone package doesn't include the missing data when calculating column percents.
#table(df_allwaves$X, df_allwaves$FU2, useNA = "ifany")
#round(prop.table(table(df_allwaves$X, df_allwaves$FU2, useNA = "ifany"),2),3)
