df_White <- subset(df, RACE_cat == "White")
#NALEVER: Ever received naloxone
#Have you ever received naloxone (including narcan, intranasal narcan, and/or autoinjector
#of naloxone to use on yourself or other people?
table(df_White$NALEVER, useNA = "ifany")
#NAL6MOS: Received naloxone in the last 6 months
#Have you received naloxone in the last 6 months?
#table(df_White$NAL6MOS, useNA = "ifany")
#NAL6MOS.new: Received naloxone in the last 6 months (combined NALEVER and NAL6MOS to make NAL6MOS.new)
#Have you received naloxone in the last 6 months?
df_White$NAL6MOS.new <- ifelse(df_White$NALEVER=="Yes" & df_White$NAL6MOS=="Yes", 1, ifelse(df_White$NALEVER=="Yes" & df_White$NAL6MOS=="No", 0, ifelse(df_White$NALEVER=="No", 0, NA)))
table(df_White$NAL6MOS.new, useNA = "ifany")
#NALOWN: Own a dose of naloxone
#Do you currently have at least one dose of naloxone? (By this, we mean you possess
#or own your own naloxone dose)
table(df_White$NALOWN, useNA = "ifany")
#NALUSEandorLOSE: Have you used and/or used your naloxone in the last 6 months?
df_White$NALUSEandorLOSE <- ifelse((df_White$NALUSED=="Yes" | df_White$NALOSE=="Yes"), 1, 0)
table(df_White$NALUSEandorLOSE, useNA = "ifany")
#NALFILL: Got a refill of naloxone in the last 6 months
#After using or losing your naloxone, did you get a replacement or refill?
table(df_White$NALFILL, useNA = "ifany")
```
Bar charts for Latinx (N = 116).
```{r}
df_Latinx <- subset(df, RACE_cat == "Latinx")
#NALEVER: Ever received naloxone
#Have you ever received naloxone (including narcan, intranasal narcan, and/or autoinjector
#of naloxone to use on yourself or other people?
table(df_Latinx$NALEVER, useNA = "ifany")
#NAL6MOS: Received naloxone in the last 6 months
#Have you received naloxone in the last 6 months?
#table(df_Latinx$NAL6MOS, useNA = "ifany")
#NAL6MOS.new: Received naloxone in the last 6 months (combined NALEVER and NAL6MOS to make NAL6MOS.new)
#Have you received naloxone in the last 6 months?
df_Latinx$NAL6MOS.new <- ifelse(df_Latinx$NALEVER=="Yes" & df_Latinx$NAL6MOS=="Yes", 1, ifelse(df_Latinx$NALEVER=="Yes" & df_Latinx$NAL6MOS=="No", 0, ifelse(df_Latinx$NALEVER=="No", 0, NA)))
table(df_Latinx$NAL6MOS.new, useNA = "ifany")
#NALOWN: Own a dose of naloxone
#Do you currently have at least one dose of naloxone? (By this, we mean you possess
#or own your own naloxone dose)
table(df_Latinx$NALOWN, useNA = "ifany")
#NALUSEandorLOSE: Have you used and/or used your naloxone in the last 6 months?
df_Latinx$NALUSEandorLOSE <- ifelse((df_Latinx$NALUSED=="Yes" | df_Latinx$NALOSE=="Yes"), 1, 0)
table(df_Latinx$NALUSEandorLOSE, useNA = "ifany")
#NALFILL: Got a refill of naloxone in the last 6 months
#After using or losing your naloxone, did you get a replacement or refill?
table(df_Latinx$NALFILL, useNA = "ifany")
```
Bar charts for Black (N = 127).
```{r}
df_Black <- subset(df, RACE_cat == "Black")
#NALEVER: Ever received naloxone
#Have you ever received naloxone (including narcan, intranasal narcan, and/or autoinjector
#of naloxone to use on yourself or other people?
table(df_Black$NALEVER, useNA = "ifany")
#NAL6MOS: Received naloxone in the last 6 months
#Have you received naloxone in the last 6 months?
#table(df_Black$NAL6MOS, useNA = "ifany")
#NAL6MOS.new: Received naloxone in the last 6 months (combined NALEVER and NAL6MOS to make NAL6MOS.new)
#Have you received naloxone in the last 6 months?
df_Black$NAL6MOS.new <- ifelse(df_Black$NALEVER=="Yes" & df_Black$NAL6MOS=="Yes", 1, ifelse(df_Black$NALEVER=="Yes" & df_Black$NAL6MOS=="No", 0, ifelse(df_Black$NALEVER=="No", 0, NA)))
table(df_Black$NAL6MOS.new, useNA = "ifany")
#NALOWN: Own a dose of naloxone
#Do you currently have at least one dose of naloxone? (By this, we mean you possess
#or own your own naloxone dose)
table(df_Black$NALOWN, useNA = "ifany")
#NALUSEandorLOSE: Have you used and/or used your naloxone in the last 6 months?
df_Black$NALUSEandorLOSE <- ifelse((df_Black$NALUSED=="Yes" | df_Black$NALOSE=="Yes"), 1, 0)
table(df_Black$NALUSEandorLOSE, useNA = "ifany")
#NALFILL: Got a refill of naloxone in the last 6 months
#After using or losing your naloxone, did you get a replacement or refill?
table(df_Black$NALFILL, useNA = "ifany")
```
Bar charts for mixed/other (N = 73).
```{r}
df_MixedOther <- subset(df, RACE_cat == "Other")
#NALEVER: Ever received naloxone
#Have you ever received naloxone (including narcan, intranasal narcan, and/or autoinjector
#of naloxone to use on yourself or other people?
table(df_MixedOther$NALEVER, useNA = "ifany")
#NAL6MOS: Received naloxone in the last 6 months
#Have you received naloxone in the last 6 months?
#table(df_MixedOther$NAL6MOS, useNA = "ifany")
#NAL6MOS.new: Received naloxone in the last 6 months (combined NALEVER and NAL6MOS to make NAL6MOS.new)
#Have you received naloxone in the last 6 months?
df_MixedOther$NAL6MOS.new <- ifelse(df_MixedOther$NALEVER=="Yes" & df_MixedOther$NAL6MOS=="Yes", 1, ifelse(df_MixedOther$NALEVER=="Yes" & df_MixedOther$NAL6MOS=="No", 0, ifelse(df_MixedOther$NALEVER=="No", 0, NA)))
table(df_MixedOther$NAL6MOS.new, useNA = "ifany")
#NALOWN: Own a dose of naloxone
#Do you currently have at least one dose of naloxone? (By this, we mean you possess
#or own your own naloxone dose)
table(df_MixedOther$NALOWN, useNA = "ifany")
#NALUSEandorLOSE: Have you used and/or used your naloxone in the last 6 months?
df_MixedOther$NALUSEandorLOSE <- ifelse((df_MixedOther$NALUSED=="Yes" | df_MixedOther$NALOSE=="Yes"), 1, 0)
table(df_MixedOther$NALUSEandorLOSE, useNA = "ifany")
#NALFILL: Got a refill of naloxone in the last 6 months
#After using or losing your naloxone, did you get a replacement or refill?
table(df_MixedOther$NALFILL, useNA = "ifany")
```
REVISE AND RESUBMIT: Were there statistically significant differences in proportions at each step in the engagement cascades stratified by city and race/ethnicity?
```{r}
#differences by city
chisq.test(table(df$LOCALID, df$NALEVER))
chisq.test(table(df$LOCALID, df$NAL6MOS.new))
chisq.test(table(df$LOCALID, df$NALOWN))
chisq.test(table(df$LOCALID, df$NALUSEandorLOSE))
chisq.test(table(df$LOCALID, df$NALFILL))
#differences by race/ethnicity
chisq.test(table(df$RACE_cat, df$NALEVER))
chisq.test(table(df$RACE_cat, df$NAL6MOS.new))
chisq.test(table(df$RACE_cat, df$NALOWN))
chisq.test(table(df$RACE_cat, df$NALUSEandorLOSE))
chisq.test(table(df$RACE_cat, df$NALFILL))
#row percents
#round(prop.table(table(df$X, df$Y, useNA = "ifany"),1),3)
#column percents
#round(prop.table(table(df$X, df$Y, useNA = "ifany"),2),3)
```
# Identify the variables of interest
myVars <- c("LOCALID", "GENDER","agecat","RACE_cat", "ED","HOMELESS", "JAIL", "STIM.freq", "OPIOID.freq", "OAT6month", "WOD6M", "ODP6M")
# Specify which of the variables are categorical
catVars <- c("LOCALID", "GENDER", "agecat", "RACE_cat", "ED","HOMELESS", "JAIL", "STIM.freq", "OPIOID.freq", "OAT6month", "WOD6M", "ODP6M")
# Create an overall table 1
#REMINDER THAT TABLE1 PACKAGE DOES WEIRD STUFF WITH MISSING, SO CHECK N (PERCENTAGE) WITH CROSSTABS
table1.overall <- CreateTableOne(vars= myVars,
data= df,
factorVars = catVars)
print(table1.overall, showAllLevels = TRUE, missing = FALSE)
# Create a table 1 stratified by receiving naloxone in the last 6 mos (1 = ever received in last 6 mos, 0 = never received in last 6 mos)
##REMINDER THAT TABLE1 PACKAGE DOES WEIRD STUFF WITH MISSING, SO CHECK N (PERCENTAGE) WITH CROSSTABS
#check column percentages of bivariates. this is because prop.table will show missing percentages whereas tableone package doesn't include the missing data when calculating column percents.
#table(df$X, df$NAL6MOS.new, useNA = "ifany")
#round(prop.table(table(df$X, df$NAL6MOS.new, useNA = "ifany"),2),3)
table1byNAL6MOS.new <- CreateTableOne(vars=myVars,
data=df,
factorVars = catVars,
strata="NAL6MOS.new")
print(table1byNAL6MOS.new, showAllLevels = TRUE, test=TRUE, missing = FALSE)
201+64
87+183
#use geepack because modified poisson is picky
require(geepack)
#subset the data with complete observations because geepack is picky (N=FILL THIS IN)
df.modpoiss <- subset(df, select=c(SUBJECT, NAL6MOS.new, LOCALID, GENDER, agecat, RACE_cat, ED, HOMELESS, JAIL, STIM.freq, OPIOID.freq, OAT6month, WOD6M, ODP6M))
df.modpoiss <- na.omit(df.modpoiss)
#CITY
localIDbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(LOCALID), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(localIDbynal6mos.modpoiss)
exp(coef(localIDbynal6mos.modpoiss))
#95% CI for city
localIDbynal6mos.modpoiss.RR.coefci.adj <- cbind(localIDbynal6mos.modpoiss$coefficients, confint.default(localIDbynal6mos.modpoiss))
localIDbynal6mos.modpoiss.RR.expci.adj <- exp(localIDbynal6mos.modpoiss.RR.coefci.adj)
localIDbynal6mos.modpoiss.RR.expci.adj
#rounded to two decimal places
round(localIDbynal6mos.modpoiss.RR.expci.adj, 2)
#GENDER
genderbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(GENDER), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(genderbynal6mos.modpoiss)
exp(coef(genderbynal6mos.modpoiss))
#95% CI for gender
genderbynal6mos.modpoiss.RR.coefci.adj <- cbind(genderbynal6mos.modpoiss$coefficients, confint.default(genderbynal6mos.modpoiss))
genderbynal6mos.modpoiss.RR.expci.adj <- exp(genderbynal6mos.modpoiss.RR.coefci.adj)
genderbynal6mos.modpoiss.RR.expci.adj
#rounded to two decimal places
round(genderbynal6mos.modpoiss.RR.expci.adj, 2)
#agecat
agecatbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(agecat), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(agecatbynal6mos.modpoiss)
exp(coef(agecatbynal6mos.modpoiss))
#95% CI for agecat
agecatbynal6mos.modpoiss.RR.coefci.adj <- cbind(agecatbynal6mos.modpoiss$coefficients, confint.default(agecatbynal6mos.modpoiss))
agecatbynal6mos.modpoiss.RR.expci.adj <- exp(agecatbynal6mos.modpoiss.RR.coefci.adj)
agecatbynal6mos.modpoiss.RR.expci.adj
#rounded to two decimal places
round(agecatbynal6mos.modpoiss.RR.expci.adj, 2)
#race_cat
racecatbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(RACE_cat), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(racecatbynal6mos.modpoiss)
exp(coef(racecatbynal6mos.modpoiss))
#95% CI for racecat
racecatbynal6mos.modpoiss.RR.coefci.adj <- cbind(racecatbynal6mos.modpoiss$coefficients, confint.default(racecatbynal6mos.modpoiss))
racecatbynal6mos.modpoiss.RR.expci.adj <- exp(racecatbynal6mos.modpoiss.RR.coefci.adj)
racecatbynal6mos.modpoiss.RR.expci.adj
#rounded to two decimal places
round(racecatbynal6mos.modpoiss.RR.expci.adj, 2)
#ED
edbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(ED), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(edbynal6mos.modpoiss)
exp(coef(edbynal6mos.modpoiss))
#95% CI for ed
edbynal6mos.modpoiss.RR.coefci.adj <- cbind(edbynal6mos.modpoiss$coefficients, confint.default(edbynal6mos.modpoiss))
edbynal6mos.modpoiss.RR.expci.adj <- exp(edbynal6mos.modpoiss.RR.coefci.adj)
edbynal6mos.modpoiss.RR.expci.adj
#rounded to two decimal places
round(edbynal6mos.modpoiss.RR.expci.adj, 2)
#HOMELESS
homelessbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(HOMELESS), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(homelessbynal6mos.modpoiss)
exp(coef(homelessbynal6mos.modpoiss))
#95% CI for homeless
homelessbynal6mos.modpoiss.RR.coefci.adj <- cbind(homelessbynal6mos.modpoiss$coefficients, confint.default(homelessbynal6mos.modpoiss))
homelessbynal6mos.modpoiss.RR.expci.adj <- exp(homelessbynal6mos.modpoiss.RR.coefci.adj)
homelessbynal6mos.modpoiss.RR.expci.adj
#rounded to two decimal places
round(homelessbynal6mos.modpoiss.RR.expci.adj, 2)
#JAIL
jailbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(JAIL), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(jailbynal6mos.modpoiss)
exp(coef(jailbynal6mos.modpoiss))
#95% CI for jail
jailbynal6mos.modpoiss.RR.coefci.adj <- cbind(jailbynal6mos.modpoiss$coefficients, confint.default(jailbynal6mos.modpoiss))
jailbynal6mos.modpoiss.RR.expci.adj <- exp(jailbynal6mos.modpoiss.RR.coefci.adj)
jailbynal6mos.modpoiss.RR.expci.adj
#rounded to two decimal places
round(jailbynal6mos.modpoiss.RR.expci.adj, 2)
#STIMULANT FREQUENCY
STIM.freqbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(STIM.freq), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(STIM.freqbynal6mos.modpoiss)
exp(coef(STIM.freqbynal6mos.modpoiss))
#95% CI for STIM.freq
STIM.freqbynal6mos.modpoiss.RR.coefci.adj <- cbind(STIM.freqbynal6mos.modpoiss$coefficients, confint.default(STIM.freqbynal6mos.modpoiss))
STIM.freqbynal6mos.modpoiss.RR.expci.adj <- exp(STIM.freqbynal6mos.modpoiss.RR.coefci.adj)
STIM.freqbynal6mos.modpoiss.RR.expci.adj
#rounded to two decimal places
round(STIM.freqbynal6mos.modpoiss.RR.expci.adj, 2)
#OPIOID FREQUENCY
OPIOID.freqbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(OPIOID.freq), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(OPIOID.freqbynal6mos.modpoiss)
exp(coef(OPIOID.freqbynal6mos.modpoiss))
#95% CI for OPIOID.freq
OPIOID.freqbynal6mos.modpoiss.RR.coefci.adj <- cbind(OPIOID.freqbynal6mos.modpoiss$coefficients, confint.default(OPIOID.freqbynal6mos.modpoiss))
OPIOID.freqbynal6mos.modpoiss.RR.expci.adj <- exp(OPIOID.freqbynal6mos.modpoiss.RR.coefci.adj)
OPIOID.freqbynal6mos.modpoiss.RR.expci.adj
#rounded to two decimal places
round(OPIOID.freqbynal6mos.modpoiss.RR.expci.adj, 2)
#OAT6month
OAT6monthbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(OAT6month), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(OAT6monthbynal6mos.modpoiss)
exp(coef(OAT6monthbynal6mos.modpoiss))
#95% CI for OAT6month
OAT6monthbynal6mos.modpoiss.RR.coefci.adj <- cbind(OAT6monthbynal6mos.modpoiss$coefficients, confint.default(OAT6monthbynal6mos.modpoiss))
OAT6monthbynal6mos.modpoiss.RR.expci.adj <- exp(OAT6monthbynal6mos.modpoiss.RR.coefci.adj)
OAT6monthbynal6mos.modpoiss.RR.expci.adj
#rounded to two decimal places
round(OAT6monthbynal6mos.modpoiss.RR.expci.adj, 2)
#WOD6M
WOD6Mbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(WOD6M), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(WOD6Mbynal6mos.modpoiss)
exp(coef(WOD6Mbynal6mos.modpoiss))
#95% CI for WOD6M
WOD6Mbynal6mos.modpoiss.RR.coefci.adj <- cbind(WOD6Mbynal6mos.modpoiss$coefficients, confint.default(WOD6Mbynal6mos.modpoiss))
WOD6Mbynal6mos.modpoiss.RR.expci.adj <- exp(WOD6Mbynal6mos.modpoiss.RR.coefci.adj)
WOD6Mbynal6mos.modpoiss.RR.expci.adj
#rounded to two decimal places
round(WOD6Mbynal6mos.modpoiss.RR.expci.adj, 2)
#ODP6M
ODP6Mbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(ODP6M), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(ODP6Mbynal6mos.modpoiss)
exp(coef(ODP6Mbynal6mos.modpoiss))
#95% CI for ODP6M
ODP6Mbynal6mos.modpoiss.RR.coefci.adj <- cbind(ODP6Mbynal6mos.modpoiss$coefficients, confint.default(ODP6Mbynal6mos.modpoiss))
ODP6Mbynal6mos.modpoiss.RR.expci.adj <- exp(ODP6Mbynal6mos.modpoiss.RR.coefci.adj)
ODP6Mbynal6mos.modpoiss.RR.expci.adj
#rounded to two decimal places
round(ODP6Mbynal6mos.modpoiss.RR.expci.adj, 2)
####DIFFERENT APPROACHES FOR MULTIVARIABLE MODELS
####FULL MULTIVARIABLE MODIFIED POISSON MODEL WITH ROBUST SE'S WITH EVERY COVARIATE INCLUDED####
fitnal6mos.modpoiss  <- geeglm(formula=NAL6MOS.new ~ factor(LOCALID) + factor(GENDER) + factor(agecat) + factor(RACE_cat) + factor(ED) + factor(HOMELESS) + factor(JAIL) + factor(STIM.freq) + factor(OPIOID.freq) + factor(OAT6month) + factor(WOD6M) + factor(ODP6M), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(fitnal6mos.modpoiss)
#extract the coefficients and confidence intervals, exponentiate to get RR and 95% CI (using confint.default)
fitnal6mos.RR.coefci.adj <- cbind(fitnal6mos.modpoiss$coefficients, confint.default(fitnal6mos.modpoiss))
fitnal6mos.RR.expci.adj <- exp(fitnal6mos.RR.coefci.adj)
fitnal6mos.RR.expci.adj
round(fitnal6mos.RR.expci.adj, 2)
###ADJUSTED MULTIVARIATE MODIFIED POISSON INCLUDING ONLY THOSE SIGNIFICANT AT LESS THAN 0.05 or 0.2 (SO ONLY TAKE OUT GENDER)
#fitnal6mos.modpoiss.approach1  <- geeglm(formula=NAL6MOS.new ~ factor(LOCALID) + factor(agecat) + factor(RACE_cat) + factor(ED) + factor(HOMELESS) + factor(JAIL) + factor(STIM.freq) + factor(OPIOID.freq) + factor(WOD6M) + factor(ODP6M), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
#summary(fitnal6mos.modpoiss.approach1)
#extract the coefficients and confidence intervals, exponentiate to get RR and 95% CI (using confint.default)
#fitnal6mos.modpoiss.approach1.RR.coefci.adj <- cbind(fitnal6mos.modpoiss.approach1$coefficients, confint.default(fitnal6mos.modpoiss.approach1))
#fitnal6mos.modpoiss.approach1.RR.expci.adj <- exp(fitnal6mos.modpoiss.approach1.RR.coefci.adj)
#fitnal6mos.modpoiss.approach1.RR.expci.adj
#round(fitnal6mos.modpoiss.approach1.RR.expci.adj, 2)
#subset the data to those who have received naloxone in the last 6 mos
df_nal6mos <- subset(df, NAL6MOS.new == 1) #N = 265 who have received naloxone in the last 6 mos
#checking frequencies are correct
table(df_nal6mos$NALOWN, useNA = "ifany")
#Create a table 1 not stratified by any outcome variable, just for this subset of N = 265 PWID who received naloxone in the last 6mos
table1.subset.receivednal6mos <- CreateTableOne(vars= myVars,
data= df_nal6mos,
factorVars = catVars)
print(table1.subset.receivednal6mos, showAllLevels = TRUE, missing = FALSE)
# Create a table 1 stratified by currently owning naloxone
table1byNALOWN <- CreateTableOne(vars=myVars,
data=df_nal6mos,
factorVars = catVars,
strata="NALOWN")
print(table1byNALOWN, showAllLevels = TRUE, missing = FALSE)
#FOR UNIVARIATES: check column percentages of univariates. this is because prop.table will show missing percentages whereas tableone package doesn't include the missing data when calculating column percents.
#table(df_nal6mos$X, useNA = "ifany")
#round(prop.table(table(df_nal6mos$X, useNA = "ifany")),3)
#FOR BIVARIATES: check column percentages of bivariates. this is because prop.table will show missing percentages whereas tableone package doesn't include the missing data when calculating column percents.
#table(df_nal6mos$X, df_nal6mos$NALOWN, useNA = "ifany")
#round(prop.table(table(df_nal6mos$X, df_nal6mos$NALOWN, useNA = "ifany"),2),3)
18+58
23.7+76.3
46+142
round(prop.table(table(df_nal6mos$OAT6month, df_nal6mos$NALOWN, useNA = "ifany"),2),3)
round(prop.table(table(df_nal6mos$OAT6month, df_nal6mos$NAL6MOS.new, useNA = "ifany"),2),3)
round(prop.table(table(df$OAT6month, df$NAL6MOS.new, useNA = "ifany"),2),3)
#require geepack because modified poisson is picky
require(geepack)
#subset the data with complete observations because geepack is picky (N= 259)
df.modpoiss.nalown <- subset(df_nal6mos, select=c(SUBJECT, NALOWN, LOCALID, GENDER, agecat, RACE_cat, ED, HOMELESS, JAIL, STIM.freq, OPIOID.freq, OAT6month, WOD6M, ODP6M))
df.modpoiss.nalown <- na.omit(df.modpoiss.nalown)
#recode NALOWN as binary numeric since factor isn't working
df.modpoiss.nalown$NALOWN.binary<-ifelse(df.modpoiss.nalown$NALOWN=='Yes', 1,0)
#LOCALID
localIDbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(LOCALID), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(localIDbynalown.modpoiss)
exp(coef(localIDbynalown.modpoiss))
#95% CI for localID
localIDbynalown.modpoiss.RR.coefci.adj <- cbind(localIDbynalown.modpoiss$coefficients, confint.default(localIDbynalown.modpoiss))
localIDbynalown.modpoiss.RR.expci.adj <- exp(localIDbynalown.modpoiss.RR.coefci.adj)
localIDbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(localIDbynalown.modpoiss.RR.expci.adj, 2)
#GENDER
genderbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(GENDER), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(genderbynalown.modpoiss)
exp(coef(genderbynalown.modpoiss))
#95% CI for gender
genderbynalown.modpoiss.RR.coefci.adj <- cbind(genderbynalown.modpoiss$coefficients, confint.default(genderbynalown.modpoiss))
genderbynalown.modpoiss.RR.expci.adj <- exp(genderbynalown.modpoiss.RR.coefci.adj)
genderbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(genderbynalown.modpoiss.RR.expci.adj, 2)
#agecat
agecatbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(agecat), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(agecatbynalown.modpoiss)
exp(coef(agecatbynalown.modpoiss))
#95% CI for agecat
agecatbynalown.modpoiss.RR.coefci.adj <- cbind(agecatbynalown.modpoiss$coefficients, confint.default(agecatbynalown.modpoiss))
agecatbynalown.modpoiss.RR.expci.adj <- exp(agecatbynalown.modpoiss.RR.coefci.adj)
agecatbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(agecatbynalown.modpoiss.RR.expci.adj, 2)
#racecat
racecatbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(RACE_cat), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(racecatbynalown.modpoiss)
exp(coef(racecatbynalown.modpoiss))
#95% CI for racecat
racecatbynalown.modpoiss.RR.coefci.adj <- cbind(racecatbynalown.modpoiss$coefficients, confint.default(racecatbynalown.modpoiss))
racecatbynalown.modpoiss.RR.expci.adj <- exp(racecatbynalown.modpoiss.RR.coefci.adj)
racecatbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(racecatbynalown.modpoiss.RR.expci.adj, 2)
#ED
edbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(ED), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(edbynalown.modpoiss)
exp(coef(edbynalown.modpoiss))
#95% CI for ed
edbynalown.modpoiss.RR.coefci.adj <- cbind(edbynalown.modpoiss$coefficients, confint.default(edbynalown.modpoiss))
edbynalown.modpoiss.RR.expci.adj <- exp(edbynalown.modpoiss.RR.coefci.adj)
edbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(edbynalown.modpoiss.RR.expci.adj, 2)
#HOMELESS
homelessbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(HOMELESS), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(homelessbynalown.modpoiss)
exp(coef(homelessbynalown.modpoiss))
#95% CI for homeless
homelessbynalown.modpoiss.RR.coefci.adj <- cbind(homelessbynalown.modpoiss$coefficients, confint.default(homelessbynalown.modpoiss))
homelessbynalown.modpoiss.RR.expci.adj <- exp(homelessbynalown.modpoiss.RR.coefci.adj)
homelessbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(homelessbynalown.modpoiss.RR.expci.adj, 2)
#JAIL
jailbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(JAIL), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(jailbynalown.modpoiss)
exp(coef(jailbynalown.modpoiss))
#95% CI for jail
jailbynalown.modpoiss.RR.coefci.adj <- cbind(jailbynalown.modpoiss$coefficients, confint.default(jailbynalown.modpoiss))
jailbynalown.modpoiss.RR.expci.adj <- exp(jailbynalown.modpoiss.RR.coefci.adj)
jailbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(jailbynalown.modpoiss.RR.expci.adj, 2)
#STIM.freq
STIM.freqbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(STIM.freq), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(STIM.freqbynalown.modpoiss)
exp(coef(STIM.freqbynalown.modpoiss))
#95% CI for STIM.freq
STIM.freqbynalown.modpoiss.RR.coefci.adj <- cbind(STIM.freqbynalown.modpoiss$coefficients, confint.default(STIM.freqbynalown.modpoiss))
STIM.freqbynalown.modpoiss.RR.expci.adj <- exp(STIM.freqbynalown.modpoiss.RR.coefci.adj)
STIM.freqbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(STIM.freqbynalown.modpoiss.RR.expci.adj, 2)
#OPIOID.freq
OPIOID.freqbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(OPIOID.freq), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(OPIOID.freqbynalown.modpoiss)
exp(coef(OPIOID.freqbynalown.modpoiss))
#95% CI for OPIOID.freq
OPIOID.freqbynalown.modpoiss.RR.coefci.adj <- cbind(OPIOID.freqbynalown.modpoiss$coefficients, confint.default(OPIOID.freqbynalown.modpoiss))
OPIOID.freqbynalown.modpoiss.RR.expci.adj <- exp(OPIOID.freqbynalown.modpoiss.RR.coefci.adj)
OPIOID.freqbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(OPIOID.freqbynalown.modpoiss.RR.expci.adj, 2)
#OAT6month
OAT6monthbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(OAT6month), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(OAT6monthbynalown.modpoiss)
exp(coef(OAT6monthbynalown.modpoiss))
#95% CI for OAT6month
OAT6monthbynalown.modpoiss.RR.coefci.adj <- cbind(OAT6monthbynalown.modpoiss$coefficients, confint.default(OAT6monthbynalown.modpoiss))
OAT6monthbynalown.modpoiss.RR.expci.adj <- exp(OAT6monthbynalown.modpoiss.RR.coefci.adj)
OAT6monthbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(OAT6monthbynalown.modpoiss.RR.expci.adj, 2)
#WOD6M
WOD6Mbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(WOD6M), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(WOD6Mbynalown.modpoiss)
exp(coef(WOD6Mbynalown.modpoiss))
#95% CI for WOD6M
WOD6Mbynalown.modpoiss.RR.coefci.adj <- cbind(WOD6Mbynalown.modpoiss$coefficients, confint.default(WOD6Mbynalown.modpoiss))
WOD6Mbynalown.modpoiss.RR.expci.adj <- exp(WOD6Mbynalown.modpoiss.RR.coefci.adj)
WOD6Mbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(WOD6Mbynalown.modpoiss.RR.expci.adj, 2)
#ODP6M
ODP6Mbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(ODP6M), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(ODP6Mbynalown.modpoiss)
exp(coef(ODP6Mbynalown.modpoiss))
#95% CI for ODP6M
ODP6Mbynalown.modpoiss.RR.coefci.adj <- cbind(ODP6Mbynalown.modpoiss$coefficients, confint.default(ODP6Mbynalown.modpoiss))
ODP6Mbynalown.modpoiss.RR.expci.adj <- exp(ODP6Mbynalown.modpoiss.RR.coefci.adj)
ODP6Mbynalown.modpoiss.RR.expci.adj
#rounded to two decimal places
round(ODP6Mbynalown.modpoiss.RR.expci.adj, 2)
##############################################################
#########MULTIVARIATE MODELS USING DIFFERENT APPROACHES#######
##############################################################
#full multivariate model using every covariate regardless of significance
fitnalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(LOCALID) + factor(GENDER) + factor(agecat) + factor(RACE_cat) + factor(ED) + factor(HOMELESS) + factor(JAIL) + factor(STIM.freq) + factor(OPIOID.freq) + factor(WOD6M) + factor(ODP6M), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(fitnalown.modpoiss)
exp(coef(fitnalown.modpoiss))
#extract the coefficients and confidence intervals, exponentiate to get RR and 95% CI (using confint.default)
fitnalown.RR.coefci.adj <- cbind(fitnalown.modpoiss$coefficients, confint.default(fitnalown.modpoiss))
fitnalown.RR.expci.adj <- exp(fitnalown.RR.coefci.adj)
fitnalown.RR.expci.adj
round(fitnalown.RR.expci.adj, 2)
##############################################################
###ADJUSTED MULTIVARIATE MODIFIED POISSON INCLUDING ONLY THOSE SIGNIFICANT AT LESS THAN 0.2###
#fitnalown.modpoiss.approach1 <- geeglm(formula=NALOWN.binary ~ factor(LOCALID) + factor(agecat) + factor(ED) + factor(HOMELESS) + factor(JAIL), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
#summary(fitnalown.modpoiss.approach1)
#extract the coefficients and confidence intervals, exponentiate to get RR and 95% CI (using confint.default)
#fitnalown.modpoiss.approach1.RR.coefci.adj <- cbind(fitnalown.modpoiss.approach1$coefficients, confint.default(fitnalown.modpoiss.approach1))
#fitnalown.modpoiss.approach1.RR.expci.adj <- exp(fitnalown.modpoiss.approach1.RR.coefci.adj)
#fitnalown.modpoiss.approach1.RR.expci.adj
#round(fitnalown.modpoiss.approach1.RR.expci.adj, 2)
##############################################################
###ADJUSTED MULTIVARIATE MODIFIED POISSON INCLUDING ONLY THOSE SIGNIFICANT AT LESS THAN 0.05###
#fitnalown.modpoiss.approach2 <-  geeglm(formula=NALOWN.binary ~  factor(HOMELESS) + factor(JAIL), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
#summary(fitnalown.modpoiss.approach2)
#extract the coefficients and confidence intervals, exponentiate to get RR and 95% CI (using confint.default)
#fitnalown.modpoiss.approach2.RR.coefci.adj <- cbind(fitnalown.modpoiss.approach2$coefficients, confint.default(fitnalown.modpoiss.approach2))
#fitnalown.modpoiss.approach2.RR.expci.adj <- exp(fitnalown.modpoiss.approach2.RR.coefci.adj)
#fitnalown.modpoiss.approach2.RR.expci.adj
#round(fitnalown.modpoiss.approach2.RR.expci.adj, 2)
##############################################################
#########MULTIVARIATE MODELS USING DIFFERENT APPROACHES#######
##############################################################
#full multivariate model using every covariate regardless of significance
fitnalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(LOCALID) + factor(GENDER) + factor(agecat) + factor(RACE_cat) + factor(ED) + factor(HOMELESS) + factor(JAIL) + factor(STIM.freq) + factor(OPIOID.freq) + factor(OAT6month) + factor(WOD6M) + factor(ODP6M), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(fitnalown.modpoiss)
exp(coef(fitnalown.modpoiss))
#extract the coefficients and confidence intervals, exponentiate to get RR and 95% CI (using confint.default)
fitnalown.RR.coefci.adj <- cbind(fitnalown.modpoiss$coefficients, confint.default(fitnalown.modpoiss))
fitnalown.RR.expci.adj <- exp(fitnalown.RR.coefci.adj)
fitnalown.RR.expci.adj
round(fitnalown.RR.expci.adj, 2)
knitr::opts_chunk$set(echo = T, eval=T, warning = FALSE, message = FALSE, global.par=TRUE)
knitr::opts_knit$set(root.dir="~/Documents/GitHub/lizzyandshelley/Dataset")
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=85),tidy=TRUE)
library(base)
library(knitr)
library(dplyr)
library(here)
library(foreign)
library(labelled)
library(dplyr)
library(reshape2)
library(tableone)
library(forcats)
library(geepack)
library(doBy)
library(blm)
library(lmtest)
library(foreign)
library(MASS)
#set working directory
setwd("~/Documents/GitHub/lizzyandshelley/Dataset") #LIZZY
#load the data
df <- read.spss("CTC12month.SAV", use.value.labels = TRUE, to.data.frame=TRUE)
#get variable labels
attr(df, "variable.labels")
df.labels <- as.data.frame(attr(df, "variable.labels"))
QDSlabels <- data.frame(rownames(df.labels))
df.labels <- cbind(QDSlabels, df.labels)
names(df.labels) <- c("VAR_ID", "description")
rm(QDSlabels)
#USE THIS CODE TO LOOK UP A VARIABLE DESCRIPTION
#df.labels$description[df.labels$VAR_ID=="GENDER"]
df <- df[rowSums(is.na(df)) < 600,] #rows reduced from N=984 to N=536 people
#EXAMPLES OF SUBSETTING
#df <- subset(df, SUMINJ>0)
