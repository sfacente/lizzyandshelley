#NALEVER: Ever received naloxone
#Have you ever received naloxone (including narcan, intranasal narcan, and/or autoinjector
#of naloxone to use on yourself or other people?
table(df_men$NALEVER, useNA = "ifany")
#NAL6MOS: Received naloxone in the last 6 months
#Have you received naloxone in the last 6 months?
#table(df_men$NAL6MOS, useNA = "ifany")
#NAL6MOS.new: Received naloxone in the last 6 months (combined NALEVER and NAL6MOS to make NAL6MOS.new)
#Have you received naloxone in the last 6 months?
df_men$NAL6MOS.new <- ifelse(df_men$NALEVER=="Yes" & df_men$NAL6MOS=="Yes", 1, ifelse(df_men$NALEVER=="Yes" & df_men$NAL6MOS=="No", 0, ifelse(df_men$NALEVER=="No", 0, NA)))
table(df_men$NAL6MOS.new, useNA = "ifany")
#NALOWN: Own a dose of naloxone
#Do you currently have at least one dose of naloxone? (By this, we mean you possess
#or own your own naloxone dose)
table(df_men$NALOWN, useNA = "ifany")
#NALUSEandorLOSE: Have you used and/or used your naloxone in the last 6 months?
df_men$NALUSEandorLOSE <- ifelse((df_men$NALUSED=="Yes" | df_men$NALOSE=="Yes"), 1, 0)
table(df_men$NALUSEandorLOSE, useNA = "ifany")
#NALFILL: Got a refill of naloxone in the last 6 months
#After using or losing your naloxone, did you get a replacement or refill?
table(df_men$NALFILL, useNA = "ifany")
df_women <- subset(df, GENDER == "Female")
#NALEVER: Ever received naloxone
#Have you ever received naloxone (including narcan, intranasal narcan, and/or autoinjector
#of naloxone to use on yourself or other people?
table(df_women$NALEVER, useNA = "ifany")
#NAL6MOS: Received naloxone in the last 6 months
#Have you received naloxone in the last 6 months?
#table(df_women$NAL6MOS, useNA = "ifany")
#NAL6MOS.new: Received naloxone in the last 6 months (combined NALEVER and NAL6MOS to make NAL6MOS.new)
#Have you received naloxone in the last 6 months?
df_women$NAL6MOS.new <- ifelse(df_women$NALEVER=="Yes" & df_women$NAL6MOS=="Yes", 1, ifelse(df_women$NALEVER=="Yes" & df_women$NAL6MOS=="No", 0, ifelse(df_women$NALEVER=="No", 0, NA)))
table(df_women$NAL6MOS.new, useNA = "ifany")
#NALOWN: Own a dose of naloxone
#Do you currently have at least one dose of naloxone? (By this, we mean you possess
#or own your own naloxone dose)
table(df_women$NALOWN, useNA = "ifany")
#NALUSEandorLOSE: Have you used and/or used your naloxone in the last 6 months?
df_women$NALUSEandorLOSE <- ifelse((df_women$NALUSED=="Yes" | df_women$NALOSE=="Yes"), 1, 0)
table(df_women$NALUSEandorLOSE, useNA = "ifany")
#NALFILL: Got a refill of naloxone in the last 6 months
#After using or losing your naloxone, did you get a replacement or refill?
table(df_women$NALFILL, useNA = "ifany")
df_unhoused <- subset(df, HOMELESS == "Yes")
#NALEVER: Ever received naloxone
#Have you ever received naloxone (including narcan, intranasal narcan, and/or autoinjector
#of naloxone to use on yourself or other people?
table(df_unhoused$NALEVER, useNA = "ifany")
#NAL6MOS: Received naloxone in the last 6 months
#Have you received naloxone in the last 6 months?
#table(df_unhoused$NAL6MOS, useNA = "ifany")
#NAL6MOS.new: Received naloxone in the last 6 months (combined NALEVER and NAL6MOS to make NAL6MOS.new)
#Have you received naloxone in the last 6 months?
df_unhoused$NAL6MOS.new <- ifelse(df_unhoused$NALEVER=="Yes" & df_unhoused$NAL6MOS=="Yes", 1, ifelse(df_unhoused$NALEVER=="Yes" & df_unhoused$NAL6MOS=="No", 0, ifelse(df_unhoused$NALEVER=="No", 0, NA)))
table(df_unhoused$NAL6MOS.new, useNA = "ifany")
#NALOWN: Own a dose of naloxone
#Do you currently have at least one dose of naloxone? (By this, we mean you possess
#or own your own naloxone dose)
table(df_unhoused$NALOWN, useNA = "ifany")
#NALUSEandorLOSE: Have you used and/or used your naloxone in the last 6 months?
df_unhoused$NALUSEandorLOSE <- ifelse((df_unhoused$NALUSED=="Yes" | df_unhoused$NALOSE=="Yes"), 1, 0)
table(df_unhoused$NALUSEandorLOSE, useNA = "ifany")
#NALFILL: Got a refill of naloxone in the last 6 months
#After using or losing your naloxone, did you get a replacement or refill?
table(df_unhoused$NALFILL, useNA = "ifany")
df_housed <- subset(df, HOMELESS == "No")
#NALEVER: Ever received naloxone
#Have you ever received naloxone (including narcan, intranasal narcan, and/or autoinjector
#of naloxone to use on yourself or other people?
table(df_housed$NALEVER, useNA = "ifany")
#NAL6MOS: Received naloxone in the last 6 months
#Have you received naloxone in the last 6 months?
#table(df_housed$NAL6MOS, useNA = "ifany")
#NAL6MOS.new: Received naloxone in the last 6 months (combined NALEVER and NAL6MOS to make NAL6MOS.new)
#Have you received naloxone in the last 6 months?
df_housed$NAL6MOS.new <- ifelse(df_housed$NALEVER=="Yes" & df_housed$NAL6MOS=="Yes", 1, ifelse(df_housed$NALEVER=="Yes" & df_housed$NAL6MOS=="No", 0, ifelse(df_housed$NALEVER=="No", 0, NA)))
table(df_housed$NAL6MOS.new, useNA = "ifany")
#NALOWN: Own a dose of naloxone
#Do you currently have at least one dose of naloxone? (By this, we mean you possess
#or own your own naloxone dose)
table(df_housed$NALOWN, useNA = "ifany")
#NALUSEandorLOSE: Have you used and/or used your naloxone in the last 6 months?
df_housed$NALUSEandorLOSE <- ifelse((df_housed$NALUSED=="Yes" | df_housed$NALOSE=="Yes"), 1, 0)
table(df_housed$NALUSEandorLOSE, useNA = "ifany")
#NALFILL: Got a refill of naloxone in the last 6 months
#After using or losing your naloxone, did you get a replacement or refill?
table(df_housed$NALFILL, useNA = "ifany")
#city
table(df$LOCALID, useNA = "ifany")
#gender (combine other and transgender into other so 3 cat variable)
df$GENDER <- df$GENDER %>% fct_collapse("Other" = c("Transgender","Other"))
table(df$GENDER, useNA = "ifany")
#age
table(df$AGE, useNA = "ifany")
table(df$agecat, useNA = "ifany") #(<30, 30 to 39, 40-49, 50 or more) MAY WANT TO RECUT THESE MYSELF
#education (High school education or more)
table(df$ED, useNA = "ifany")
#homelessness (Consider Self Homeless)
table(df$HOMELESS, useNA = "ifany")
#incarceration (Any jail in the last 6 months)
table(df$JAIL, useNA = "ifany")
#users of certain injection drugs
table(df$CRKINJ, useNA = "ifany") #crack injection
table(df$CCINJ, useNA = "ifany") #powder cocaine injection
table(df$MTINJ, useNA = "ifany") #meth injection
table(df$STINJ, useNA = "ifany") #prescription stimulant injection
table(df$HRINJ, useNA = "ifany") #heroin injection
table(df$OPINJ, useNA = "ifany") #NMPO injection
#any stimulant injection (composite)
df$ANYSTIMINJ <- ifelse(df$CRKINJ=="Yes" | df$CCINJ=="Yes" | df$MTINJ=="Yes" | df$STINJ=="Yes", 1, ifelse(df$CRKINJ=="No" & df$CCINJ=="No" & df$MTINJ=="No" & df$STINJ=="No", 0, NA))
df$ANYSTIMINJ <- as.factor(df$ANYSTIMINJ)
table(df$ANYSTIMINJ, useNA = "ifany")
#any opioid injection (composite)
df$ANYOPIATEINJ <- ifelse(df$HRINJ=="Yes" | df$OPINJ=="Yes", 1, ifelse(df$HRINJ=="No" & df$OPINJ=="No", 0, NA))
df$ANYOPIATEINJ <- as.factor(df$ANYOPIATEINJ)
table(df$ANYOPIATEINJ, useNA = "ifany")
#overdose witnessed (witnessed an overdose in the last 6 months)
table(df$WOD6M, useNA = "ifany")
#personal overdose history (Overdosed in the last 6 months)
table(df$ODP6M, useNA = "ifany")
#years since first injection
table(df$yrsinj, useNA = "ifany") #integer
table(df$injyrcat, useNA = "ifany") #categorical
#syringe service access
table(df$NDLSRCF, useNA = "ifany") #Most Frequent Needle Source Last 6 Mos.
table(df$NMNDLES, useNA = "ifany") #Number of new needles obtained for your own use in last 30 days
# Identify the variables of interest
myVars <- c("LOCALID", "GENDER","agecat","ED","HOMELESS", "JAIL", "ANYSTIMINJ", "ANYOPIATEINJ", "WOD6M", "ODP6M")
# Specify which of the variables are categorical
catVars <- c("LOCALID", "GENDER", "agecat", "ED","HOMELESS", "JAIL", "ANYSTIMINJ", "ANYOPIATEINJ", "WOD6M", "ODP6M")
# Create an overall table 1
#REMINDER THAT TABLE1 PACKAGE DOES WEIRD STUFF WITH MISSING, SO CHECK N (PERCENTAGE) WITH CROSSTABS
table1.overall <- CreateTableOne(vars= myVars,
data= df,
factorVars = catVars)
print(table1.overall, showAllLevels = TRUE, missing = FALSE)
# Create a table 1 stratified by receiving naloxone in the last 6 mos (1 = ever received in last 6 mos, 0 = never received in last 6 mos)
##REMINDER THAT TABLE1 PACKAGE DOES WEIRD STUFF WITH MISSING, SO CHECK N (PERCENTAGE) WITH CROSSTABS
table1byNAL6MOS.new <- CreateTableOne(vars=myVars,
data=df,
factorVars = catVars,
strata="NAL6MOS.new")
print(table1byNAL6MOS.new, showAllLevels = TRUE, test=TRUE, missing = FALSE)
#glm(NAL6MOS.new ~ factor(LOCALID), data=df, family=binomial(log))
#glm(NAL6MOS.new ~ factor(GENDER), data=df, family=binomial(log))
#glm(NAL6MOS.new ~ factor(agecat), data=df, family=binomial(log))
#glm(NAL6MOS.new ~ factor(ED), data=df, family=binomial(log))
#glm(NAL6MOS.new ~ factor(HOMELESS), data=df, family=binomial(log))
#glm(NAL6MOS.new ~ factor(JAIL), data=df, family=binomial(log))
#glm(NAL6MOS.new ~ factor(ANYSTIMINJ), data=df, family=binomial(log))
#glm(NAL6MOS.new ~ factor(ANYOPIATEINJ), data=df, family=binomial(log))
#glm(NAL6MOS.new ~ factor(WOD6M), data=df, family=binomial(log))
#glm(NAL6MOS.new ~ factor(ODP6M), data=df, family=binomial(log))
#glm(NAL6MOS.new ~ factor(LOCALID) + factor(GENDER) + factor(agecat) + factor(ED) + factor(HOMELESS) + factor(JAIL) + factor(ANYSTIMINJ) + factor(ANYOPIATEINJ) + factor(WOD6M) + factor(ODP6M), data=df, family=binomial(log))
#check column percentages of bivariates. this is because prop.table will show missing percentages whereas tableone package doesn't include the missing data when calculating column percents.
#prop.table(table(df$X, df$NAL6MOS.new, useNA = "ifany"),2)
require(geepack)
#subset the data with complete observations because geepack is picky (N=527)
df.modpoiss <- subset(df, select=c(SUBJECT, NAL6MOS.new, LOCALID, GENDER, agecat, ED, HOMELESS, JAIL, ANYSTIMINJ, ANYOPIATEINJ, WOD6M, ODP6M))
df.modpoiss <- na.omit(df.modpoiss)
#CITY
localIDbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(LOCALID), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(localIDbynal6mos.modpoiss)
exp(coef(localIDbynal6mos.modpoiss))
#95% CI for city
localIDbynal6mos.modpoiss.RR.coefci.adj <- cbind(localIDbynal6mos.modpoiss$coefficients, confint.default(localIDbynal6mos.modpoiss))
localIDbynal6mos.modpoiss.RR.expci.adj <- exp(localIDbynal6mos.modpoiss.RR.coefci.adj)
localIDbynal6mos.modpoiss.RR.expci.adj
#GENDER
genderbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(GENDER), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(genderbynal6mos.modpoiss)
exp(coef(genderbynal6mos.modpoiss))
#95% CI for gender
genderbynal6mos.modpoiss.RR.coefci.adj <- cbind(genderbynal6mos.modpoiss$coefficients, confint.default(genderbynal6mos.modpoiss))
genderbynal6mos.modpoiss.RR.expci.adj <- exp(genderbynal6mos.modpoiss.RR.coefci.adj)
genderbynal6mos.modpoiss.RR.expci.adj
#agecat
agecatbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(agecat), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(agecatbynal6mos.modpoiss)
exp(coef(agecatbynal6mos.modpoiss))
#95% CI for agecat
agecatbynal6mos.modpoiss.RR.coefci.adj <- cbind(agecatbynal6mos.modpoiss$coefficients, confint.default(agecatbynal6mos.modpoiss))
agecatbynal6mos.modpoiss.RR.expci.adj <- exp(agecatbynal6mos.modpoiss.RR.coefci.adj)
agecatbynal6mos.modpoiss.RR.expci.adj
#ED
edbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(ED), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(edbynal6mos.modpoiss)
exp(coef(edbynal6mos.modpoiss))
#95% CI for ed
edbynal6mos.modpoiss.RR.coefci.adj <- cbind(edbynal6mos.modpoiss$coefficients, confint.default(edbynal6mos.modpoiss))
edbynal6mos.modpoiss.RR.expci.adj <- exp(edbynal6mos.modpoiss.RR.coefci.adj)
edbynal6mos.modpoiss.RR.expci.adj
#HOMELESS
homelessbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(HOMELESS), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(homelessbynal6mos.modpoiss)
exp(coef(homelessbynal6mos.modpoiss))
#95% CI for homeless
homelessbynal6mos.modpoiss.RR.coefci.adj <- cbind(homelessbynal6mos.modpoiss$coefficients, confint.default(homelessbynal6mos.modpoiss))
homelessbynal6mos.modpoiss.RR.expci.adj <- exp(homelessbynal6mos.modpoiss.RR.coefci.adj)
homelessbynal6mos.modpoiss.RR.expci.adj
#JAIL
jailbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(JAIL), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(jailbynal6mos.modpoiss)
exp(coef(jailbynal6mos.modpoiss))
#95% CI for jail
jailbynal6mos.modpoiss.RR.coefci.adj <- cbind(jailbynal6mos.modpoiss$coefficients, confint.default(jailbynal6mos.modpoiss))
jailbynal6mos.modpoiss.RR.expci.adj <- exp(jailbynal6mos.modpoiss.RR.coefci.adj)
jailbynal6mos.modpoiss.RR.expci.adj
#ANYSTIMINJ
anystiminjbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(ANYSTIMINJ), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(anystiminjbynal6mos.modpoiss)
exp(coef(anystiminjbynal6mos.modpoiss))
#95% CI for anystiminj
anystiminjbynal6mos.modpoiss.RR.coefci.adj <- cbind(anystiminjbynal6mos.modpoiss$coefficients, confint.default(anystiminjbynal6mos.modpoiss))
anystiminjbynal6mos.modpoiss.RR.expci.adj <- exp(anystiminjbynal6mos.modpoiss.RR.coefci.adj)
anystiminjbynal6mos.modpoiss.RR.expci.adj
#ANYOPIATEINJ
anyopiateinjbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(ANYOPIATEINJ), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(anyopiateinjbynal6mos.modpoiss)
exp(coef(anyopiateinjbynal6mos.modpoiss))
#95% CI for anyopiateinj
anyopiateinjbynal6mos.modpoiss.RR.coefci.adj <- cbind(anyopiateinjbynal6mos.modpoiss$coefficients, confint.default(anyopiateinjbynal6mos.modpoiss))
anyopiateinjbynal6mos.modpoiss.RR.expci.adj <- exp(anyopiateinjbynal6mos.modpoiss.RR.coefci.adj)
anyopiateinjbynal6mos.modpoiss.RR.expci.adj
#WOD6M
WOD6Mbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(WOD6M), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(WOD6Mbynal6mos.modpoiss)
exp(coef(WOD6Mbynal6mos.modpoiss))
#95% CI for WOD6M
WOD6Mbynal6mos.modpoiss.RR.coefci.adj <- cbind(WOD6Mbynal6mos.modpoiss$coefficients, confint.default(WOD6Mbynal6mos.modpoiss))
WOD6Mbynal6mos.modpoiss.RR.expci.adj <- exp(WOD6Mbynal6mos.modpoiss.RR.coefci.adj)
WOD6Mbynal6mos.modpoiss.RR.expci.adj
#ODP6M
ODP6Mbynal6mos.modpoiss <- geeglm(formula=NAL6MOS.new ~ factor(ODP6M), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(ODP6Mbynal6mos.modpoiss)
exp(coef(ODP6Mbynal6mos.modpoiss))
#95% CI for ODP6M
ODP6Mbynal6mos.modpoiss.RR.coefci.adj <- cbind(ODP6Mbynal6mos.modpoiss$coefficients, confint.default(ODP6Mbynal6mos.modpoiss))
ODP6Mbynal6mos.modpoiss.RR.expci.adj <- exp(ODP6Mbynal6mos.modpoiss.RR.coefci.adj)
ODP6Mbynal6mos.modpoiss.RR.expci.adj
#multivariate modified poisson model (assuming we are using a full model with everything)
fitnal6mos.modpoiss  <- geeglm(formula=NAL6MOS.new ~ factor(LOCALID) + factor(GENDER) + factor(agecat) + factor(ED) + factor(HOMELESS) + factor(JAIL) + factor(ANYSTIMINJ) + factor(ANYOPIATEINJ) + factor(WOD6M) + factor(ODP6M), data=df.modpoiss, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(fitnal6mos.modpoiss)
#extract the coefficients and confidence intervals, exponentiate to get RR and 95% CI (using confint.default)
fitnal6mos.RR.coefci.adj <- cbind(fitnal6mos.modpoiss$coefficients, confint.default(fitnal6mos.modpoiss))
fitnal6mos.RR.expci.adj <- exp(fitnal6mos.RR.coefci.adj)
fitnal6mos.RR.expci.adj
#getting coefficients and standard errors using regular glm and the sandwich estimator
#fitNAL6MOS.new <- glm(NAL6MOS.new ~ factor(LOCALID) + factor(GENDER) + factor(agecat) + factor(ED) + factor(HOMELESS) + factor(JAIL) + factor(ANYSTIMINJ) + factor(ANYOPIATEINJ) + factor(WOD6M) + factor(ODP6M), data=df, family=binomial(log))
#library(sandwich) # to get robust estimators
#library(lmtest) # to test coefficients
#coeftest(fitNAL6MOS.new, vcov = sandwich)
#exp(coef(fitNAL6MOS.new)) #to get RR
## CIs
#localID
#exp(beta + qnorm(0.05 / 2) * SE) # lower 95% CI
#exp(beta  + qnorm(1 - 0.05 / 2) * SE) #upper 95% CI
#subset the data to those who have received naloxone in the last 6 mos
df_nal6mos <- subset(df, NAL6MOS.new == 1) #N = 265 who have received naloxone in the last 6 mos
#checking frequencies are correct
table(df_nal6mos$NALOWN, useNA = "ifany")
#Create a table 1 not stratified by any outcome variable, just for this subset of N = 265 PWID who received naloxone in the last 6mos
table1.subset.receivednal6mos <- CreateTableOne(vars= myVars,
data= df_nal6mos,
factorVars = catVars)
print(table1.subset.receivednal6mos, showAllLevels = TRUE, missing = FALSE)
# Create a table 1 stratified by currently owning naloxone
table1byNALOWN <- CreateTableOne(vars=myVars,
data=df_nal6mos,
factorVars = catVars,
strata="NALOWN")
print(table1byNALOWN, showAllLevels = TRUE, missing = FALSE)
#check column percentages of bivariates. this is because prop.table will show missing percentages whereas tableone package doesn't include the missing data when calculating column percents.
#prop.table(table(df_nal6mos$X, df_nal6mosf$NALOWN, useNA = "ifany"),2)
require(geepack)
#subset the data with complete observations because geepack is picky (N= 259)
df.modpoiss.nalown <- subset(df_nal6mos, select=c(SUBJECT, NALOWN, LOCALID, GENDER, agecat, ED, HOMELESS, JAIL, ANYSTIMINJ, ANYOPIATEINJ, WOD6M, ODP6M))
df.modpoiss.nalown <- na.omit(df.modpoiss.nalown)
#recode NALOWN as binary numeric since factor isn't working
df.modpoiss.nalown$NALOWN.binary<-ifelse(df.modpoiss.nalown$NALOWN=='Yes', 1,0)
#LOCALID
localIDbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(LOCALID), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(localIDbynalown.modpoiss)
exp(coef(localIDbynalown.modpoiss))
#95% CI for localID
localIDbynalown.modpoiss.RR.coefci.adj <- cbind(localIDbynalown.modpoiss$coefficients, confint.default(localIDbynalown.modpoiss))
localIDbynalown.modpoiss.RR.expci.adj <- exp(localIDbynalown.modpoiss.RR.coefci.adj)
localIDbynalown.modpoiss.RR.expci.adj
#GENDER
genderbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(GENDER), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(genderbynalown.modpoiss)
exp(coef(genderbynalown.modpoiss))
#95% CI for gender
genderbynalown.modpoiss.RR.coefci.adj <- cbind(genderbynalown.modpoiss$coefficients, confint.default(genderbynalown.modpoiss))
genderbynalown.modpoiss.RR.expci.adj <- exp(genderbynalown.modpoiss.RR.coefci.adj)
genderbynalown.modpoiss.RR.expci.adj
#agecat
agecatbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(agecat), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(agecatbynalown.modpoiss)
exp(coef(agecatbynalown.modpoiss))
#95% CI for agecat
agecatbynalown.modpoiss.RR.coefci.adj <- cbind(agecatbynalown.modpoiss$coefficients, confint.default(agecatbynalown.modpoiss))
agecatbynalown.modpoiss.RR.expci.adj <- exp(agecatbynalown.modpoiss.RR.coefci.adj)
agecatbynalown.modpoiss.RR.expci.adj
#ED
edbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(ED), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(edbynalown.modpoiss)
exp(coef(edbynalown.modpoiss))
#95% CI for ed
edbynalown.modpoiss.RR.coefci.adj <- cbind(edbynalown.modpoiss$coefficients, confint.default(edbynalown.modpoiss))
edbynalown.modpoiss.RR.expci.adj <- exp(edbynalown.modpoiss.RR.coefci.adj)
edbynalown.modpoiss.RR.expci.adj
#HOMELESS
homelessbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(HOMELESS), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(homelessbynalown.modpoiss)
exp(coef(homelessbynalown.modpoiss))
#95% CI for homeless
homelessbynalown.modpoiss.RR.coefci.adj <- cbind(homelessbynalown.modpoiss$coefficients, confint.default(homelessbynalown.modpoiss))
homelessbynalown.modpoiss.RR.expci.adj <- exp(homelessbynalown.modpoiss.RR.coefci.adj)
homelessbynalown.modpoiss.RR.expci.adj
#JAIL
jailbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(JAIL), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(jailbynalown.modpoiss)
exp(coef(jailbynalown.modpoiss))
#95% CI for jail
jailbynalown.modpoiss.RR.coefci.adj <- cbind(jailbynalown.modpoiss$coefficients, confint.default(jailbynalown.modpoiss))
jailbynalown.modpoiss.RR.expci.adj <- exp(jailbynalown.modpoiss.RR.coefci.adj)
jailbynalown.modpoiss.RR.expci.adj
#ANYSTIMINJ
anystiminjbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(ANYSTIMINJ), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(anystiminjbynalown.modpoiss)
exp(coef(anystiminjbynalown.modpoiss))
#95% CI for anystiminj
anystiminjbynalown.modpoiss.RR.coefci.adj <- cbind(anystiminjbynalown.modpoiss$coefficients, confint.default(anystiminjbynalown.modpoiss))
anystiminjbynalown.modpoiss.RR.expci.adj <- exp(anystiminjbynalown.modpoiss.RR.coefci.adj)
anystiminjbynalown.modpoiss.RR.expci.adj
#ANYOPIATEINJ
anyopiateinjbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(ANYOPIATEINJ), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(anyopiateinjbynalown.modpoiss)
exp(coef(anyopiateinjbynalown.modpoiss))
#95% CI for anyopiateinj
anyopiateinjbynalown.modpoiss.RR.coefci.adj <- cbind(anyopiateinjbynalown.modpoiss$coefficients, confint.default(anyopiateinjbynalown.modpoiss))
anyopiateinjbynalown.modpoiss.RR.expci.adj <- exp(anyopiateinjbynalown.modpoiss.RR.coefci.adj)
anyopiateinjbynalown.modpoiss.RR.expci.adj
#WOD6M
WOD6Mbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(WOD6M), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(WOD6Mbynalown.modpoiss)
exp(coef(WOD6Mbynalown.modpoiss))
#95% CI for WOD6M
WOD6Mbynalown.modpoiss.RR.coefci.adj <- cbind(WOD6Mbynalown.modpoiss$coefficients, confint.default(WOD6Mbynalown.modpoiss))
WOD6Mbynalown.modpoiss.RR.expci.adj <- exp(WOD6Mbynalown.modpoiss.RR.coefci.adj)
WOD6Mbynalown.modpoiss.RR.expci.adj
#ODP6M
ODP6Mbynalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(ODP6M), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(ODP6Mbynalown.modpoiss)
exp(coef(ODP6Mbynalown.modpoiss))
#95% CI for ODP6M
ODP6Mbynalown.modpoiss.RR.coefci.adj <- cbind(ODP6Mbynalown.modpoiss$coefficients, confint.default(ODP6Mbynalown.modpoiss))
ODP6Mbynalown.modpoiss.RR.expci.adj <- exp(ODP6Mbynalown.modpoiss.RR.coefci.adj)
ODP6Mbynalown.modpoiss.RR.expci.adj
#multivariate model (assuming we include everything to make it a full model)
fitnalown.modpoiss <- geeglm(formula=NALOWN.binary ~ factor(LOCALID) + factor(GENDER) + factor(agecat) + factor(ED) + factor(HOMELESS) + factor(JAIL) + factor(ANYSTIMINJ) + factor(ANYOPIATEINJ) + factor(WOD6M) + factor(ODP6M), data=df.modpoiss.nalown, id=SUBJECT, family=poisson(link="log"), corstr = "exchangeable")
summary(fitnalown.modpoiss)
exp(coef(fitnalown.modpoiss))
#extract the coefficients and confidence intervals, exponentiate to get RR and 95% CI (using confint.default)
fitnalown.RR.coefci.adj <- cbind(fitnalown.modpoiss$coefficients, confint.default(fitnalown.modpoiss))
fitnalown.RR.expci.adj <- exp(fitnalown.RR.coefci.adj)
fitnalown.RR.expci.adj
#NALEVER: Ever received naloxone
#Have you ever received naloxone (including narcan, intranasal narcan, and/or autoinjector
#of naloxone to use on yourself or other people?
tbl.NALEVER
#NAL6MOS.new: Received naloxone in the last 6 months (combined NALEVER and NAL6MOS to make NAL6MOS.new)
#Have you received naloxone in the last 6 months?
tbl.NAL6MOS.new
#NALOWN: Own a dose of naloxone
#Do you currently have at least one dose of naloxone? (By this, we mean you possess
#or own your own naloxone dose)
tbl.NALOWN
#NALUSEandorLOSE: Have you used and/or used your naloxone in the last 6 months?
tbl.NALUSEandorLOSE
#NALFILL: Got a refill of naloxone in the last 6 months
#After using or losing your naloxone, did you get a replacement or refill?
tbl.NALFILL
prop.table(tbl.NALEVER)
prop.table(tbl.NAL6MOS.new)
prop.table(tbl.NALOWN)
prop.table(table(df_SF$NALEVER, useNA = "ifany") )
prop.table(table(df_SF$NA6OS.NEW, useNA = "ifany") )
prop.table(table(df_SF$NALEVER, useNA = "ifany"))
prop.table(table(df_SF$NAL6MOS.new, useNA = "ifany"))
prop.table(table(df_SF$NALOWN, useNA = "ifany"))
prop.table(table(df_SF$NALUSEandorLOSE, useNA = "ifany"))
prop.table(table(df_SF$NALFILL, useNA = "ifany"))
prop.table(table(df_nal6mos$NALUSEandorLOSE, useNA = "ifany"))
prop.table(table(df_nal6mos$NALFILL, useNA = "ifany"))
#city
table(df$LOCALID, useNA = "ifany")
#city
table(df$LOCALID, useNA = "ifany")
prop.table(table(df$LOCALID, useNA = "ifany"))
table(df$GENDER, useNA = "ifany")
prop.table(table(df$GENDER, useNA = "ifany"))
table(df$agecat, useNA = "ifany") #(<30, 30 to 39, 40-49, 50 or more) MAY WANT TO RECUT THESE MYSELF
prop.table(table(df$agecat, useNA = "ifany"))
#education (High school education or more)
table(df$ED, useNA = "ifany")
prop.table(table(df$ED, useNA = "ifany"))
#homelessness (Consider Self Homeless)
table(df$HOMELESS, useNA = "ifany")
prop.table(table(df$HOMELESS, useNA = "ifany"))
#incarceration (Any jail in the last 6 months)
table(df$JAIL, useNA = "ifany")
prop.table(table(df$JAIL, useNA = "ifany"))
table(df$ANYSTIMINJ, useNA = "ifany")
prop.table(table(df$ANYSTIMINJ, useNA = "ifany"))
table(df$ANYOPIATEINJ, useNA = "ifany")
prop.table(table(df$ANYOPIATEINJ, useNA = "ifany"))
#overdose witnessed (witnessed an overdose in the last 6 months)
table(df$WOD6M, useNA = "ifany")
prop.table(table(df$WOD6M, useNA = "ifany"))
#personal overdose history (Overdosed in the last 6 months)
table(df$ODP6M, useNA = "ifany")
prop.table(table(df$ODP6M, useNA = "ifany"))
table(df$X, df$NAL6MOS.new, useNA = "ifany"),2
table(df$LOCALID, df$NAL6MOS.new, useNA = "ifany")
prop.table(table(df$LOCALID, df$NAL6MOS.new, useNA = "ifany"))
table(df$LOCALID, df$NAL6MOS.new, useNA = "ifany")
prop.table(table(df$LOCALID, df$NAL6MOS.new, useNA = "ifany"),2)
table(df$GENDER, df$NAL6MOS.new, useNA = "ifany")
prop.table(table(df$GENDER, df$NAL6MOS.new, useNA = "ifany"),2)
round(prop.table(table(df$GENDER, df$NAL6MOS.new, useNA = "ifany"),2),2)
round(prop.table(table(df$GENDER, df$NAL6MOS.new, useNA = "ifany"),2),3)
table(df$LOCALID, df$NAL6MOS.new, useNA = "ifany")
round(prop.table(table(df$LOCALID, df$NAL6MOS.new, useNA = "ifany"),2),3)
table(df$GENDER, df$NAL6MOS.new, useNA = "ifany")
round(prop.table(table(df$GENDER, df$NAL6MOS.new, useNA = "ifany"),2),3)
table(df$agecat, df$NAL6MOS.new, useNA = "ifany")
round(prop.table(table(df$agecat, df$NAL6MOS.new, useNA = "ifany"),2),3)
table(df$ed, df$NAL6MOS.new, useNA = "ifany")
table(df$ED, df$NAL6MOS.new, useNA = "ifany")
round(prop.table(table(df$ED, df$NAL6MOS.new, useNA = "ifany"),2),3)
table(df$HOMELESS, df$NAL6MOS.new, useNA = "ifany")
round(prop.table(table(df$HOMELESS, df$NAL6MOS.new, useNA = "ifany"),2),3)
table(df$JAIL, df$NAL6MOS.new, useNA = "ifany")
round(prop.table(table(df$JAIL, df$NAL6MOS.new, useNA = "ifany"),2),3)
table(df$ANYSTIMINJ, df$NAL6MOS.new, useNA = "ifany")
round(prop.table(table(df$ANYSTIMINJ, df$NAL6MOS.new, useNA = "ifany"),2),3)
table(df$ANYOPIATEINJ, df$NAL6MOS.new, useNA = "ifany")
round(prop.table(table(df$ANYOPIATEINJ, df$NAL6MOS.new, useNA = "ifany"),2),3)
table(df$WOD6M, df$NAL6MOS.new, useNA = "ifany")
round(prop.table(table(df$WOD6M, df$NAL6MOS.new, useNA = "ifany"),2),3)
table(df$ODP6M, df$NAL6MOS.new, useNA = "ifany")
round(prop.table(table(df$ODP6M, df$NAL6MOS.new, useNA = "ifany"),2),3)
table(df_nal6mos$LOCALID, df_nal6mosf$NALOWN, useNA = "ifany")
table(df_nal6mos$X, df_nal6mos$NALOWN, useNA = "ifany")
table(df_nal6mos$LOCALID, df_nal6mos$NALOWN, useNA = "ifany")
round(prop.table(table(df_nal6mos$LOCALID, df_nal6mos$NALOWN, useNA = "ifany"),2),3)
table(df_nal6mos$LOCALID, useNA = "ifany")
round(prop.table(table(df_nal6mos$LOCALID, useNA = "ifany"),3)
table(df_nal6mos$LOCALID, useNA = "ifany")
round(prop.table(table(df_nal6mos$LOCALID, useNA = "ifany")),3)
table(df_nal6mos$LOCALID, useNA = "ifany")
round(prop.table(table(df_nal6mos$LOCALID, useNA = "ifany")),3)
table(df_nal6mos$GENDER, useNA = "ifany")
round(prop.table(table(df_nal6mos$GENDER, useNA = "ifany")),3)
table(df_nal6mos$agecat, useNA = "ifany")
round(prop.table(table(df_nal6mos$agecat, useNA = "ifany")),3)
table(df_nal6mos$ED, useNA = "ifany")
round(prop.table(table(df_nal6mos$ED, useNA = "ifany")),3)
table(df_nal6mos$HOMELESS, useNA = "ifany")
round(prop.table(table(df_nal6mos$HOMELESS, useNA = "ifany")),3)
table(df_nal6mos$JAIL, useNA = "ifany")
round(prop.table(table(df_nal6mos$JAIL, useNA = "ifany")),3)
table(df_nal6mos$ANYSTIMINJ, useNA = "ifany")
round(prop.table(table(df_nal6mos$ANYSTIMINJ, useNA = "ifany")),3)
table(df_nal6mos$ANYOPIATEINJ, useNA = "ifany")
round(prop.table(table(df_nal6mos$ANYOPIATEINJ, useNA = "ifany")),3)
table(df_nal6mos$WOD6M, useNA = "ifany")
round(prop.table(table(df_nal6mos$WOD6M, useNA = "ifany")),3)
table(df_nal6mos$ODP6M, useNA = "ifany")
round(prop.table(table(df_nal6mos$ODP6M, useNA = "ifany")),3)
table(df$NAL6MOS.new, useNA = "ifany")
table(df$NAL6MOS.new, df$NALOWN, useNA = "ifany")
table(df_nal6mos$LOCALID, df_nal6mos$NALOWN, useNA = "ifany")
round(prop.table(table(df_nal6mos$LOCALID, df_nal6mos$NALOWN, useNA = "ifany"),2),3)
table(df_nal6mos$GENDER, df_nal6mos$NALOWN, useNA = "ifany")
round(prop.table(table(df_nal6mos$GENDER, df_nal6mos$NALOWN, useNA = "ifany"),2),3)
table(df_nal6mos$agecat, df_nal6mos$NALOWN, useNA = "ifany")
round(prop.table(table(df_nal6mos$agecat, df_nal6mos$NALOWN, useNA = "ifany"),2),3)
table(df_nal6mos$ED, df_nal6mos$NALOWN, useNA = "ifany")
round(prop.table(table(df_nal6mos$ED, df_nal6mos$NALOWN, useNA = "ifany"),2),3)
table(df_nal6mos$HOMELESS, df_nal6mos$NALOWN, useNA = "ifany")
round(prop.table(table(df_nal6mos$HOMELESS, df_nal6mos$NALOWN, useNA = "ifany"),2),3)
table(df_nal6mos$JAIL, df_nal6mos$NALOWN, useNA = "ifany")
round(prop.table(table(df_nal6mos$JAIL, df_nal6mos$NALOWN, useNA = "ifany"),2),3)
table(df_nal6mos$ANYSTIMINJ, df_nal6mos$NALOWN, useNA = "ifany")
round(prop.table(table(df_nal6mos$ANYSTIMINJ, df_nal6mos$NALOWN, useNA = "ifany"),2),3)
table(df_nal6mos$ANYOPIATEINJ, df_nal6mos$NALOWN, useNA = "ifany")
round(prop.table(table(df_nal6mos$ANYOPIATEINJ, df_nal6mos$NALOWN, useNA = "ifany"),2),3)
table(df_nal6mos$WOD6M, df_nal6mos$NALOWN, useNA = "ifany")
round(prop.table(table(df_nal6mos$WOD6M, df_nal6mos$NALOWN, useNA = "ifany"),2),3)
table(df_nal6mos$ODP6M, df_nal6mos$NALOWN, useNA = "ifany")
round(prop.table(table(df_nal6mos$ODP6M, df_nal6mos$NALOWN, useNA = "ifany"),2),3)
fitnal6mos.RR.expci.adj
summary(fitnal6mos.modpoiss)
fitnalown.RR.expci.adj
fitnalown.RR.expci.adj
fitnalown.RR.expci.adj
exp(coef(fitnalown.modpoiss))
summary(fitnalown.modpoiss)
fitnalown.RR.expci.adj
